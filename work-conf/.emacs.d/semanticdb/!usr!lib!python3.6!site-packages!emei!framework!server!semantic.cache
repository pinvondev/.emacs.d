;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"
rccpserver.py
\"\"\"" code nil nil [72 93])
            ("os" include nil nil [96 105])
            ("time" include nil nil [107 118])
            ("click" include nil nil [119 131])
            ("oslo_config" include nil nil [133 160])
            ("emei.framework.server.service.serverfactory" include nil nil [161 251])
            ("emei.framework.server.service.serverbase" include nil nil [252 314])
            ("emei.framework.exceptions" include nil nil [315 388])
            ("emei.framework.log" include nil nil [389 423])
            ("emei.base.singleton" include nil nil [424 469])
            ("emei.framework.debug.debug" include nil nil [470 520])
            ("RCCPServer" type
               (:documentation "
    RCCPServer, 单例
    "
                :superclasses ("SingletonBase")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("\"\"\"
        读取配置：注册global option配置到conf中
        创建数据库：self.db = 从conf读取db链接配置创建数据库
        通过conf配置标签名创建多个server
        :param conf_file: 配置文件 *.conf
        :param manager: 业务模块manager
        \"\"\"" code nil (reparse-symbol indented_block_body) [682 881])
                            ("self" variable nil (reparse-symbol indented_block_body) [955 972])
                            ("self" variable nil (reparse-symbol indented_block_body) [981 1009])
                            ("self" variable nil (reparse-symbol indented_block_body) [1018 1040])
                            ("self" variable nil (reparse-symbol indented_block_body) [1049 1068])
                            ("self" variable nil (reparse-symbol indented_block_body) [1077 1102])
                            ("self" code nil (reparse-symbol indented_block_body) [1135 1176])
                            ("self" code nil (reparse-symbol indented_block_body) [1209 1239])
                            ("self" variable nil (reparse-symbol indented_block_body) [1355 1433])
                            ("self" variable nil (reparse-symbol indented_block_body) [1443 1478])
                            ("self" variable nil (reparse-symbol indented_block_body) [1487 1521])
                            ("self" variable nil (reparse-symbol indented_block_body) [1530 1564])
                            ("self" variable nil (reparse-symbol indented_block_body) [1573 1606])
                            ("self" variable nil (reparse-symbol indented_block_body) [1615 1652])
                            ("self" variable nil (reparse-symbol indented_block_body) [1661 1697]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [642 646])
                            ("conf_file" variable nil (reparse-symbol function_parameters) [648 657])
                            ("manager" variable nil (reparse-symbol function_parameters) [659 666]))                          
                        :documentation "
        读取配置：注册global option配置到conf中
        创建数据库：self.db = 从conf读取db链接配置创建数据库
        通过conf配置标签名创建多个server
        :param conf_file: 配置文件 *.conf
        :param manager: 业务模块manager
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [629 1698])
                    ("get_rccpserver" function
                       (:documentation "
        获取RCCPServer实例对象
        :return:  RCCPServer object
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [1739 1742]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [1703 2055])
                    ("get_manager" function
                       (:documentation "
        获取注册到RCCPServer的manager(class or object)
        :return: manager
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [2093 2096]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [2060 2430])
                    ("_create_server" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2454 2458])
                            ("conf" variable nil (reparse-symbol function_parameters) [2460 2464]))                          
                        :documentation "
        根据配置中标签创建不同类型Server
        :param conf:  oslo.config cfg对象
        :return:
        ")
                        (reparse-symbol indented_block_body) [2435 3529])
                    ("_register_opts" function
                       (:typemodifiers ("static")
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("conf" variable nil (reparse-symbol function_parameters) [3571 3575])
                            ("conf_file" variable nil (reparse-symbol function_parameters) [3577 3586]))                          
                        :documentation "
        调用_register_opts注册sections 确保组修改时无感知
        :param conf: oslo.conf cfg对象
        :param conf_file: 配置文件*.conf
        :return:
        ")
                        (reparse-symbol indented_block_body) [3534 3990])
                    ("update_service" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4014 4018])
                            ("server_type" variable nil (reparse-symbol function_parameters) [4020 4031])
                            ("name" variable nil (reparse-symbol function_parameters) [4033 4037])
                            ("host" variable nil (reparse-symbol function_parameters) [4039 4043])
                            ("port" variable nil (reparse-symbol function_parameters) [4050 4054]))                          
                        :documentation "
        修改server配置
        :param server_type: server type[\"Rest\", \"RPC\", \"Notify\"]
        :param name:  server name
        :param host:  ipv4地址/ipv6地址/主机名  类型：string
        :param port:  tcp端口号  类型: int/string
        :return:
        ")
                        (reparse-symbol indented_block_body) [3995 4847])
                    ("add_api" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4864 4868])
                            ("server_name" variable nil (reparse-symbol function_parameters) [4870 4881])
                            ("api" variable nil (reparse-symbol function_parameters) [4883 4886]))                          
                        :documentation "
        注册api到对应server
        :param server_name: server名
        :param api:  api对象
        :return:
        ")
                        (reparse-symbol indented_block_body) [4852 5864])
                    ("check_subserver_alive" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5895 5899]))                          )
                        (reparse-symbol indented_block_body) [5869 6456])
                    ("start" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6471 6475]))                          
                        :documentation "
        遍历self.server，逐一调用server.start()
        :return:
        ")
                        (reparse-symbol indented_block_body) [6461 7534])
                    ("stop" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7548 7552]))                          )
                        (reparse-symbol indented_block_body) [7539 7990]))                  
                :type "class")
                nil [523 7990]))          
      :file "rccpserver.py"
      :pointmax 7990
      :fsize 8501
      :lastmodtime '(23744 25180 0 0)
      :unmatched-syntax '((INDENT_BLOCK 5808 . 5864) (NEWLINE 5807 . 5808) (COLON 5806 . 5807) (TRY 5729 . 5732) (AS 5800 . 5802) (INDENT_BLOCK 3865 . 3990) (NEWLINE 3864 . 3865) (COLON 3863 . 3864) (TRY 3757 . 3760) (AS 3857 . 3859) (NAME 540 . 549) (ASSIGN 549 . 550)))
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"
api.py
\"\"\"" code nil nil [72 86])
            ("emei.framework.server.proxy" include nil nil [89 167])
            ("emei.framework.utils" include nil nil [168 212])
            ("emei.framework.server.service.serverbase" include nil nil [213 284])
            ("emei.framework.exceptions" include nil nil [285 338])
            ("emei.framework.log" include nil nil [339 373])
            ("emei.base.singleton" include nil nil [374 419])
            ("action" function
               (:documentation "
    restful 注册action方法装饰器
    :param name:
    :return:
    "
                :arguments 
                  ( ("name" variable nil (reparse-symbol function_parameters) [433 437]))                  )
                nil [422 610])
            ("RestEndpoint" type
               (:documentation "
    业务注册rest endpoint继承基类，实现action接口
    "
                :superclasses ("SingletonBase")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [743 761])
                            ("method_list" variable nil (reparse-symbol indented_block_body) [770 801])
                            ("for" code nil (reparse-symbol indented_block_body) [810 995]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [728 732]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [715 995])
                    ("get_actions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1016 1020]))                          )
                        (reparse-symbol indented_block_body) [1000 1052]))                  
                :type "class")
                nil [612 1052])
            ("RPCEndpoint" type
               (:documentation "
    业务注册rpc endpoint继承基类，预留 暂无实现
    "
                :superclasses ("SingletonBase")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("pass" code nil (reparse-symbol indented_block_body) [1179 1183]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1164 1168]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1151 1184]))                  
                :type "class")
                nil [1054 1184])
            ("NotifyEndpoint" type
               (:documentation "
    业务注册notify endpoint继承基类，预留 暂无实现
    "
                :superclasses ("SingletonBase")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("pass" code nil (reparse-symbol indented_block_body) [1317 1321]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1302 1306]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1289 1322]))                  
                :type "class")
                nil [1186 1322])
            ("RCCPTarget" type
               (:documentation "
    模拟oslo.messaging的Target 存储namespace, version
    "
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1472 1498])
                            ("self" variable nil (reparse-symbol indented_block_body) [1507 1529]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1424 1428])
                            ("namespace" variable nil (reparse-symbol function_parameters) [1430 1439])
                            ("version" variable nil (reparse-symbol function_parameters) [1448 1455]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1411 1530]))                  
                :type "class")
                nil [1324 1530])
            ("BaseApi" type
               (:documentation "
    api接口基类
    "
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("\"\"\"
        api初始化基类方法
        :param server_type: 服务器类型[\"Rest\", \"RPC\", \"Notify\"]
        :param kwargs:
        \"\"\"" code nil (reparse-symbol indented_block_body) [1630 1746])
                            ("self" variable nil (reparse-symbol indented_block_body) [1812 1836])
                            ("self" variable nil (reparse-symbol indented_block_body) [1938 1959])
                            ("self" variable nil (reparse-symbol indented_block_body) [1968 1998])
                            ("api_name" variable nil (reparse-symbol indented_block_body) [2034 2069])
                            ("self" code nil (reparse-symbol indented_block_body) [2117 2154]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1592 1596])
                            ("server_type" variable nil (reparse-symbol function_parameters) [1598 1609])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [1611 1619]))                          
                        :documentation "
        api初始化基类方法
        :param server_type: 服务器类型[\"Rest\", \"RPC\", \"Notify\"]
        :param kwargs:
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1579 2155]))                  
                :type "class")
                nil [1532 2155])
            ("RestApi" type
               (:documentation "
    restapi接口类
    "
                :superclasses ("BaseApi")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [2254 2316]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2229 2233])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [2235 2243]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [2216 2317])
                    ("add_endpoint" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2339 2343])
                            ("url" variable nil (reparse-symbol function_parameters) [2345 2348])
                            ("endpoint" variable nil (reparse-symbol function_parameters) [2350 2358]))                          
                        :documentation "
        注册restful endpoint到api中 key: url
        url已经存在(在key_mapping中)时，通过endpoint-name判断一个url是否对应多个endpoint
        否则 url作为key 添加到proxy_endpoint
        :param url: endpoint映射的URL
        :param endpoint:  业务资源对象
        :param kwargs:
        :return:
        ")
                        (reparse-symbol indented_block_body) [2322 3501]))                  
                :type "class")
                nil [2157 3501])
            ("RPCApi" type
               (:documentation "
    rpcapi接口类
    "
                :superclasses ("BaseApi")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [3598 3658]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3573 3577])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [3579 3587]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [3560 3659])
                    ("add_endpoint" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3681 3685])
                            ("endpoint" variable nil (reparse-symbol function_parameters) [3687 3695]))                          
                        :documentation "
        注册endpoint到rpc api中 key: (namespace, version, func)
        为endpoint中的每个方法映射proxy {key: proxy}
        key已经存在(在key_mapping中)时，通过endpoint-name判断一个key是否对应多个endpoint
        否则 key 添加到proxy_endpoint
        :param endpoint:
        :param kwargs:
        :return:
        ")
                        (reparse-symbol indented_block_body) [3664 5799]))                  
                :type "class")
                nil [3503 5799])
            ("NotifyApi" type
               (:documentation "
    notifyapi接口类
    "
                :superclasses ("BaseApi")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [5902 5968]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5877 5881])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [5883 5891]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [5864 5969])
                    ("add_endpoint" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5991 5995])
                            ("endpoint" variable nil (reparse-symbol function_parameters) [5997 6005]))                          
                        :documentation "
        注册endpoint到notify api中 key: func
        为endpoint中的每个方法映射proxy {key: proxy}
        key已经存在(在key_mapping中)时，通过endpoint-name判断一个key是否对应多个endpoint
        否则 key 添加到proxy_endpoint
        :param endpoint:
        :param kwargs:
        :return:
        ")
                        (reparse-symbol indented_block_body) [5974 7054]))                  
                :type "class")
                nil [5801 7054]))          
      :file "api.py"
      :pointmax 7054
      :fsize 7715
      :lastmodtime '(23744 25180 0 0)
      :unmatched-syntax '((NAME 1207 . 1216) (ASSIGN 1216 . 1217) (NAME 1072 . 1081) (ASSIGN 1081 . 1082) (NAME 631 . 640) (ASSIGN 640 . 641)))
    (semanticdb-table "semanticdb-table"
      :file "proxy.py"
      :fsize 8052
      :lastmodtime '(23744 25180 0 0)))
  :file "!usr!lib!python3.6!site-packages!emei!framework!server!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
