;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"
host_device主机设备管理模块
职责：
    提供主机设备功能的公共常量；
    提供主机设备功能的公共工具函数；
    申明主机设备功能接口；
    组合主机设备类；
\"\"\"" code nil nil [1 101])
            ("abc" include nil nil [103 133])
            ("subprocess" include nil nil [134 172])
            ("subprocess" include nil nil [173 209])
            ("dmidecode" include nil nil [211 227])
            ("rccpxuanyuan.common" include nil nil [229 270])
            ("rccpxuanyuan.host" include nil nil [271 308])
            ("rccpxuanyuan.host" include nil nil [309 349])
            ("rccpxuanyuan.host" include nil nil [350 391])
            ("rccpxuanyuan.host" include nil nil [392 432])
            ("HOSTDEV_UNKNOW_INFO_STR" variable nil nil [435 470])
            ("HOSTDEV_UNKNOW_INFO_INT" variable nil nil [471 498])
            ("HOSTDEV_UNKNOW_INFO_DICT" variable nil nil [499 528])
            ("_get_value" function
               (:documentation "
    主机设备信息查询工具函数，用于获取传入数据中的关注信息，当获取失败时，返回
    设置的默认值。
    业务逻辑:
    1. src是字符串，当与key相等时返回默认值，当不等时返回key；
    2. src字典或列表, 从字典中取值
    3. src是函数，入参(key, *args, **kargs)返回运行结果
    其他情况和各类异常返回设置默认值
    "
                :arguments 
                  ( ("src" variable nil (reparse-symbol function_parameters) [546 549])
                    ("key" variable nil (reparse-symbol function_parameters) [551 554])
                    ("default_value" variable nil (reparse-symbol function_parameters) [556 569])
                    ("args" variable nil (reparse-symbol function_parameters) [571 576])
                    ("kargs" variable nil (reparse-symbol function_parameters) [578 585]))                  )
                nil [531 1152])
            ("_get_type_value" function (:arguments 
              ( ("src" variable nil (reparse-symbol function_parameters) [1173 1176])
                ("key" variable nil (reparse-symbol function_parameters) [1178 1181])
                ("val_type" variable nil (reparse-symbol function_parameters) [1183 1191])
                ("default_value" variable nil (reparse-symbol function_parameters) [1193 1206])
                ("args" variable nil (reparse-symbol function_parameters) [1208 1213])
                ("kargs" variable nil (reparse-symbol function_parameters) [1215 1222]))              ) nil [1153 1375])
            ("_get_float" function (:arguments 
              ( ("src" variable nil (reparse-symbol function_parameters) [1391 1394])
                ("key" variable nil (reparse-symbol function_parameters) [1396 1399])
                ("args" variable nil (reparse-symbol function_parameters) [1401 1406])
                ("kargs" variable nil (reparse-symbol function_parameters) [1408 1415]))              ) nil [1376 1530])
            ("_get_int" function (:arguments 
              ( ("src" variable nil (reparse-symbol function_parameters) [1545 1548])
                ("key" variable nil (reparse-symbol function_parameters) [1550 1553])
                ("args" variable nil (reparse-symbol function_parameters) [1555 1560])
                ("kargs" variable nil (reparse-symbol function_parameters) [1562 1569]))              ) nil [1532 1682])
            ("_get_str" function (:arguments 
              ( ("src" variable nil (reparse-symbol function_parameters) [1697 1700])
                ("key" variable nil (reparse-symbol function_parameters) [1702 1705])
                ("args" variable nil (reparse-symbol function_parameters) [1707 1712])
                ("kargs" variable nil (reparse-symbol function_parameters) [1714 1721]))              ) nil [1684 1834])
            ("_get_dict" function (:arguments 
              ( ("src" variable nil (reparse-symbol function_parameters) [1850 1853])
                ("key" variable nil (reparse-symbol function_parameters) [1855 1858])
                ("args" variable nil (reparse-symbol function_parameters) [1860 1865])
                ("kargs" variable nil (reparse-symbol function_parameters) [1867 1874]))              ) nil [1836 1989])
            ("HostDev" type
               (:documentation "
    主机设备基类
    职责：
        组合设备相关属性；
        实现、组合设备静态函数；
        申明设备公共接口；
    "
                :members 
                  ( ("get_info" function
                       (:documentation "
        主机设备查询设备信息功能接口
        职责：
            查询设备配置信息
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [2153 2156]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil)
                            ("abstractmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [2103 2239])
                    ("_execute_cmd" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [2278 2281])
                            ("cmd" variable nil (reparse-symbol function_parameters) [2283 2286]))                          )
                        (reparse-symbol indented_block_body) [2244 2439]))                  
                :type "class")
                nil [1991 2439])
            ("PowerInterface" type
               (:documentation "
    主机电源设备接口类
    职责：
        申明电源设备接口；
    "
                :members 
                  ( ("shutdown" function
                       (:documentation "
        服务器关机功能接口
        职责：
            关闭服务器
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [2574 2577]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil)
                            ("abstractmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [2524 2652])
                    ("reboot" function
                       (:documentation "
        服务器重启功能接口
        职责：
            重启服务器
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [2705 2708]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil)
                            ("abstractmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [2657 2783]))                  
                :type "class")
                nil [2441 2783])
            ("Mainboard" type
               (:documentation "
    主机主板设备类
    职责：
        组合设备属性；
        实现设备功能接口；
        组合设备功能接口；
    "
                :superclasses ("HostDev")
                :members 
                  ( ("get_info" function
                       (:documentation "
        主板信息查询接口，用于查询主板信息。
        业务逻辑:
        1. 返回主板信息字典
        2. 返回字典中的键列表为：
            [\"manufacturer\", \"product_name\", \"family\", \"version\", \"uuid\",
             \"serial_number\"]
        3. 键值的类型映射为：
            {
                \"manufacturer\": str,
                \"product_name\": str,
                \"family\": str,
                \"version\": str,
                \"uuid\": str,
                \"serial_number\": str
            }
        4. 替换\"Not Specified\"值为HOSTDEV_UNKNOW_INFO_STR
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [2934 2937]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [2904 4094]))                  
                :type "class")
                nil [2785 4094])
            ("CPU" type
               (:documentation "
    主机CPU设备类
    职责：
        组合设备属性；
        实现设备功能接口；
        组合设备功能接口；
    "
                :superclasses ("HostDev")
                :members 
                  ( ("_parse_frequency" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [4248 4251])
                            ("frequency" variable nil (reparse-symbol function_parameters) [4253 4262]))                          )
                        (reparse-symbol indented_block_body) [4210 4296])
                    ("get_info" function
                       (:documentation "
        1. 返回CPU信息字典
        2. 键值的类型映射为：
            {
                \"vendor_id\": str,
                \"model\": str,
                \"family\": str,
                \"frequency\": float,
                \"flags\": list,
                \"cpus\": int,
                \"cores\": int,
                \"processors\": int
            }
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [4331 4334]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [4301 5350]))                  
                :type "class")
                nil [4096 5350])
            ("Memory" type
               (:documentation "
    主机内存设备类
    职责：
        组合设备属性；
        实现设备功能接口；
        组合设备功能接口；
    "
                :superclasses ("HostDev")
                :members 
                  ( ("_parse_mem_size" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [5505 5508])
                            ("size" variable nil (reparse-symbol function_parameters) [5510 5514]))                          )
                        (reparse-symbol indented_block_body) [5468 5543])
                    ("_parse_speed" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [5582 5585])
                            ("speed" variable nil (reparse-symbol function_parameters) [5587 5592]))                          )
                        (reparse-symbol indented_block_body) [5548 5622])
                    ("_parse_datawidth" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [5665 5668])
                            ("data_width" variable nil (reparse-symbol function_parameters) [5670 5680]))                          )
                        (reparse-symbol indented_block_body) [5627 5715])
                    ("get_info" function
                       (:documentation "
        1. 返回Memory信息字典
        2. 键值的类型映射为：
            {
                \"maxnumber_of_devices\": int,
                \"max_capacity\": int,
                \"number_of_devices\": int,
                \"capacity\": int,
                \"dev_list\": list,
                \"manufacturer\": str,
                \"part_number\": str,
                \"serial_number\": str,
                \"mem_type\": str,
                \"size\": int,
                \"speed\": int,
                \"data_width\": int
            }
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [5750 5753]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [5720 8163]))                  
                :type "class")
                nil [5352 8163])
            ("Nic" type
               (:documentation "
    主机网卡设备类
    职责：
        组合设备属性；
        实现设备功能接口；
        组合设备功能接口；
    "
                :superclasses ("HostDev")
                :members 
                  ( ("get_info" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [8308 8311]))                          )
                        (reparse-symbol indented_block_body) [8278 8332]))                  
                :type "class")
                nil [8165 8332])
            ("Disk" type
               (:documentation "
    主机硬盘设备类
    职责：
        组合设备属性；
        实现设备功能接口；
        组合设备功能接口；
    "
                :superclasses ("HostDev")
                :members 
                  ( ("_parse_disk_capacity" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [8490 8493])
                            ("capacity" variable nil (reparse-symbol function_parameters) [8495 8503]))                          )
                        (reparse-symbol indented_block_body) [8448 8589])
                    ("_parse_disk_iftype" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [8634 8637])
                            ("iftype" variable nil (reparse-symbol function_parameters) [8639 8645]))                          )
                        (reparse-symbol indented_block_body) [8594 8678])
                    ("_parse_disk_type" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [8721 8724])
                            ("rotational" variable nil (reparse-symbol function_parameters) [8726 8736]))                          )
                        (reparse-symbol indented_block_body) [8683 8911])
                    ("_parse_rotation_rate" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [8958 8961])
                            ("rotation_rate" variable nil (reparse-symbol function_parameters) [8963 8976]))                          )
                        (reparse-symbol indented_block_body) [8916 9014])
                    ("get_info" function
                       (:documentation "
        1. 返回Disk信息字典
        2. 键值的类型映射为：
            {
                \"number_of_devices\": int,
                \"total_capacity\": int,
                \"total_used\": int,
                \"system_disk\": str,
                \"dev_list\": list,
                \"vendor\": str,
                \"family\": str,
                \"model\": str,
                \"name\": str,
                \"device_file\": str,
                \"disk_sn\": str,
                \"capacity\": int,
                \"used\": int,
                \"disk_type\": str,
                \"rotation_rate\": int,
                \"interface_type\": str
                \"device_file\": str
            }
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [9049 9052]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [9019 12157]))                  
                :type "class")
                nil [8334 12157])
            ("Power" type
               (:documentation "
    主机电源设备类
    职责：
        组合设备属性；
        实现设备功能接口；
        组合设备功能接口；
    "
                :superclasses ("HostDev" "PowerInterface")
                :members 
                  ( ("get_info" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [12320 12323]))                          )
                        (reparse-symbol indented_block_body) [12290 12344])
                    ("shutdown" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil)
                            ("callutils.async_call" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [12405 12408]))                          )
                        (reparse-symbol indented_block_body) [12349 12485])
                    ("reboot" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil)
                            ("callutils.async_call" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [12544 12547]))                          )
                        (reparse-symbol indented_block_body) [12490 12623]))                  
                :type "class")
                nil [12159 12623]))          
      :file "host_device.py"
      :pointmax 12623
      :fsize 13814
      :lastmodtime '(23925 47485 170667 59000)
      :unmatched-syntax '((NAME 11015 . 11019) (IF 11035 . 11037) (ELSE 11073 . 11077) (NAME 10261 . 10265) (IF 10290 . 10292) (ELSE 10305 . 10309))))
  :file "!usr!lib!python3.6!site-packages!project!rccpxuanyuanbak!host!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
