;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"
message.py 报文封装解封装
\"\"\"" code nil nil [75 101])
            ("json" include nil nil [104 115])
            ("enum" include nil nil [116 137])
            ("emei.framework.exceptions" include nil nil [139 233])
            ("emei.framework.log" include nil nil [234 268])
            ("ErrorType" type
               (:documentation "
    servicer类型枚举
    "
                :superclasses ("Enum")
                :members 
                  ( ("client" variable nil (reparse-symbol indented_block_body) [345 360])
                    ("client_timeout" variable nil (reparse-symbol indented_block_body) [379 402])
                    ("process_req" variable nil (reparse-symbol indented_block_body) [423 443])
                    ("server_app" variable nil (reparse-symbol indented_block_body) [464 483]))                  
                :type "class")
                nil [271 484])
            ("rccp_dumps" function (:arguments 
              ( ("message" variable nil (reparse-symbol function_parameters) [501 508]))              ) nil [486 679])
            ("rccp_loads" function (:arguments 
              ( ("message" variable nil (reparse-symbol function_parameters) [696 703]))              ) nil [681 994])
            ("RCCPRequest" type
               (:documentation "
    RCCPRequest 对请求报文封装解封装
    "
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("\"\"\"
        :param ismsg:  False：未传入msg参数
        :param commsg:  False：使用原生请求 不封装报文
        :param content:  进行封装的报文体 可选
        :param msg:   进行解封装的报文体 可选
        :param kwargs:  报文封装需要的参数 如：namespace, version
        \"\"\"" code nil (reparse-symbol indented_block_body) [1151 1374])
                            ("self" variable nil (reparse-symbol indented_block_body) [1383 1401])
                            ("self" variable nil (reparse-symbol indented_block_body) [1410 1429])
                            ("self" variable nil (reparse-symbol indented_block_body) [1438 1453])
                            ("self" variable nil (reparse-symbol indented_block_body) [1462 1483])
                            ("if" code nil (reparse-symbol indented_block_body) [1493 1591]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1076 1080])
                            ("ismsg" variable nil (reparse-symbol function_parameters) [1082 1087])
                            ("commsg" variable nil (reparse-symbol function_parameters) [1089 1095])
                            ("content" variable nil (reparse-symbol function_parameters) [1102 1109])
                            ("msg" variable nil (reparse-symbol function_parameters) [1116 1119])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [1126 1134]))                          
                        :documentation "
        :param ismsg:  False：未传入msg参数
        :param commsg:  False：使用原生请求 不封装报文
        :param content:  进行封装的报文体 可选
        :param msg:   进行解封装的报文体 可选
        :param kwargs:  报文封装需要的参数 如：namespace, version
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1063 1585])
                    ("_check_header" function
                       (:typemodifiers ("static")
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("header" variable nil (reparse-symbol function_parameters) [1626 1632]))                          
                        :documentation "
        commsg=True 对header中的内容进行安全校验
        :param header:  请求报文体的header字段
        :return:  None/str 非空返回值表示错误信息
        ")
                        (reparse-symbol indented_block_body) [1590 1901])
                    ("is_commsg" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1920 1924]))                          )
                        (reparse-symbol indented_block_body) [1906 1955])
                    ("_commsg_encode" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1979 1983])
                            ("content" variable nil (reparse-symbol function_parameters) [1985 1992])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [1994 2002]))                          
                        :documentation "
        commsg=True 封装请求报文
        :return: 封装后的请求报文 json类型
        ")
                        (reparse-symbol indented_block_body) [1960 3016])
                    ("_commsg_decode" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3040 3044])
                            ("msg" variable nil (reparse-symbol function_parameters) [3046 3049]))                          
                        :documentation "
        commsg=True 解封装请求报文并检查header字段
        :return:
        ")
                        (reparse-symbol indented_block_body) [3021 3812])
                    ("_encode" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3829 3833])
                            ("content" variable nil (reparse-symbol function_parameters) [3835 3842])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [3844 3852]))                          
                        :documentation "
        封装请求报文
        commsg=False content不封装
        :return:
        ")
                        (reparse-symbol indented_block_body) [3817 4240])
                    ("_decode" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4257 4261])
                            ("msg" variable nil (reparse-symbol function_parameters) [4263 4266]))                          
                        :documentation "
        解封装请求报文
        commsg=False msg不解封装
        :return:
        ")
                        (reparse-symbol indented_block_body) [4245 4665]))                  
                :type "class")
                nil [996 4665])
            ("RCCPResponse" type
               (:documentation "
    RCCPResponse 对响应报文封装解封装
    "
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("\"\"\"
        :param ismsg:  False：未传入msg参数
        :param commsg:  False：使用原生请求 不封装报文
        :param http_code: http状态码
        :param content:  进行封装的报文体 可选
        :param msg:   进行解封装的报文体 可选
        \"\"\"" code nil (reparse-symbol indented_block_body) [4847 5049])
                            ("self" variable nil (reparse-symbol indented_block_body) [5058 5077])
                            ("self" variable nil (reparse-symbol indented_block_body) [5086 5101])
                            ("self" variable nil (reparse-symbol indented_block_body) [5110 5136])
                            ("self" variable nil (reparse-symbol indented_block_body) [5145 5166])
                            ("if" code nil (reparse-symbol indented_block_body) [5213 5301]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4749 4753])
                            ("ismsg" variable nil (reparse-symbol function_parameters) [4755 4760])
                            ("commsg" variable nil (reparse-symbol function_parameters) [4762 4768])
                            ("http_code" variable nil (reparse-symbol function_parameters) [4792 4801])
                            ("content" variable nil (reparse-symbol function_parameters) [4808 4815])
                            ("msg" variable nil (reparse-symbol function_parameters) [4822 4825]))                          
                        :documentation "
        :param ismsg:  False：未传入msg参数
        :param commsg:  False：使用原生请求 不封装报文
        :param http_code: http状态码
        :param content:  进行封装的报文体 可选
        :param msg:   进行解封装的报文体 可选
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [4736 5295])
                    ("response_error" function
                       (:documentation "
        客户端请求抛出异常时构造response对象 调用此类方法
        :param rccp_code: rccp框架状态码
        :param message:  异常信息
        :param http_code:  http状态码
        :param commsg: commsg=False 异常信息不封装报文体
        :return: RCCPResponse对象
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [5336 5339])
                            ("rccp_code" variable nil (reparse-symbol function_parameters) [5341 5350])
                            ("message" variable nil (reparse-symbol function_parameters) [5352 5359])
                            ("http_code" variable nil (reparse-symbol function_parameters) [5361 5370])
                            ("commsg" variable nil (reparse-symbol function_parameters) [5377 5383]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [5300 6102])
                    ("_commsg_decode" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6126 6130])
                            ("msg" variable nil (reparse-symbol function_parameters) [6132 6135]))                          
                        :documentation "
        commsg=True 解封装响应报文
        :param msg:  响应报文
        :return:
        ")
                        (reparse-symbol indented_block_body) [6107 6540])
                    ("_commsg_encode" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6565 6569])
                            ("content" variable nil (reparse-symbol function_parameters) [6571 6578]))                          
                        :documentation "
        commsg=True 封装响应报文
        :param content: 响应报文
        :return:
        ")
                        (reparse-symbol indented_block_body) [6545 6773])
                    ("_decode" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6790 6794])
                            ("msg" variable nil (reparse-symbol function_parameters) [6796 6799]))                          
                        :documentation "
        响应报文解封装
        commsg=False 未封装过的报文 不需要解封装
        :param msg: 进行解封装的报文
        :return:
        ")
                        (reparse-symbol indented_block_body) [6778 7297])
                    ("_encode" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7314 7318])
                            ("content" variable nil (reparse-symbol function_parameters) [7320 7327]))                          
                        :documentation "
        响应报文封装
        commsg=False 不封装报文
        :param content: 进行封装的报文
        :return:
        ")
                        (reparse-symbol indented_block_body) [7302 7733]))                  
                :type "class")
                nil [4667 7733]))          
      :file "message.py"
      :pointmax 7733
      :fsize 8532
      :lastmodtime '(23893 1764 947000 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"
:exceptions.py
\"\"\"" code nil nil [72 94])
            ("emei.base.exception" include nil nil [97 142])
            ("MessagingException" type
               (:documentation "Base class for exceptions."
                :superclasses ("RCCPErrorBase")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [264 286])
                            ("super" code nil (reparse-symbol indented_block_body) [295 344])
                            ("self" variable nil (reparse-symbol indented_block_body) [353 368]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [240 244])
                            ("message" variable nil (reparse-symbol function_parameters) [246 253]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [227 369])
                    ("get_response" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [391 395]))                          )
                        (reparse-symbol indented_block_body) [374 437]))                  
                :type "class")
                nil [145 437])
            ("RCCPJSONError" type
               (:documentation "Raised if json decode/encode error"
                :superclasses ("MessagingException")
                :type "class")
                nil [439 525])
            ("RCCPServerError" type
               (:documentation "Raised if server create failure or api/endpoint add failure."
                :superclasses ("MessagingException")
                :type "class")
                nil [527 641])
            ("RCCPRequestError" type
               (:documentation "Raised if request message deal failed."
                :superclasses ("MessagingException")
                :type "class")
                nil [643 736])
            ("RCCPResponseError" type
               (:documentation "Raised if response message deal failed."
                :superclasses ("MessagingException")
                :type "class")
                nil [738 833]))          
      :file "exceptions.py"
      :pointmax 833
      :fsize 832
      :lastmodtime '(23744 25180 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"
log.py
\"\"\"" code nil nil [74 88])
            ("emei.utils.rccp_log" include nil nil [91 126]))          
      :file "log.py"
      :pointmax 530
      :fsize 529
      :lastmodtime '(23744 25180 0 0)
      :unmatched-syntax nil))
  :file "!usr!lib!python3.6!site-packages!emei!framework!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
