;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"
Xuanyuan系统资源管理接口
职责：
    1. 提供外部访问Xuanyuan系统逻辑资源接口
\"\"\"" code nil nil [1 59])
            ("os" include nil nil [62 71])
            ("docker" include nil nil [72 85])
            ("emei.framework.client" include nil nil [87 125])
            ("rccpxuanyuan.common" include nil nil [127 162])
            ("rccpxuanyuan.config" include nil nil [163 215])
            ("rccpxuanyuan.storage" include nil nil [216 259])
            ("rccpxuanyuan.host.api" include nil nil [260 298])
            ("rccpxuanyuan.task" include nil nil [299 341])
            ("RCOS_RESERVATION_FILE" variable nil nil [344 417])
            ("HA_RESOURCE_NAME" variable nil nil [418 441])
            ("POS_RESOURCE_NAME" variable nil nil [442 467])
            ("SYS_RESOURCE_NAME" variable nil nil [468 493])
            ("TOTAL_RESOURCE_NAME" variable nil nil [494 523])
            ("get_reserved_resource" function
               (:typemodifiers ("static")
                :decorators 
                  ( ("staticmethod" function (:type "decorator") nil nil))                  
                :documentation "
    查询预留cpu和内存
    :return:
    ")
                nil [526 678])
            ("set_reserved_resource" function
               (:typemodifiers ("static")
                :decorators 
                  ( ("staticmethod" function (:type "decorator") nil nil))                  
                :arguments 
                  ( ("service_type" variable nil (reparse-symbol function_parameters) [720 732])
                    ("resource" variable nil (reparse-symbol function_parameters) [734 742]))                  
                :documentation "
    服务主动设置预留cpu和内存，触发资源预留推送功能
    :param service_type: 类型，即服务名
    :param resource: 需要预留的资源 {\"cpu\": 1, \"mem\": 2}, 其中, 内存单位为 KB
    :return: True 资源预留成功；False 资源预留失败
    ")
                nil [680 1186])
            ("ReservedResource" type
               (:documentation "
    系统资源预留类
    职责：
        获取RCOS系统的预留CPU和内存；
        获取P-OS服务的预留CPU和内存；
        获取高可用服务的预留CPU和内存；
    "
                :members 
                  ( ("_resource" variable nil (reparse-symbol indented_block_body) [1333 1347])
                    ("get_info" function
                       (:documentation "
        返回主机系统预留的cpu和内存
        由三个部分组成：RCOS系统、POS服务、高可用服务
        :return:
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [1384 1387]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [1354 1952])
                    ("_get_resource_info" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("total_res_info" variable nil (reparse-symbol function_parameters) [1998 2012])
                            ("res_name" variable nil (reparse-symbol function_parameters) [2014 2022])
                            ("cb_get_resource_info" variable nil (reparse-symbol function_parameters) [2024 2044]))                          
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [1957 2166])
                    ("_add_resource_info" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("resource" variable nil (reparse-symbol function_parameters) [2212 2220]))                          
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [2171 2564])
                    ("" code nil (reparse-symbol indented_block_body) [2605 2645])
                    ("_get_rcos_resource" function
                       (:documentation "
        获取rcos系统预留的cpu和内存
        :return:
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [2673 2676]))                          )
                        (reparse-symbol indented_block_body) [2650 3295])
                    ("" code nil (reparse-symbol indented_block_body) [3335 3374])
                    ("_get_pos_resource" function
                       (:documentation "
        获取pos服务预留的cpu和内存
        :return:
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [3401 3404]))                          )
                        (reparse-symbol indented_block_body) [3379 3849])
                    ("" code nil (reparse-symbol indented_block_body) [3889 3927])
                    ("_get_ha_resource" function
                       (:documentation "
        获取高可用服务预留的cpu和内存
        :return:
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [3953 3956]))                          )
                        (reparse-symbol indented_block_body) [3932 4732])
                    ("" code nil (reparse-symbol indented_block_body) [4772 4802])
                    ("_check_ha_node_role" function
                       (:documentation "
        判断该主机是否为高可用节点 active：高可用节点 inactive：非高可用节点
        :return:
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [4831 4834]))                          )
                        (reparse-symbol indented_block_body) [4807 5074])
                    ("_make_url" function
                       (:documentation "
        构造Restfule通信的url
        :param addr: IP地址
        :param port: 端口
        :param version: 版本号
        :param resource:
        :param filter_key:
        :param filter_value:
        :return:
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [5110 5113])
                            ("addr" variable nil (reparse-symbol function_parameters) [5115 5119])
                            ("port" variable nil (reparse-symbol function_parameters) [5121 5125])
                            ("version" variable nil (reparse-symbol function_parameters) [5127 5134])
                            ("resource" variable nil (reparse-symbol function_parameters) [5136 5144])
                            ("filter_key" variable nil (reparse-symbol function_parameters) [5146 5156])
                            ("filter_value" variable nil (reparse-symbol function_parameters) [5158 5170]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [5079 5517])
                    ("" code nil (reparse-symbol indented_block_body) [5557 5598])
                    ("_search_ha_resource" function
                       (:documentation "
        使用高可用提供的Restful接口，查询预留的cpu和内存
        :return:
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [5627 5630]))                          )
                        (reparse-symbol indented_block_body) [5603 7229])
                    ("" code nil (reparse-symbol indented_block_body) [7289 7319])
                    ("set_resource" function
                       (:documentation "
        为服务提供接口，设置需要预留的cpu和内存，且将该值保存在内存中
        :param service_type: 服务名
        :param cpu: 设置预留的cpu
        :param memory: 设置预留的内存
        :return:
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [7341 7344])
                            ("service_type" variable nil (reparse-symbol function_parameters) [7346 7358])
                            ("cpu" variable nil (reparse-symbol function_parameters) [7360 7363])
                            ("memory" variable nil (reparse-symbol function_parameters) [7365 7371]))                          )
                        (reparse-symbol indented_block_body) [7324 8071])
                    ("_gb_to_byte" function
                       (:documentation " 将 gb 转换成 byte "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [8109 8112])
                            ("size_gb" variable nil (reparse-symbol function_parameters) [8114 8121]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [8076 8188]))                  
                :type "class")
                nil [1188 8188]))          
      :file "resource.py"
      :pointmax 8188
      :fsize 9151
      :lastmodtime '(23938 14119 41902 162000)
      :unmatched-syntax '((INDENT_BLOCK 8162 . 8194) ($EOI 8194 . 8194) (ASSIGN 8470 . 8471) (EQ 8468 . 8470) (EQ 8466 . 8468) (EQ 8464 . 8466) (GT 16294 . 16295) (GTGT 16292 . 16294) (GTGT 16290 . 16292) (GTGT 16288 . 16290) (ASSIGN 8483 . 8484) (EQ 8481 . 8483) (EQ 8479 . 8481) (EQ 8477 . 8479) (LT 7 . 8) (LTLT 5 . 7) (LTLT 3 . 5) (LTLT 1 . 3))))
  :file "!usr!lib!python3.6!site-packages!project!rccpxuanyuanbak!rccpxuanyuan!resource!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
