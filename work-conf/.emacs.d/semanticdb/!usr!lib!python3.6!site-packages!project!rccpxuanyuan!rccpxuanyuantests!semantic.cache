;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"
test_rccpxuanyuand.py
\"\"\"" code nil nil [1 30])
            ("sys" include nil nil [32 42])
            ("pytest" include nil nil [43 56])
            ("mock" include nil nil [57 68])
            ("mock" include nil nil [69 108])
            ("sys" variable nil nil [110 174])
            ("rccpxuanyuan" include nil nil [176 214])
            ("rccpxuanyuan.rccpxuanyuand" include nil nil [215 264])
            ("" code nil nil [273 321])
            ("" code nil nil [328 370])
            ("" code nil nil [377 429])
            ("test_serve_clients" function (:arguments 
              ( ("fake_get_instance" variable nil (reparse-symbol function_parameters) [453 470])
                ("fake_task_manager" variable nil (reparse-symbol function_parameters) [472 489])
                ("fake_server" variable nil (reparse-symbol function_parameters) [491 502]))              ) nil [430 1024])
            ("" code nil nil [1032 1072])
            ("" code nil nil [1079 1123])
            ("" code nil nil [1130 1179])
            ("" code nil nil [1186 1219])
            ("" code nil nil [1226 1264])
            ("test_run" function (:arguments 
              ( ("fake_logging" variable nil (reparse-symbol function_parameters) [1278 1290])
                ("fake_os" variable nil (reparse-symbol function_parameters) [1292 1299])
                ("fake_set_cpu_affinity" variable nil (reparse-symbol function_parameters) [1301 1322])
                ("fake_serve_clients" variable nil (reparse-symbol function_parameters) [1324 1342])
                ("fake_threading" variable nil (reparse-symbol function_parameters) [1357 1371]))              ) nil [1265 2051])
            ("" code nil nil [2059 2099])
            ("" code nil nil [2106 2139])
            ("test_assert_log_permission" function (:arguments 
              ( ("fake_os" variable nil (reparse-symbol function_parameters) [2171 2178])
                ("args" variable nil (reparse-symbol function_parameters) [2180 2185]))              ) nil [2140 2633])
            ("" code nil nil [2641 2680])
            ("test_assert_single_instance" function (:arguments 
              ( ("fake_lockfile" variable nil (reparse-symbol function_parameters) [2713 2726]))              ) nil [2681 2861])
            ("" code nil nil [2869 2903])
            ("" code nil nil [2910 2950])
            ("" code nil nil [2957 2991])
            ("" code nil nil [2998 3036])
            ("test_assert_rccpxuanyuan_user" function (:arguments 
              ( ("fake_getpass" variable nil (reparse-symbol function_parameters) [3071 3083])
                ("fake_grp" variable nil (reparse-symbol function_parameters) [3085 3093])
                ("fake_constants" variable nil (reparse-symbol function_parameters) [3095 3109])
                ("args" variable nil (reparse-symbol function_parameters) [3111 3116]))              ) nil [3037 3525])
            ("" code nil nil [3533 3572])
            ("test_assert_sudoer_permissions" function (:arguments 
              ( ("fake_commands" variable nil (reparse-symbol function_parameters) [3608 3621]))              ) nil [3573 3956])
            ("" code nil nil [3964 4010])
            ("" code nil nil [4017 4050])
            ("" code nil nil [4057 4097])
            ("" code nil nil [4104 4142])
            ("" code nil nil [4149 4187])
            ("" code nil nil [4194 4231])
            ("test_set_cpu_affinity" function (:arguments 
              ( ("fake_conf" variable nil (reparse-symbol function_parameters) [4258 4267])
                ("fake_taskset" variable nil (reparse-symbol function_parameters) [4269 4281])
                ("fake_logging" variable nil (reparse-symbol function_parameters) [4283 4295])
                ("fake_frozenset" variable nil (reparse-symbol function_parameters) [4297 4311])
                ("fake_os" variable nil (reparse-symbol function_parameters) [4339 4346])
                ("fake_xuanyuan_logger" variable nil (reparse-symbol function_parameters) [4348 4368]))              ) nil [4232 5757])
            ("" code nil nil [5765 5804])
            ("" code nil nil [5811 5869])
            ("" code nil nil [5876 5930])
            ("" code nil nil [5937 5994])
            ("" code nil nil [6001 6056])
            ("" code nil nil [6063 6100])
            ("" code nil nil [6107 6141])
            ("test_main" function (:arguments 
              ( ("fake_run" variable nil (reparse-symbol function_parameters) [6156 6164])
                ("fake_config" variable nil (reparse-symbol function_parameters) [6166 6177])
                ("args" variable nil (reparse-symbol function_parameters) [6179 6184]))              ) nil [6142 6338])
            ("del" code nil nil [6340 6394]))          
      :file "test_rccpxuanyuand.py"
      :pointmax 6395
      :fsize 6394
      :lastmodtime '(23947 4274 501255 713000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [822 860])
            ("__future__" include nil nil [861 892])
            ("collections" include nil nil [894 912])
            ("json" include nil nil [913 924])
            ("libvirt" include nil nil [925 939])
            ("logging" include nil nil [940 954])
            ("os.path" include nil nil [955 969])
            ("threading" include nil nil [970 986])
            ("xml.etree.ElementTree" include nil nil [987 1024])
            ("sys" include nil nil [1025 1035])
            ("mock" include nil nil [1037 1048])
            ("mock" include nil nil [1049 1070])
            ("pytest" include nil nil [1071 1084])
            ("sys" variable nil nil [1099 1132])
            ("sys" variable nil nil [1133 1181])
            ("sys" variable nil nil [1182 1225])
            ("sys" variable nil nil [1226 1271])
            ("sys" variable nil nil [1272 1317])
            ("sys" variable nil nil [1318 1349])
            ("rccpxuanyuan.common.define" include nil nil [1373 1429])
            ("importlib" include nil nil [1563 1579])
            ("if" code nil nil [1580 1688])
            ("rccpxuanyuan.client_if" include nil nil [1688 1731])
            ("rccpxuanyuan.common" include nil nil [1732 1791])
            ("testlib" include nil nil [1792 1848])
            ("INEXISTENT_PATH" variable nil nil [1878 1911])
            ("FAKE_ISOFS_PATH" variable nil nil [1912 1951])
            ("FAKE_FLOPPY_PATH" variable nil nil [1952 1993])
            ("ISOFS_PATH" variable nil nil [1994 2167])
            ("FAKE_PLATFORM_ID" variable nil nil [2170 2207])
            ("FAKE_VIP" variable nil nil [2208 2229])
            ("FakeClientIF" type
               (:superclasses ("client_if.ClientIF")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [2440 2455])
                            ("self" variable nil (reparse-symbol indented_block_body) [2464 2509])
                            ("self" variable nil (reparse-symbol indented_block_body) [2518 2545])
                            ("self" variable nil (reparse-symbol indented_block_body) [2554 2593])
                            ("self" variable nil (reparse-symbol indented_block_body) [2602 2623])
                            ("self" variable nil (reparse-symbol indented_block_body) [2632 2652])
                            ("self" variable nil (reparse-symbol indented_block_body) [2661 2678])
                            ("self" variable nil (reparse-symbol indented_block_body) [2687 2706])
                            ("self" variable nil (reparse-symbol indented_block_body) [2715 2737])
                            ("self" variable nil (reparse-symbol indented_block_body) [2746 2782]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2289 2293]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [2276 2783])
                    ("createVm" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2801 2805])
                            ("vmParams" variable nil (reparse-symbol function_parameters) [2807 2815])
                            ("vmRecover" variable nil (reparse-symbol function_parameters) [2817 2826]))                          )
                        (reparse-symbol indented_block_body) [2788 2944]))                  
                :type "class")
                nil [2232 2944])
            ("FakeSuperrccpxuanyuan" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [3007 3022]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2992 2996]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [2979 3023])
                    ("getProxy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3041 3045]))                          )
                        (reparse-symbol indented_block_body) [3028 3068])
                    ("mkIsoFs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3085 3089])
                            ("args" variable nil (reparse-symbol function_parameters) [3091 3096])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [3098 3106]))                          )
                        (reparse-symbol indented_block_body) [3073 3193])
                    ("mkFloppyFs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3213 3217])
                            ("args" variable nil (reparse-symbol function_parameters) [3219 3224])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [3226 3234]))                          )
                        (reparse-symbol indented_block_body) [3198 3325]))                  
                :type "class")
                nil [2946 3325])
            ("fakeDrive" function nil nil [3327 3595])
            ("fakePayloadDrive" function nil nil [3597 3957])
            ("ClientIFTests" type
               (:superclasses ("TestCaseBase")
                :members 
                  ( ("setUp" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4009 4013]))                          )
                        (reparse-symbol indented_block_body) [3999 4050])
                    ("assertCalled" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4072 4076])
                            ("funcName" variable nil (reparse-symbol function_parameters) [4078 4086]))                          )
                        (reparse-symbol indented_block_body) [4055 4223])
                    ("assertNotCalled" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4248 4252])
                            ("funcName" variable nil (reparse-symbol function_parameters) [4254 4262]))                          )
                        (reparse-symbol indented_block_body) [4228 4468])
                    ("" code nil (reparse-symbol indented_block_body) [4491 4512])
                    ("test_get_instance_samecif" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4547 4551])
                            ("mock_new" variable nil (reparse-symbol function_parameters) [4553 4561]))                          
                        :documentation "
        验证get_instance多次调用接口返回相同cif对象
        ")
                        (reparse-symbol indented_block_body) [4517 4854])
                    ("test_get_instance_nolog" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4887 4891]))                          
                        :documentation "
        验证get_instance对log对象强需求
        ")
                        (reparse-symbol indented_block_body) [4859 5205])
                    ("test_prepare_for_shutdown_acuiresucceed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5254 5258]))                          
                        :documentation "
        验证acquire semaphore成功返回成功消息
        ")
                        (reparse-symbol indented_block_body) [5210 5503])
                    ("test_prepare_for_shutdown_acuirefailed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5551 5555]))                          
                        :documentation "
        验证acquire semaphore成功返回成功消息
        ")
                        (reparse-symbol indented_block_body) [5508 5799])
                    ("test_prepare_for_shutdown_acuirefailed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5847 5851]))                          
                        :documentation "
        验证acquire semaphore成功返回成功消息
        ")
                        (reparse-symbol indented_block_body) [5804 6095])
                    ("test_get_service_info" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6130 6134]))                          
                        :documentation "
        验证返回服务信息包含platform_id和vip字段
        ")
                        (reparse-symbol indented_block_body) [6104 6293])
                    ("" code nil (reparse-symbol indented_block_body) [6348 6398])
                    ("test_add_host_succeed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6429 6433])
                            ("mock_unknow_str" variable nil (reparse-symbol function_parameters) [6435 6450]))                          
                        :documentation "
        验证成功添加主机,调用更新服务信息接口
        ")
                        (reparse-symbol indented_block_body) [6403 7071])
                    ("test_add_host_failed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7101 7105]))                          
                        :documentation "
        验证添加主机失败抛异常
        ")
                        (reparse-symbol indented_block_body) [7076 7328])
                    ("test_remove_host_succeed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7362 7366]))                          
                        :documentation "
        验证主机脱管成功,调用更新服务信息接口
        ")
                        (reparse-symbol indented_block_body) [7333 7771])
                    ("test_remove_host_failed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7804 7808]))                          
                        :documentation "
        验证主机脱管失败抛异常
        ")
                        (reparse-symbol indented_block_body) [7776 8031])
                    ("test_reset_host_management" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8067 8071]))                          
                        :documentation "
        验证重置主机纳管状态: 设置主机进入脱管状态
        ")
                        (reparse-symbol indented_block_body) [8036 8420]))                  
                :type "class")
                nil [3959 8607]))          
      :file "test_client_if.py"
      :pointmax 20808
      :fsize 21109
      :lastmodtime '(23940 27965 99941 831000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [822 860])
            ("__future__" include nil nil [861 892])
            ("copy" include nil nil [894 905])
            ("logging" include nil nil [906 920])
            ("rccpxuanyuan" include nil nil [922 950])
            ("rccpxuanyuan.common" include nil nil [951 986])
            ("rccpxuanyuan.common" include nil nil [987 1023])
            ("rccpxuanyuan.common" include nil nil [1024 1064])
            ("rccpxuanyuan.common" include nil nil [1065 1108])
            ("monkeypatch" include nil nil [1110 1150])
            ("testlib" include nil nil [1151 1207])
            ("testlib" include nil nil [1208 1236]))          
      :file "API_test.py"
      :pointmax 8116
      :fsize 8115
      :lastmodtime '(23940 27965 75941 279000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [822 860])
            ("__future__" include nil nil [861 892])
            ("contextlib" include nil nil [894 931])
            ("functools" include nil nil [932 959])
            ("inspect" include nil nil [960 974])
            ("six" include nil nil [976 986])
            ("Patch" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1559 1575])
                            ("self" variable nil (reparse-symbol indented_block_body) [1584 1597]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1538 1542])
                            ("what" variable nil (reparse-symbol function_parameters) [1544 1548]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1525 1598])
                    ("_is_static_method" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [1643 1646])
                            ("method_name" variable nil (reparse-symbol function_parameters) [1648 1659])
                            ("method" variable nil (reparse-symbol function_parameters) [1661 1667]))                          
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [1603 2320])
                    ("_is_class_method" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("method" variable nil (reparse-symbol function_parameters) [2364 2370]))                          
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [2325 2481])
                    ("apply" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2496 2500]))                          )
                        (reparse-symbol indented_block_body) [2486 3124])
                    ("revert" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3140 3144]))                          )
                        (reparse-symbol indented_block_body) [3129 3615]))                  
                :type "class")
                nil [1499 3615])
            ("MonkeyPatchScope" function
               (:decorators 
                  ( ("contextmanager" function (:type "decorator") nil nil))                  
                :arguments 
                  ( ("what" variable nil (reparse-symbol function_parameters) [3900 3904]))                  )
                nil [3863 4011])
            ("MonkeyPatch" function (:arguments 
              ( ("module" variable nil (reparse-symbol function_parameters) [4251 4257])
                ("name" variable nil (reparse-symbol function_parameters) [4259 4263])
                ("that" variable nil (reparse-symbol function_parameters) [4265 4269]))              ) nil [4235 4487])
            ("MonkeyClass" function (:arguments 
              ( ("module" variable nil (reparse-symbol function_parameters) [4851 4857])
                ("name" variable nil (reparse-symbol function_parameters) [4859 4863])
                ("that" variable nil (reparse-symbol function_parameters) [4865 4869]))              ) nil [4835 5636]))          
      :file "monkeypatch.py"
      :pointmax 5636
      :fsize 5635
      :lastmodtime '(23940 27965 101941 877000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [822 860])
            ("__future__" include nil nil [861 892])
            ("errno" include nil nil [893 905])
            ("functools" include nil nil [906 922])
            ("inspect" include nil nil [923 937])
            ("io" include nil nil [938 947])
            ("logging" include nil nil [948 962])
            ("os" include nil nil [963 972])
            ("pickle" include nil nil [973 986])
            ("platform" include nil nil [987 1002])
            ("unittest" include nil nil [1003 1018])
            ("uuid" include nil nil [1019 1030])
            ("functools" include nil nil [1031 1058])
            ("shutil" include nil nil [1059 1072])
            ("sys" include nil nil [1073 1083])
            ("six.moves" include nil nil [1084 1118])
            ("six.moves" include nil nil [1119 1146])
            ("tempfile" include nil nil [1147 1162])
            ("threading" include nil nil [1163 1179])
            ("time" include nil nil [1180 1191])
            ("contextlib" include nil nil [1192 1229])
            ("xml.etree.ElementTree" include nil nil [1230 1264])
            ("try" code nil nil [1266 1344])
            ("mock" code nil nil [1344 1348])
            ("nose" include nil nil [1350 1373])
            ("nose" include nil nil [1374 1395])
            ("nose" include nil nil [1396 1419])
            ("rccpxuanyuan" include nil nil [1421 1440])
            ("rccpxuanyuan.common" include nil nil [1442 1479])
            ("rccpxuanyuan.common" include nil nil [1480 1519])
            ("rccpxuanyuan.common" include nil nil [1520 1560])
            ("rccpxuanyuan.common.time" include nil nil [1561 1592])
            ("rccpxuanyuantests.monkeypatch" include nil nil [1594 1641])
            ("" code nil nil [1687 1799])
            ("TEMPDIR" variable nil nil [1917 1937])
            ("PERMUTATION_ATTR" variable nil nil [1939 1974])
            ("_ARCH_REAL" variable nil nil [1976 2007])
            ("_ARCH_FAKE" variable nil nil [2008 2029])
            ("Sigargs" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("try" code nil (reparse-symbol indented_block_body) [2094 2291])
                            ("self" variable nil (reparse-symbol indented_block_body) [2299 2326]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2073 2077])
                            ("func" variable nil (reparse-symbol function_parameters) [2079 2083]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [2060 2327])
                    ("args" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2355 2359]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [2332 2561])
                    ("varargs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2592 2596]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [2566 2854])
                    ("keywords" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2886 2890]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [2859 3154])
                    ("defaults" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3186 3190]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [3159 3373]))                  
                :type "class")
                nil [2032 3373])
            ("dummyTextGenerator" function (:arguments 
              ( ("size" variable nil (reparse-symbol function_parameters) [3398 3402]))              ) nil [3375 4041])
            ("_getPermutation" function (:arguments 
              ( ("f" variable nil (reparse-symbol function_parameters) [4063 4064])
                ("args" variable nil (reparse-symbol function_parameters) [4066 4070]))              ) nil [4043 4160])
            ("expandPermutations" function (:arguments 
              ( ("cls" variable nil (reparse-symbol function_parameters) [4185 4188]))              ) nil [4162 4866])
            ("permutations" function (:arguments 
              ( ("perms" variable nil (reparse-symbol function_parameters) [4885 4890]))              ) nil [4868 4997])
            ("TermColor" type
               (:superclasses ("object")
                :members 
                  ( ("black" variable nil (reparse-symbol indented_block_body) [5028 5038])
                    ("red" variable nil (reparse-symbol indented_block_body) [5043 5051])
                    ("green" variable nil (reparse-symbol indented_block_body) [5056 5066])
                    ("yellow" variable nil (reparse-symbol indented_block_body) [5071 5082])
                    ("blue" variable nil (reparse-symbol indented_block_body) [5087 5096])
                    ("magenta" variable nil (reparse-symbol indented_block_body) [5101 5113])
                    ("cyan" variable nil (reparse-symbol indented_block_body) [5118 5127])
                    ("white" variable nil (reparse-symbol indented_block_body) [5132 5142]))                  
                :type "class")
                nil [4999 5143])
            ("colorWrite" function (:arguments 
              ( ("stream" variable nil (reparse-symbol function_parameters) [5160 5166])
                ("text" variable nil (reparse-symbol function_parameters) [5168 5172])
                ("color" variable nil (reparse-symbol function_parameters) [5174 5179]))              ) nil [5145 5353])
            ("temporaryPath" function
               (:decorators 
                  ( ("contextmanager" function (:type "decorator") nil nil))                  
                :arguments 
                  ( ("perms" variable nil (reparse-symbol function_parameters) [5389 5394])
                    ("data" variable nil (reparse-symbol function_parameters) [5401 5405])
                    ("dir" variable nil (reparse-symbol function_parameters) [5412 5415]))                  )
                nil [5355 5703])
            ("namedTemporaryDir" function
               (:decorators 
                  ( ("contextmanager" function (:type "decorator") nil nil))                  
                :arguments 
                  ( ("dir" variable nil (reparse-symbol function_parameters) [5743 5746]))                  )
                nil [5705 5869])
            ("make_file" function (:arguments 
              ( ("path" variable nil (reparse-symbol function_parameters) [5885 5889])
                ("size" variable nil (reparse-symbol function_parameters) [5891 5895]))              ) nil [5871 6109])
            ("_rccpxuanyuan_machine" function nil nil [6111 6379])
            ("RccpXuanYuanTestCase" type
               (:superclasses ("unittest.TestCase")
                :members 
                  ( ("_patch_arch" variable nil (reparse-symbol indented_block_body) [6433 6515])
                    ("__init__" function
                       (:suite 
                          ( ("unittest" code nil (reparse-symbol indented_block_body) [6566 6615])
                            ("self" variable nil (reparse-symbol indented_block_body) [6624 6677])
                            ("self" variable nil (reparse-symbol indented_block_body) [6686 6705]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6534 6538])
                            ("args" variable nil (reparse-symbol function_parameters) [6540 6545])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [6547 6555]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [6521 6758])
                    ("setUpClass" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [6795 6798]))                          )
                        (reparse-symbol indented_block_body) [6763 6833])
                    ("tearDownClass" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [6873 6876]))                          )
                        (reparse-symbol indented_block_body) [6838 6912])
                    ("retryAssert" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6933 6937])
                            ("args" variable nil (reparse-symbol function_parameters) [6939 6944])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [6946 6954]))                          )
                        (reparse-symbol indented_block_body) [6917 7391])
                    ("assertNotRaises" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7416 7420])
                            ("callableObj" variable nil (reparse-symbol function_parameters) [7422 7433])
                            ("args" variable nil (reparse-symbol function_parameters) [7440 7445])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [7447 7455]))                          )
                        (reparse-symbol indented_block_body) [7396 7734])
                    ("assertElapsed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7777 7781])
                            ("expected" variable nil (reparse-symbol function_parameters) [7783 7791])
                            ("tolerance" variable nil (reparse-symbol function_parameters) [7793 7802]))                          
                        :decorators 
                          ( ("contextmanager" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [7739 8065])
                    ("assertEquals" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8087 8091])
                            ("args" variable nil (reparse-symbol function_parameters) [8093 8098])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [8100 8108]))                          )
                        (reparse-symbol indented_block_body) [8070 8307]))                  
                :type "class")
                nil [6381 8307])
            ("XMLTestCase" type
               (:superclasses ("RccpXuanYuanTestCase")
                :members 
                  ( ("assertXMLEqual" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8374 8378])
                            ("xml" variable nil (reparse-symbol function_parameters) [8380 8383])
                            ("expectedXML" variable nil (reparse-symbol function_parameters) [8385 8396]))                          
                        :documentation "
        Assert that xml is equivalent to expected xml, ignoring whitespace
        differences.

        In case of a mismatch, display normalized xmls to make it easier to
        find the differences.
        ")
                        (reparse-symbol indented_block_body) [8355 9051])
                    ("assert_dom_xml_equal" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9081 9085])
                            ("dom" variable nil (reparse-symbol function_parameters) [9087 9090])
                            ("expected_xml" variable nil (reparse-symbol function_parameters) [9092 9104]))                          )
                        (reparse-symbol indented_block_body) [9056 9191]))                  
                :type "class")
                nil [8309 9191])
            ("find_xml_element" function
               (:documentation "
    Finds the first element matching match. match may be a tag name or path.
    Returns found element xml.

    path is using the limmited supported xpath syntax:
    https://docs.python.org/2/library/
        xml.etree.elementtree.html#supported-xpath-syntax
    Note that xpath support in Python 2.6 is partial and undocumented.
    "
                :arguments 
                  ( ("xml" variable nil (reparse-symbol function_parameters) [9214 9217])
                    ("match" variable nil (reparse-symbol function_parameters) [9219 9224]))                  )
                nil [9193 9746])
            ("RccpXuanYuanTestResult" type
               (:superclasses ("result.TextTestResult")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("result" code nil (reparse-symbol indented_block_body) [9850 9903])
                            ("self" variable nil (reparse-symbol indented_block_body) [9912 9934]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9818 9822])
                            ("args" variable nil (reparse-symbol function_parameters) [9824 9829])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [9831 9839]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [9805 9935])
                    ("_writeResult" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9957 9961])
                            ("test" variable nil (reparse-symbol function_parameters) [9963 9967])
                            ("long_result" variable nil (reparse-symbol function_parameters) [9969 9980])
                            ("color" variable nil (reparse-symbol function_parameters) [9982 9987])
                            ("short_result" variable nil (reparse-symbol function_parameters) [9989 10001])
                            ("success" variable nil (reparse-symbol function_parameters) [10003 10010]))                          )
                        (reparse-symbol indented_block_body) [9940 10228])
                    ("addSuccess" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10248 10252])
                            ("test" variable nil (reparse-symbol function_parameters) [10254 10258]))                          )
                        (reparse-symbol indented_block_body) [10233 10378])
                    ("addFailure" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10398 10402])
                            ("test" variable nil (reparse-symbol function_parameters) [10404 10408])
                            ("err" variable nil (reparse-symbol function_parameters) [10410 10413]))                          )
                        (reparse-symbol indented_block_body) [10383 10539])
                    ("addError" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10557 10561])
                            ("test" variable nil (reparse-symbol function_parameters) [10563 10567])
                            ("err" variable nil (reparse-symbol function_parameters) [10569 10572]))                          )
                        (reparse-symbol indented_block_body) [10544 11743])
                    ("startTest" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11762 11766])
                            ("test" variable nil (reparse-symbol function_parameters) [11768 11772]))                          )
                        (reparse-symbol indented_block_body) [11748 12279]))                  
                :type "class")
                nil [9748 12279])
            ("not_raises" function
               (:decorators 
                  ( ("contextmanager" function (:type "decorator") nil nil))                  
                :arguments 
                  ( ("test_case" variable nil (reparse-symbol function_parameters) [12312 12321]))                  )
                nil [12281 12443])
            ("AssertingLock" type
               (:documentation "
    Lock that raises when trying to acquire a locked lock.
    "
                :superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [12581 12610]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12566 12570]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [12553 12611])
                    ("__enter__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12630 12634]))                          )
                        (reparse-symbol indented_block_body) [12616 12758])
                    ("__exit__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12776 12780])
                            ("args" variable nil (reparse-symbol function_parameters) [12782 12787]))                          )
                        (reparse-symbol indented_block_body) [12763 12819]))                  
                :type "class")
                nil [12445 12819])
            ("RccpXuanYuanTestRunner" type
               (:superclasses ("core.TextTestRunner")
                :members 
                  ( ("_makeResult" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12893 12897]))                          )
                        (reparse-symbol indented_block_body) [12877 13089]))                  
                :type "class")
                nil [12821 13089])
            ("run" function nil nil [13091 13849])
            ("make_config" function
               (:documentation "
    Create a rccpxuanyuan.config.config clone, modified by tunables
    tunables is a list of (section, key, val) tuples
    "
                :arguments 
                  ( ("tunables" variable nil (reparse-symbol function_parameters) [13867 13875]))                  )
                nil [13851 14190])
            ("recorded" function
               (:documentation "
    Method decorator recording calls to receiver __calls__ list.

    Can decorate an instance method or class method. Instance methods are
    stored in the instance __calls__ list, and class methods in the class
    __class_calls__ list.

    You are responsible for clearing the class __class_calls__.

    Note: when decorating a class method, this decorator must be after the
    @classmethod decorator:

    class Foo(objet):

        @classmethod
        @recorded
        def foo(cls):
            pass

    "
                :arguments 
                  ( ("meth" variable nil (reparse-symbol function_parameters) [14205 14209]))                  )
                nil [14192 15184])
            ("LockingThread" type
               (:documentation "
    A thread that locks the given context, for testing locks.

    When starting this thead, you should wait on its ready event, to make sure
    the thread was started.  Then you should sleep some time to make sure the
    thread tried to acquire the context.

    To check if the thread did acquire the context, wait on the thread
    acquired event with timeout=0.

    To check that the thread is blocked on the context, wait on the acquired
    event with bigger timeout (e.g, 0.5).
    "
                :superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [15761 15791])
                            ("self" variable nil (reparse-symbol indented_block_body) [15800 15833])
                            ("self" variable nil (reparse-symbol indented_block_body) [15842 15871])
                            ("self" variable nil (reparse-symbol indented_block_body) [15880 15903])
                            ("self" variable nil (reparse-symbol indented_block_body) [15912 15931]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15737 15741])
                            ("context" variable nil (reparse-symbol function_parameters) [15743 15750]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [15724 15932])
                    ("start" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15947 15951]))                          )
                        (reparse-symbol indented_block_body) [15937 16001])
                    ("stop" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16015 16019]))                          )
                        (reparse-symbol indented_block_body) [16006 16074])
                    ("_run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16088 16092]))                          )
                        (reparse-symbol indented_block_body) [16079 16209]))                  
                :type "class")
                nil [15186 16209])
            ("start_thread" function (:arguments 
              ( ("func" variable nil (reparse-symbol function_parameters) [16228 16232])
                ("args" variable nil (reparse-symbol function_parameters) [16234 16239])
                ("kwargs" variable nil (reparse-symbol function_parameters) [16241 16249]))              ) nil [16211 16363])
            ("forked" function
               (:documentation "
    Decorator for running a test in a child process. Excpetions in the child
    process will be re-raised in the parent.
    "
                :arguments 
                  ( ("f" variable nil (reparse-symbol function_parameters) [16376 16377]))                  )
                nil [16365 17171])
            ("online_cpus" function nil nil [17173 17255])
            ("maybefail" function
               (:documentation "
    Method decorator that will raise the excpetion stored in the instance's
    errors dict.

    Objects using this decorator must define an errors instance
    variable:

    class Foo(object):

        def __init__(self):
            self.errors = {}

        @maybefail
        def method_name(self):
            return True

    To make a method fail, set an error:

        obj.errors[\"method_name\"] = ValueError

    All calls to method_name will raise now ValueError.  To stop the failures,
    delete the error:

        del obj.errors[\"method_name\"]

    "
                :arguments 
                  ( ("meth" variable nil (reparse-symbol function_parameters) [17271 17275]))                  )
                nil [17257 18101])
            ("read_data" function
               (:documentation "
    Returns the content of a test data file, as plain string.
    The test data file any file path under the data/ subdirectory
    in the tests directory.
    "
                :arguments 
                  ( ("filename" variable nil (reparse-symbol function_parameters) [18117 18125]))                  )
                nil [18103 18580])
            ("wait_for_job" function
               (:documentation "
    Wait for a jobs.Job to complete (either success or failure)
    "
                :arguments 
                  ( ("job" variable nil (reparse-symbol function_parameters) [18599 18602]))                  )
                nil [18582 18729])
            ("make_uuid" function (:documentation "
    Return a new UUID version 4 string for use with rccpxuanyuan APIs
    ") nil [18731 18863])
            ("ipv6_enabled" function (:decorators 
              ( ("cache.Memoized" function (:type "decorator") nil nil))              ) nil [18865 19306])
            ("multi_thread_run" function (:arguments 
              ( ("thread_num" variable nil (reparse-symbol function_parameters) [19329 19339])
                ("execute" variable nil (reparse-symbol function_parameters) [19341 19348])
                ("args" variable nil (reparse-symbol function_parameters) [19350 19355])
                ("kwargs" variable nil (reparse-symbol function_parameters) [19357 19365]))              ) nil [19308 19567])
            ("new_thread_running_deamon" function (:arguments 
              ( ("err_pac" variable nil (reparse-symbol function_parameters) [19599 19606])
                ("execute" variable nil (reparse-symbol function_parameters) [19608 19615])
                ("args" variable nil (reparse-symbol function_parameters) [19617 19622])
                ("kwargs" variable nil (reparse-symbol function_parameters) [19624 19632]))              ) nil [19569 20026]))          
      :file "testlib.py"
      :pointmax 20027
      :fsize 20026
      :lastmodtime '(23940 27965 100941 854000)
      :unmatched-syntax '((INDENT_BLOCK 19767 . 19799) (NEWLINE 19766 . 19767) (COLON 19765 . 19766) (TRY 19692 . 19695) (AS 19759 . 19761) (INDENT_BLOCK 19113 . 19227) (NEWLINE 19112 . 19113) (COLON 19111 . 19112) (TRY 19006 . 19009) (AS 19107 . 19109) (INDENT_BLOCK 16784 . 16865) (NEWLINE 16783 . 16784) (COLON 16782 . 16783) (TRY 16676 . 16679) (AS 16778 . 16780) (INDENT_BLOCK 12374 . 12443) (NEWLINE 12373 . 12374) (COLON 12372 . 12373) (TRY 12328 . 12331) (AS 12368 . 12370) (INDENT_BLOCK 5999 . 6053) (NEWLINE 5998 . 5999) (COLON 5997 . 5998) (TRY 5940 . 5943) (AS 5993 . 5995) (RETURN 3058 . 3064) (IF 3070 . 3072) (ELSE 3088 . 3092) (RETURN 2761 . 2767) (IF 2773 . 2775) (ELSE 2790 . 2794)))
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [821 859])
            ("__future__" include nil nil [860 891])
            ("errno" include nil nil [893 905])
            ("io" include nil nil [906 915])
            ("os" include nil nil [916 925])
            ("re" include nil nil [926 935])
            ("xml.etree.ElementTree" include nil nil [936 973])
            ("rccpxuanyuan.common.cache" include nil nil [975 1021])
            ("libvirt" include nil nil [1023 1037])
            ("_SCSI" variable nil nil [1039 1447])
            ("_STORAGE" variable nil nil [1449 2073])
            ("_SCSI_GENERIC" variable nil nil [2075 2379])
            ("Error" function (:arguments 
              ( ("code" variable nil (reparse-symbol function_parameters) [2392 2396])
                ("msg" variable nil (reparse-symbol function_parameters) [2398 2401]))              ) nil [2382 2494])
            ("Connection" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [2562 2579]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2540 2544])
                            ("args" variable nil (reparse-symbol function_parameters) [2546 2551]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [2527 2580])
                    ("secretDefineXML" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2605 2609])
                            ("xml" variable nil (reparse-symbol function_parameters) [2611 2614]))                          )
                        (reparse-symbol indented_block_body) [2585 3452])
                    ("secretLookupByUUIDString" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3486 3490])
                            ("uuid" variable nil (reparse-symbol function_parameters) [3492 3496]))                          )
                        (reparse-symbol indented_block_body) [3457 3621])
                    ("lookupByUUIDString" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3649 3653])
                            ("uuid" variable nil (reparse-symbol function_parameters) [3655 3659]))                          )
                        (reparse-symbol indented_block_body) [3626 3697])
                    ("listAllSecrets" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3721 3725])
                            ("flags" variable nil (reparse-symbol function_parameters) [3727 3732]))                          )
                        (reparse-symbol indented_block_body) [3702 3780])
                    ("domainEventRegisterAny" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3812 3816])
                            ("arg" variable nil (reparse-symbol function_parameters) [3818 3822]))                          )
                        (reparse-symbol indented_block_body) [3785 3838])
                    ("listAllNetworks" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3863 3867])
                            ("args" variable nil (reparse-symbol function_parameters) [3869 3874]))                          )
                        (reparse-symbol indented_block_body) [3843 3895])
                    ("nodeDeviceLookupByName" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3927 3931])
                            ("name" variable nil (reparse-symbol function_parameters) [3933 3937]))                          
                        :documentation "
        This is a method that allows us to access hostdev XML in a test.
        Normally, libvirt holds the device XML but in case of unit testing,
        we cannot access the libvirt.

        If we want to use hostdev in a test, the XML itself must be supplied
        in tests/devices/data/${device address passed}.
        ")
                        (reparse-symbol indented_block_body) [3900 4891])
                    ("__hostdevtree" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4928 4932]))                          
                        :decorators 
                          ( ("Memoized" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [4896 5758]))                  
                :type "class")
                nil [2496 5758])
            ("Secret" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [5861 5875])
                            ("self" variable nil (reparse-symbol indented_block_body) [5884 5900])
                            ("self" variable nil (reparse-symbol indented_block_body) [5909 5937])
                            ("self" variable nil (reparse-symbol indented_block_body) [5946 5970])
                            ("self" variable nil (reparse-symbol indented_block_body) [5979 6009])
                            ("self" variable nil (reparse-symbol indented_block_body) [6018 6035]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5800 5804])
                            ("con" variable nil (reparse-symbol function_parameters) [5806 5809])
                            ("uuid" variable nil (reparse-symbol function_parameters) [5811 5815])
                            ("usage_type" variable nil (reparse-symbol function_parameters) [5817 5827])
                            ("usage_id" variable nil (reparse-symbol function_parameters) [5829 5837])
                            ("description" variable nil (reparse-symbol function_parameters) [5839 5850]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [5787 6036])
                    ("undefine" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6054 6058]))                          )
                        (reparse-symbol indented_block_body) [6041 6101])
                    ("UUIDString" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6121 6125]))                          )
                        (reparse-symbol indented_block_body) [6106 6153])
                    ("usageID" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6170 6174]))                          )
                        (reparse-symbol indented_block_body) [6158 6206])
                    ("setValue" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6224 6228])
                            ("value" variable nil (reparse-symbol function_parameters) [6230 6235]))                          )
                        (reparse-symbol indented_block_body) [6211 6265]))                  
                :type "class")
                nil [5760 6265])
            ("VirNodeDeviceStub" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [6343 6357])
                            ("if" code nil (reparse-symbol indented_block_body) [6366 6783]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6318 6322])
                            ("xml" variable nil (reparse-symbol function_parameters) [6324 6327]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [6305 6783])
                    ("XMLDesc" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6800 6804])
                            ("flags" variable nil (reparse-symbol function_parameters) [6806 6811]))                          )
                        (reparse-symbol indented_block_body) [6788 6925])
                    ("name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6939 6943]))                          )
                        (reparse-symbol indented_block_body) [6930 7073])
                    ("dettach" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7368 7372]))                          )
                        (reparse-symbol indented_block_body) [7356 7460])
                    ("reAttach" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7478 7482]))                          )
                        (reparse-symbol indented_block_body) [7465 7570]))                  
                :type "class")
                nil [6267 7570])
            ("FakeRunningVm" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [7640 7656]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7619 7623])
                            ("uuid" variable nil (reparse-symbol function_parameters) [7625 7629]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [7606 7657])
                    ("jobStats" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7675 7679]))                          )
                        (reparse-symbol indented_block_body) [7662 7700])
                    ("state" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7715 7719])
                            ("flags" variable nil (reparse-symbol function_parameters) [7721 7726]))                          )
                        (reparse-symbol indented_block_body) [7705 7775])
                    ("XMLDesc" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7792 7796])
                            ("flags" variable nil (reparse-symbol function_parameters) [7798 7803]))                          )
                        (reparse-symbol indented_block_body) [7780 7882]))                  
                :type "class")
                nil [7572 7882])
            ("parse_secret" function (:arguments 
              ( ("xml" variable nil (reparse-symbol function_parameters) [7901 7904]))              ) nil [7884 8512]))          
      :file "vmfakecon.py"
      :pointmax 8512
      :fsize 8511
      :lastmodtime '(23940 27965 145942 889000)
      :unmatched-syntax '((INDENT_BLOCK 4656 . 4845) (NEWLINE 4655 . 4656) (COLON 4654 . 4655) (TRY 4509 . 4512) (AS 4650 . 4652)))
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [816 854])
            ("__future__" include nil nil [855 886])
            ("logging" include nil nil [888 902])
            ("rccpxuanyuan" include nil nil [903 936])
            ("FakeScheduler" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1001 1016]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [986 990]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [973 1017])
                    ("schedule" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1035 1039])
                            ("delay" variable nil (reparse-symbol function_parameters) [1041 1046])
                            ("callable" variable nil (reparse-symbol function_parameters) [1048 1056]))                          )
                        (reparse-symbol indented_block_body) [1022 1159]))                  
                :type "class")
                nil [939 1159])
            ("FakeLogger" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1241 1259])
                            ("self" variable nil (reparse-symbol indented_block_body) [1268 1286]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1205 1209])
                            ("level" variable nil (reparse-symbol function_parameters) [1211 1216]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1192 1287])
                    ("log" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1300 1304])
                            ("level" variable nil (reparse-symbol function_parameters) [1306 1311])
                            ("fmt" variable nil (reparse-symbol function_parameters) [1313 1316])
                            ("args" variable nil (reparse-symbol function_parameters) [1318 1323])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [1325 1333]))                          )
                        (reparse-symbol indented_block_body) [1292 1486])
                    ("debug" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1501 1505])
                            ("fmt" variable nil (reparse-symbol function_parameters) [1507 1510])
                            ("args" variable nil (reparse-symbol function_parameters) [1512 1517])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [1519 1527]))                          )
                        (reparse-symbol indented_block_body) [1491 1584])
                    ("info" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1598 1602])
                            ("fmt" variable nil (reparse-symbol function_parameters) [1604 1607])
                            ("args" variable nil (reparse-symbol function_parameters) [1609 1614])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [1616 1624]))                          )
                        (reparse-symbol indented_block_body) [1589 1680])
                    ("warning" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1697 1701])
                            ("fmt" variable nil (reparse-symbol function_parameters) [1703 1706])
                            ("args" variable nil (reparse-symbol function_parameters) [1708 1713])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [1715 1723]))                          )
                        (reparse-symbol indented_block_body) [1685 1782])
                    ("error" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1797 1801])
                            ("fmt" variable nil (reparse-symbol function_parameters) [1803 1806])
                            ("args" variable nil (reparse-symbol function_parameters) [1808 1813])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [1815 1823]))                          )
                        (reparse-symbol indented_block_body) [1787 1880])
                    ("exception" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1899 1903])
                            ("fmt" variable nil (reparse-symbol function_parameters) [1905 1908])
                            ("args" variable nil (reparse-symbol function_parameters) [1910 1915]))                          )
                        (reparse-symbol indented_block_body) [1885 1977])
                    ("isEnabledFor" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1999 2003])
                            ("level" variable nil (reparse-symbol function_parameters) [2005 2010]))                          )
                        (reparse-symbol indented_block_body) [1982 2048]))                  
                :type "class")
                nil [1161 2048])
            ("FakeNotifier" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [2111 2126]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2096 2100]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [2083 2127])
                    ("notify" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2143 2147])
                            ("event_id" variable nil (reparse-symbol function_parameters) [2149 2157])
                            ("params" variable nil (reparse-symbol function_parameters) [2159 2165]))                          )
                        (reparse-symbol indented_block_body) [2132 2219]))                  
                :type "class")
                nil [2050 2219]))          
      :file "fakelib.py"
      :pointmax 2219
      :fsize 2218
      :lastmodtime '(23940 27965 92941 670000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :file "hostdevlib.py"
      :fsize 22373
      :lastmodtime '(23940 27965 99941 831000))
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [822 860])
            ("__future__" include nil nil [861 892])
            ("sys" include nil nil [894 904])
            ("copy" include nil nil [905 916])
            ("logging" include nil nil [917 931])
            ("mock" include nil nil [932 943])
            ("mock" include nil nil [944 965])
            ("rccpxuanyuan" include nil nil [966 994])
            ("rccpxuanyuan.API" include nil nil [995 1033])
            ("rccpxuanyuan.common" include nil nil [1034 1069])
            ("rccpxuanyuan.common" include nil nil [1070 1106])
            ("rccpxuanyuan.common" include nil nil [1107 1147])
            ("rccpxuanyuan.common" include nil nil [1148 1191])
            ("rccpxuanyuan.common" include nil nil [1192 1241])
            ("monkeypatch" include nil nil [1243 1283])
            ("testlib" include nil nil [1284 1340])
            ("testlib" include nil nil [1341 1369])
            ("FakeGlobalAPI" type
               (:superclasses ("GlobalAPI")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [8316 8334])
                            ("self" variable nil (reparse-symbol indented_block_body) [8343 8360]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8301 8305]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [8288 8361]))                  
                :type "class")
                nil [8251 8361])
            ("TestGlobalAPI" type
               (:members 
                  ( ("setup" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8398 8402]))                          )
                        (reparse-symbol indented_block_body) [8388 8447])
                    ("" code nil (reparse-symbol indented_block_body) [8463 8513])
                    ("test_call_proxy_api" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8542 8546])
                            ("mock_get_proxy" variable nil (reparse-symbol function_parameters) [8548 8562]))                          )
                        (reparse-symbol indented_block_body) [8518 9336]))                  
                :type "class")
                nil [8362 9336]))          
      :file "test_api.py"
      :pointmax 9336
      :fsize 9335
      :lastmodtime '(23940 27965 134942 636000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [822 860])
            ("__future__" include nil nil [861 892])
            ("__future__" include nil nil [894 931])
            ("copy" include nil nil [932 943])
            ("logging" include nil nil [944 958])
            ("os" include nil nil [959 968])
            ("os.path" include nil nil [969 983])
            ("signal" include nil nil [984 997])
            ("sys" include nil nil [998 1008])
            ("time" include nil nil [1009 1020])
            ("timeit" include nil nil [1021 1034])
            ("rccpxuanyuan" include nil nil [1036 1068])
            ("rccpxuanyuan" include nil nil [1069 1099])
            ("rccpxuanyuan.common" include nil nil [1100 1140])
            ("rccpxuanyuan.common" include nil nil [1141 1181])
            ("rccpxuanyuan.common" include nil nil [1182 1222])
            ("rccpxuanyuan.common" include nil nil [1223 1263])
            ("rccpxuanyuan.common.time" include nil nil [1264 1295])
            ("monkeypatch" include nil nil [1297 1332])
            ("vmTestsData" include nil nil [1333 1371])
            ("monkeypatch" include nil nil [1372 1401])
            ("fakelib" include nil nil [1402 1432])
            ("testlib" include nil nil [1433 1472])
            ("testlib" include nil nil [1473 1525])
            ("testlib" include nil nil [1526 1582])
            ("testValidation" include nil nil [1583 1620])
            ("EXT_SLEEP" variable nil nil [1622 1641])
            ("FakeMonotonicTime" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1715 1729])
                            ("self" variable nil (reparse-symbol indented_block_body) [1738 1972]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1695 1699])
                            ("now" variable nil (reparse-symbol function_parameters) [1701 1704]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1682 1973])
                    ("monotonic_time" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1997 2001]))                          )
                        (reparse-symbol indented_block_body) [1978 2028])
                    ("sleep" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2043 2047])
                            ("seconds" variable nil (reparse-symbol function_parameters) [2049 2056]))                          )
                        (reparse-symbol indented_block_body) [2033 2087])
                    ("__enter__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2106 2110]))                          )
                        (reparse-symbol indented_block_body) [2092 2160])
                    ("__exit__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2178 2182])
                            ("_" variable nil (reparse-symbol function_parameters) [2184 2186]))                          )
                        (reparse-symbol indented_block_body) [2165 2217]))                  
                :type "class")
                nil [1644 2217])
            ("TestTerminating" type
               (:superclasses ("TestCaseBase")
                :members 
                  ( ("setUp" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2271 2275]))                          )
                        (reparse-symbol indented_block_body) [2261 2465])
                    ("tearDown" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2483 2487]))                          )
                        (reparse-symbol indented_block_body) [2470 2585])
                    ("test_process_running" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2615 2619]))                          )
                        (reparse-symbol indented_block_body) [2590 2780])
                    ("test_process_zombie" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2809 2813]))                          )
                        (reparse-symbol indented_block_body) [2785 3130])
                    ("test_process_terminated" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3163 3167]))                          )
                        (reparse-symbol indented_block_body) [3135 3475])
                    ("test_poll_failure" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3502 3506]))                          )
                        (reparse-symbol indented_block_body) [3480 3644])
                    ("test_kill_failure" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3671 3675]))                          )
                        (reparse-symbol indented_block_body) [3649 3813])
                    ("test_wait_failure" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3840 3844]))                          )
                        (reparse-symbol indented_block_body) [3818 3982])
                    ("check_failure" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4005 4009]))                          )
                        (reparse-symbol indented_block_body) [3987 4305]))                  
                :type "class")
                nil [2219 4305])
            ("ExpectedFailure" type
               (:superclasses ("Exception")
                :members 
                  ( ("pass" code nil (reparse-symbol indented_block_body) [4529 4533]))                  
                :type "class")
                nil [4491 4534])
            ("wait_for_zombie" function (:arguments 
              ( ("proc" variable nil (reparse-symbol function_parameters) [4556 4560])
                ("timeout" variable nil (reparse-symbol function_parameters) [4562 4569])
                ("interval" variable nil (reparse-symbol function_parameters) [4571 4579]))              ) nil [4536 4910])
            ("is_zombie" function (:arguments 
              ( ("proc" variable nil (reparse-symbol function_parameters) [4926 4930]))              ) nil [4912 5087])
            ("TestRetry" type
               (:superclasses ("TestCaseBase")
                :members 
                  ( ("testStopCallback" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5145 5149]))                          )
                        (reparse-symbol indented_block_body) [5124 5854])
                    ("" code nil (reparse-symbol indented_block_body) [5870 5899])
                    ("testTimeoutDeadlineReached" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5935 5939]))                          )
                        (reparse-symbol indented_block_body) [5904 6416])
                    ("" code nil (reparse-symbol indented_block_body) [6432 6483])
                    ("testTimeoutNoTimeForSleep" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6518 6522]))                          )
                        (reparse-symbol indented_block_body) [6488 6950])
                    ("testTimeoutSleepOnce" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6980 6984]))                          )
                        (reparse-symbol indented_block_body) [6955 7562])
                    ("testTimeoutZero" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7587 7591]))                          )
                        (reparse-symbol indented_block_body) [7567 7895]))                  
                :type "class")
                nil [5089 7895])
            ("TestGetCmdArgs" type
               (:superclasses ("TestCaseBase")
                :members 
                  ( ("test" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7946 7950]))                          )
                        (reparse-symbol indented_block_body) [7937 8322])
                    ("testZombie" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8342 8346]))                          )
                        (reparse-symbol indented_block_body) [8327 8704]))                  
                :type "class")
                nil [7897 8704])
            ("TestGeneralUtils" type
               (:superclasses ("TestCaseBase")
                :members 
                  ( ("''' 卸载工具后失败
    def test_panic(self):
        cmd = [sys.executable, \"panic_helper.py\"]
        rc, out, err = commands.execCmd(cmd)
        self.assertEqual(rc, -9)
    '''" code nil (reparse-symbol indented_block_body) [8769 8942])
                    ("testReadMemInfo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8968 8972]))                          )
                        (reparse-symbol indented_block_body) [8948 9484])
                    ("testParseMemInfo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9510 9514]))                          )
                        (reparse-symbol indented_block_body) [9489 9947])
                    ("" code nil (reparse-symbol indented_block_body) [9965 10188])
                    ("test_unique" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10209 10213])
                            ("iterable" variable nil (reparse-symbol function_parameters) [10215 10223])
                            ("unique_items" variable nil (reparse-symbol function_parameters) [10225 10237]))                          )
                        (reparse-symbol indented_block_body) [10193 10304]))                  
                :type "class")
                nil [8726 10304])
            ("TestAsyncProcessOperation" type
               (:superclasses ("TestCaseBase")
                :members 
                  ( ("_echo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10367 10371])
                            ("text" variable nil (reparse-symbol function_parameters) [10373 10377]))                          )
                        (reparse-symbol indented_block_body) [10357 10562])
                    ("_sleep" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10578 10582])
                            ("t" variable nil (reparse-symbol function_parameters) [10584 10585]))                          )
                        (reparse-symbol indented_block_body) [10567 10700])
                    ("_fail" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10715 10719])
                            ("t" variable nil (reparse-symbol function_parameters) [10721 10722]))                          )
                        (reparse-symbol indented_block_body) [10705 10918])
                    ("test" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10932 10936]))                          )
                        (reparse-symbol indented_block_body) [10923 11030])
                    ("testAlreadyExitedSuccess" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11064 11068]))                          )
                        (reparse-symbol indented_block_body) [11035 11184])
                    ("testAlreadyExitedFail" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11215 11219]))                          )
                        (reparse-symbol indented_block_body) [11189 11392])
                    ("testWait" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11410 11414]))                          )
                        (reparse-symbol indented_block_body) [11397 11474])
                    ("testParser" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11494 11498]))                          )
                        (reparse-symbol indented_block_body) [11479 11590])
                    ("testStop" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11608 11612]))                          )
                        (reparse-symbol indented_block_body) [11595 11809])
                    ("testException" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11832 11836]))                          )
                        (reparse-symbol indented_block_body) [11814 11975]))                  
                :type "class")
                nil [10306 11975])
            ("TestCallbackChain" type
               (:superclasses ("TestCaseBase")
                :members 
                  ( ("testCanPassIterableOfCallbacks" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12055 12059]))                          )
                        (reparse-symbol indented_block_body) [12020 12223])
                    ("testEmptyChainIsNoop" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12253 12257]))                          )
                        (reparse-symbol indented_block_body) [12228 12383])
                    ("testAllCallbacksAreInvokedIfTheyReturnFalse" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12500 12504]))                          )
                        (reparse-symbol indented_block_body) [12452 12758])
                    ("testChainStopsAfterSuccessfulCallback" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12805 12809]))                          )
                        (reparse-symbol indented_block_body) [12763 13073])
                    ("testArgsPassedToCallback" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13107 13111]))                          )
                        (reparse-symbol indented_block_body) [13078 13509]))                  
                :type "class")
                nil [11977 13509])
            ("TestTraceback" type
               (:superclasses ("TestCaseBase")
                :members 
                  ( ("test_failure" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13568 13572]))                          )
                        (reparse-symbol indented_block_body) [13551 13861]))                  
                :type "class")
                nil [13511 13861])
            ("TestRollbackContext" type
               (:superclasses ("TestCaseBase")
                :members 
                  ( ("UndoException" type
                       (:documentation "A special exception for testing exceptions during undo functions"
                        :superclasses ("Exception")
                        :type "class")
                        (reparse-symbol indented_block_body) [13909 14020])
                    ("OriginalException" type
                       (:documentation "A special exception for testing exceptions in the with statement"
                        :superclasses ("Exception")
                        :type "class")
                        (reparse-symbol indented_block_body) [14025 14140])
                    ("setUp" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14155 14159]))                          )
                        (reparse-symbol indented_block_body) [14145 14187])
                    ("_callDef" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14205 14209]))                          )
                        (reparse-symbol indented_block_body) [14192 14305])
                    ("_raiseDef" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14324 14328])
                            ("ex" variable nil (reparse-symbol function_parameters) [14330 14332]))                          )
                        (reparse-symbol indented_block_body) [14310 14434])
                    ("test" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14448 14452]))                          )
                        (reparse-symbol indented_block_body) [14439 14597])
                    ("testRaise" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14616 14620]))                          
                        :documentation "
        Test that raising an exception in a deferred action does
        not block all subsequent actions from running
        ")
                        (reparse-symbol indented_block_body) [14602 15131])
                    ("testFirstUndoException" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15163 15167]))                          
                        :documentation "
        Test that if multiple actions raise an exception only the first one is
        raised. When performing a batch rollback operations, probably the first
        exception is the root cause.
        ")
                        (reparse-symbol indented_block_body) [15136 15959])
                    ("testKeyError" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15981 15985]))                          
                        :documentation "
        KeyError is raised as a tuple and not expection. Re-raising it
        should be aware of this fact and handled carfully.
        ")
                        (reparse-symbol indented_block_body) [15964 16393])
                    ("testPreferOriginalException" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16430 16434]))                          
                        :documentation "
        Test that if an exception is raised both from the with
        statement and from the finally clause, the one from the with
        statement is the one that's actually raised.
        More info in: http://docs.python.org/
        2.6/library/stdtypes.html#contextmanager.__exit__
        ")
                        (reparse-symbol indented_block_body) [16398 17298]))                  
                :type "class")
                nil [13863 17298])
            ("TestExecCmdAffinity" type
               (:superclasses ("TestCaseBase")
                :members 
                  ( ("CPU_SET" variable nil (reparse-symbol indented_block_body) [17346 17370])
                    ("" code nil (reparse-symbol indented_block_body) [17400 17440])
                    ("testResetAffinityByDefault" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17476 17480]))                          )
                        (reparse-symbol indented_block_body) [17445 17713])
                    ("" code nil (reparse-symbol indented_block_body) [17742 17781])
                    ("testResetAffinityWhenConfigured" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17822 17826]))                          )
                        (reparse-symbol indented_block_body) [17786 18132])
                    ("" code nil (reparse-symbol indented_block_body) [18161 18200])
                    ("testKeepAffinity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18226 18230]))                          )
                        (reparse-symbol indented_block_body) [18205 18631]))                  
                :type "class")
                nil [17300 18631])
            ("TestPickleCopy" type
               (:superclasses ("TestCaseBase")
                :members 
                  ( ("test_picklecopy_exact" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18699 18703]))                          )
                        (reparse-symbol indented_block_body) [18673 18821])
                    ("test_picklecopy_faster" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18853 18857]))                          )
                        (reparse-symbol indented_block_body) [18826 19435]))                  
                :type "class")
                nil [18633 19435])
            ("UserError" type
               (:documentation " A special excpetion for testing errors during object life "
                :superclasses ("Exception")
                :type "class")
                nil [19437 19535])
            ("CloseError" type
               (:documentation " A special exception for testing errors during closing an object "
                :superclasses ("Exception")
                :type "class")
                nil [19537 19642])
            ("Closer" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [19689 19712]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19675 19679]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [19662 19714])
                    ("close" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19729 19733]))                          )
                        (reparse-symbol indented_block_body) [19719 19792]))                  
                :type "class")
                nil [19644 19792])
            ("TestClosing" type
               (:superclasses ("TestCaseBase")
                :members 
                  ( ("test_error_before_close" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19859 19863]))                          )
                        (reparse-symbol indented_block_body) [19831 20039])
                    ("test_error_while_closing" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20073 20077]))                          )
                        (reparse-symbol indented_block_body) [20044 20201]))                  
                :type "class")
                nil [19794 20201])
            ("TestRound" type
               (:superclasses ("TestCaseBase")
                :members 
                  ( ("" code nil (reparse-symbol indented_block_body) [20272 20438])
                    ("test_round" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20458 20462])
                            ("n" variable nil (reparse-symbol function_parameters) [20464 20465])
                            ("size" variable nil (reparse-symbol function_parameters) [20467 20471])
                            ("result" variable nil (reparse-symbol function_parameters) [20473 20479]))                          )
                        (reparse-symbol indented_block_body) [20443 20537]))                  
                :type "class")
                nil [20223 20537])
            ("TestStopwatch" type
               (:superclasses ("TestCaseBase")
                :members 
                  ( ("" code nil (reparse-symbol indented_block_body) [20612 20651])
                    ("test_default_level_log" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20683 20687])
                            ("level" variable nil (reparse-symbol function_parameters) [20689 20694]))                          )
                        (reparse-symbol indented_block_body) [20656 21112])
                    ("test_default_level_no_log" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21147 21151]))                          )
                        (reparse-symbol indented_block_body) [21117 21303])
                    ("test_custom_level_log" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21334 21338]))                          )
                        (reparse-symbol indented_block_body) [21308 21513]))                  
                :type "class")
                nil [20559 21513]))          
      :file "utils_test.py"
      :pointmax 21513
      :fsize 21526
      :lastmodtime '(23940 27965 117942 245000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [811 849])
            ("__future__" include nil nil [850 881])
            ("CONF_TO_DOMXML_X86_64" variable nil nil [883 3835])
            ("CONF_TO_DOMXML_PPC64" variable nil nil [3837 6149])
            ("CONF_TO_DOMXML_NO_RCCPXUANYUAN" variable nil nil [6213 8888])
            ("VM_STATUS_DUMP" variable nil nil [9060 15245]))          
      :file "vmTestsData.py"
      :pointmax 15246
      :fsize 15245
      :lastmodtime '(23940 27965 145942 889000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [822 860])
            ("__future__" include nil nil [861 892])
            ("errno" include nil nil [894 906])
            ("json" include nil nil [907 918])
            ("os" include nil nil [919 928])
            ("threading" include nil nil [929 945])
            ("functools" include nil nil [946 973])
            ("nose.plugins.skip" include nil nil [975 1013])
            ("nose.plugins" include nil nil [1014 1045])
            ("rccpxuanyuan" include nil nil [1047 1077])
            ("rccpxuanyuan.common.compat" include nil nil [1078 1127])
            ("six" include nil nil [1129 1139])
            ("SlowTestsPlugin" type
               (:documentation "
    Tests that might be too slow to run on every build are marked with the
    @slowtest plugin, and disable by default. Use this plugin to enable these
    tests.
    "
                :superclasses ("Plugin")
                :members 
                  ( ("name" variable nil (reparse-symbol indented_block_body) [1357 1375])
                    ("enabled" variable nil (reparse-symbol indented_block_body) [1380 1395])
                    ("add_options" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1417 1421])
                            ("parser" variable nil (reparse-symbol function_parameters) [1423 1429])
                            ("env" variable nil (reparse-symbol function_parameters) [1431 1434]))                          )
                        (reparse-symbol indented_block_body) [1401 1976])
                    ("configure" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1995 1999])
                            ("options" variable nil (reparse-symbol function_parameters) [2001 2008])
                            ("conf" variable nil (reparse-symbol function_parameters) [2010 2014]))                          )
                        (reparse-symbol indented_block_body) [1981 2144]))                  
                :type "class")
                nil [1142 2144])
            ("StressTestsPlugin" type
               (:documentation "
    Tests that stress the resources of the machine, are too slow to run on each
    build and may fail on overloaded machines or machines with unpreditable
    resources.

    These tests are mark with @stresstest decorator and are disabled by
    default. Use this plugin to enable these tests.
    "
                :superclasses ("Plugin")
                :members 
                  ( ("name" variable nil (reparse-symbol indented_block_body) [2495 2515])
                    ("enabled" variable nil (reparse-symbol indented_block_body) [2520 2535])
                    ("add_options" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2557 2561])
                            ("parser" variable nil (reparse-symbol function_parameters) [2563 2569])
                            ("env" variable nil (reparse-symbol function_parameters) [2571 2574]))                          )
                        (reparse-symbol indented_block_body) [2541 3145])
                    ("configure" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3164 3168])
                            ("options" variable nil (reparse-symbol function_parameters) [3170 3177])
                            ("conf" variable nil (reparse-symbol function_parameters) [3179 3183]))                          )
                        (reparse-symbol indented_block_body) [3150 3317]))                  
                :type "class")
                nil [2146 3317])
            ("ThreadLeakPlugin" type
               (:documentation "
    Check whether a test (or the code it triggers) leaks threads
    "
                :superclasses ("Plugin")
                :members 
                  ( ("name" variable nil (reparse-symbol indented_block_body) [3436 3462])
                    ("_threads" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3481 3485]))                          )
                        (reparse-symbol indented_block_body) [3468 3536])
                    ("startTest" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3555 3559])
                            ("test" variable nil (reparse-symbol function_parameters) [3561 3565]))                          )
                        (reparse-symbol indented_block_body) [3541 3614])
                    ("stopTest" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3632 3636])
                            ("test" variable nil (reparse-symbol function_parameters) [3638 3642]))                          )
                        (reparse-symbol indented_block_body) [3619 3813]))                  
                :type "class")
                nil [3319 3813])
            ("ProcessLeakPlugin" type
               (:documentation "
    Fail tests that leaked child processes.

    Tests starting child process must wait for the child process before
    returning from the test. Not waiting may casue the test or the next test to
    fail when the child process exit and the test framework received unexpected
    SIGCHLD.

    Running the tests with --with-process-leak-check will fail any test that
    leaked a child process.
    "
                :superclasses ("Plugin")
                :members 
                  ( ("PGREP_CMD" variable nil (reparse-symbol indented_block_body) [4264 4311])
                    ("name" variable nil (reparse-symbol indented_block_body) [4316 4343])
                    ("startTest" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4363 4367])
                            ("test" variable nil (reparse-symbol function_parameters) [4369 4373]))                          )
                        (reparse-symbol indented_block_body) [4349 4432])
                    ("stopTest" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4450 4454])
                            ("test" variable nil (reparse-symbol function_parameters) [4456 4460]))                          )
                        (reparse-symbol indented_block_body) [4437 4810])
                    ("_child_processes" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4836 4840]))                          )
                        (reparse-symbol indented_block_body) [4815 5360]))                  
                :type "class")
                nil [3815 5360])
            ("FileLeakPlugin" type
               (:documentation "
    Check whether a test (or the code it triggers) open files and do not close
    them.
    "
                :superclasses ("Plugin")
                :members 
                  ( ("name" variable nil (reparse-symbol indented_block_body) [5501 5525])
                    ("FD_DIR" code nil (reparse-symbol indented_block_body) [5530 5566])
                    ("_fd_desc" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5585 5589])
                            ("fd" variable nil (reparse-symbol function_parameters) [5591 5593]))                          )
                        (reparse-symbol indented_block_body) [5572 5794])
                    ("_open_files" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5815 5819]))                          )
                        (reparse-symbol indented_block_body) [5799 5900])
                    ("startTest" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5919 5923])
                            ("test" variable nil (reparse-symbol function_parameters) [5925 5929]))                          )
                        (reparse-symbol indented_block_body) [5905 5979])
                    ("stopTest" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5997 6001])
                            ("test" variable nil (reparse-symbol function_parameters) [6003 6007]))                          )
                        (reparse-symbol indented_block_body) [5984 6170]))                  
                :type "class")
                nil [5362 6170])
            ("ValidateRunningAsRoot" function (:arguments 
              ( ("f" variable nil (reparse-symbol function_parameters) [6198 6199]))              ) nil [6172 6395])
            ("ValidateNotRunningAsRoot" function (:arguments 
              ( ("f" variable nil (reparse-symbol function_parameters) [6426 6427]))              ) nil [6397 6624])
            ("slowtest" function (:arguments 
              ( ("f" variable nil (reparse-symbol function_parameters) [6639 6640]))              ) nil [6626 6840])
            ("xfail" function
               (:documentation "
    Mark a test as expected failure.

    This decorator should be used to mark good tests as expected failure. In
    this case the test is good, but the code is broken, and cannot be fix yet.

    The test will skip with the reason message if the test fail, and fail if
    the test succeeds, since this means the code is working and we can remove
    this decorator.

    This is a poor man implementation of pytest.mark.xfail, see
    http://doc.pytest.org/en/latest/skipping.html

    Usage::

        @xfail(\"why this test canonot pass now...\")
        def test_broken_code(self):
            ...
    "
                :arguments 
                  ( ("reason" variable nil (reparse-symbol function_parameters) [6852 6858]))                  )
                nil [6842 7829])
            ("skipif" function
               (:documentation "
    Skip a test if cond is True.

    Usage::

        @skipif(six.PY3, \"Needs porting to python 3\")
        def test_rusty_pyton_2_code(self):
            ...
    "
                :arguments 
                  ( ("cond" variable nil (reparse-symbol function_parameters) [7842 7846])
                    ("reason" variable nil (reparse-symbol function_parameters) [7848 7854]))                  )
                nil [7831 8281])
            ("brokentest" function
               (:documentation "
    Mark a test as broken.

    Usage::

        @brokentest(\"why it is broken...\")
        def test_will_skip_on_failure(self):
            ...
    "
                :arguments 
                  ( ("reason" variable nil (reparse-symbol function_parameters) [8298 8304]))                  )
                nil [8283 8736])
            ("broken_on_ci" function
               (:documentation "
    Mark a test as broken on the CI.

    By defualt, this will skip failing tests run in ovirt CI, when OVIRT_CI
    environment variable is defined.

    To use on travis-ci, use name=\"TRAVIS_CI\".  If a test is broken on both
    ovirt CI and travis-ci, mark it separately for each.

    Usage::

        @broken_on_ci(\"why it is broken...\")
        def test_will_skip_on_failure(self):
            ...

    To skip only if certain expection was raised, you can specify the
    expection::

        @broken_on_ci(\"why it is broken...\", exception=OSError)
        def test_will_skip_on_os_error(self):
            ...
    "
                :arguments 
                  ( ("reason" variable nil (reparse-symbol function_parameters) [8755 8761])
                    ("exception" variable nil (reparse-symbol function_parameters) [8763 8772])
                    ("name" variable nil (reparse-symbol function_parameters) [8784 8788]))                  )
                nil [8738 9808])
            ("stresstest" function (:arguments 
              ( ("f" variable nil (reparse-symbol function_parameters) [9825 9826]))              ) nil [9810 10030])
            ("checkSudo" function (:arguments 
              ( ("cmd" variable nil (reparse-symbol function_parameters) [10046 10049]))              ) nil [10032 10546])
            ("_check_decorator_misuse" function
               (:documentation "
    Validate decorator correct usage by checking the decorator first
    argument type.
    The decorators checked by this function are expected to be used as a
    function where their first argument type is a string.
    Decorators that are not used as a function call, have their single argument
    as the method they wrap, which is not of type string.
    "
                :arguments 
                  ( ("arg" variable nil (reparse-symbol function_parameters) [10576 10579]))                  )
                nil [10548 11138]))          
      :file "testValidation.py"
      :pointmax 11138
      :fsize 11137
      :lastmodtime '(23940 27965 134942 636000)
      :unmatched-syntax '((INDENT_BLOCK 10272 . 10409) (NEWLINE 10271 . 10272) (COLON 10270 . 10271) (TRY 10056 . 10059) (AS 10266 . 10268) (INDENT_BLOCK 5700 . 5794) (NEWLINE 5699 . 5700) (COLON 5698 . 5699) (TRY 5604 . 5607) (AS 5694 . 5696))))
  :file "!usr!lib!python3.6!site-packages!project!rccpxuanyuan!rccpxuanyuantests!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
