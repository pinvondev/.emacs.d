;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("mock" include nil nil [1 12])
            ("mock" include nil nil [13 46])
            ("pytest" include nil nil [47 60])
            ("rccpxuanyuan.xuanyuan_resource" include nil nil [62 113])
            ("rccpxuanyuan.xuanyuan_resource.resource" include nil nil [114 182])
            ("TestResourcePlanning" type
               (:members 
                  ( ("test_get_info" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [277 281]))                          
                        :documentation "
        测试主机系统预留的cpu和内存
        ")
                        (reparse-symbol indented_block_body) [259 1275])
                    ("" code nil (reparse-symbol indented_block_body) [1291 1337])
                    ("" code nil (reparse-symbol indented_block_body) [1353 1417])
                    ("test_get_rcos_resource" function
                       (:documentation "
        获取rcos系统的预留cpu和内存
        :param mock_fcm:
        :return:
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [1449 1452])
                            ("mock_fcm" variable nil (reparse-symbol function_parameters) [1454 1462])
                            ("mock_os" variable nil (reparse-symbol function_parameters) [1464 1471]))                          )
                        (reparse-symbol indented_block_body) [1422 1781])
                    ("" code nil (reparse-symbol indented_block_body) [1797 1843])
                    ("" code nil (reparse-symbol indented_block_body) [1859 1923])
                    ("test_get_rcos_resource_1" function
                       (:documentation "
        获取rcos系统的预留cpu和内存
        :param mock_fcm:
        :return:
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [1957 1960])
                            ("mock_fcm" variable nil (reparse-symbol function_parameters) [1962 1970])
                            ("mock_os" variable nil (reparse-symbol function_parameters) [1972 1979]))                          )
                        (reparse-symbol indented_block_body) [1928 2286])
                    ("" code nil (reparse-symbol indented_block_body) [2302 2348])
                    ("" code nil (reparse-symbol indented_block_body) [2364 2428])
                    ("test_get_rcos_resource_2" function
                       (:documentation "
        获取rcos系统的预留cpu和内存
        :param mock_fcm:
        :return:
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [2462 2465])
                            ("mock_fcm" variable nil (reparse-symbol function_parameters) [2467 2475])
                            ("mock_os" variable nil (reparse-symbol function_parameters) [2477 2484]))                          )
                        (reparse-symbol indented_block_body) [2433 2810])
                    ("" code nil (reparse-symbol indented_block_body) [2826 2881])
                    ("" code nil (reparse-symbol indented_block_body) [2897 2955])
                    ("test_get_pos_resource_0" function
                       (:documentation "
        该主机为存储节点，获取POS服务的预留cpu和内存
        :return:
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [2988 2991])
                            ("mock_get_pos_resource_usage" variable nil (reparse-symbol function_parameters) [2993 3020])
                            ("mock_check_pos_node_role" variable nil (reparse-symbol function_parameters) [3022 3046]))                          )
                        (reparse-symbol indented_block_body) [2960 3368])
                    ("" code nil (reparse-symbol indented_block_body) [3384 3439])
                    ("" code nil (reparse-symbol indented_block_body) [3455 3513])
                    ("test_get_pos_resource_1" function
                       (:documentation "
        该主机为非存储节点
        :return:
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [3546 3549])
                            ("mock_get_pos_resource_usage" variable nil (reparse-symbol function_parameters) [3551 3578])
                            ("mock_check_pos_node_role" variable nil (reparse-symbol function_parameters) [3580 3604]))                          )
                        (reparse-symbol indented_block_body) [3518 3909])
                    ("" code nil (reparse-symbol indented_block_body) [3925 3980])
                    ("" code nil (reparse-symbol indented_block_body) [3996 4054])
                    ("test_get_pos_resource_2" function
                       (:documentation "
        该主机为存储节点，获取pos预留资源异常
        :return:
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [4087 4090])
                            ("mock_get_pos_resource_usage" variable nil (reparse-symbol function_parameters) [4092 4119])
                            ("mock_check_pos_node_role" variable nil (reparse-symbol function_parameters) [4121 4145]))                          )
                        (reparse-symbol indented_block_body) [4059 4462])
                    ("" code nil (reparse-symbol indented_block_body) [4478 4558])
                    ("" code nil (reparse-symbol indented_block_body) [4574 4654])
                    ("test_get_ha_resource_0" function (:arguments 
                      ( ("cls" variable nil (reparse-symbol function_parameters) [4686 4689])
                        ("mock_check_ha_node_role" variable nil (reparse-symbol function_parameters) [4691 4714])
                        ("mock_search" variable nil (reparse-symbol function_parameters) [4716 4727]))                      ) (reparse-symbol indented_block_body) [4659 5001])
                    ("" code nil (reparse-symbol indented_block_body) [5017 5097])
                    ("test_get_ha_resource_1" function
                       (:documentation "
        新加入的高可用节点
        :param mock_check_ha_node_role:
        :return:
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [5129 5132])
                            ("mock_check_ha_node_role" variable nil (reparse-symbol function_parameters) [5134 5157]))                          )
                        (reparse-symbol indented_block_body) [5102 5458])
                    ("" code nil (reparse-symbol indented_block_body) [7725 7771])
                    ("test_check_ha_node_role" function
                       (:documentation "
        判断该主机是否为高可用节点，出现异常
        :param mocker_docker:
        :return:
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [7804 7807])
                            ("mock_os" variable nil (reparse-symbol function_parameters) [7809 7816]))                          )
                        (reparse-symbol indented_block_body) [7776 8070])
                    ("" code nil (reparse-symbol indented_block_body) [8086 8134])
                    ("" code nil (reparse-symbol indented_block_body) [8150 8208])
                    ("" code nil (reparse-symbol indented_block_body) [8224 8288])
                    ("" code nil (reparse-symbol indented_block_body) [8304 8354])
                    ("" code nil (reparse-symbol indented_block_body) [8370 8440])
                    ("test_search_ha_resource_0" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8475 8479])
                            ("mock_makeurl" variable nil (reparse-symbol function_parameters) [8515 8527])
                            ("mock_client" variable nil (reparse-symbol function_parameters) [8563 8574])
                            ("mock_fileconfiguremanager" variable nil (reparse-symbol function_parameters) [8610 8635])
                            ("fake_path_exists" variable nil (reparse-symbol function_parameters) [8671 8687])
                            ("mock_host" variable nil (reparse-symbol function_parameters) [8723 8732]))                          
                        :documentation "
        查询ha预留资源正常
        ")
                        (reparse-symbol indented_block_body) [8445 9290])
                    ("" code nil (reparse-symbol indented_block_body) [9306 9364])
                    ("" code nil (reparse-symbol indented_block_body) [9380 9444])
                    ("" code nil (reparse-symbol indented_block_body) [9460 9510])
                    ("" code nil (reparse-symbol indented_block_body) [9526 9596])
                    ("test_search_ha_resource_1" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9631 9635])
                            ("mock_makeurl" variable nil (reparse-symbol function_parameters) [9671 9683])
                            ("mock_client" variable nil (reparse-symbol function_parameters) [9719 9730])
                            ("mock_fileconfiguremanager" variable nil (reparse-symbol function_parameters) [9766 9791])
                            ("fake_path_exists" variable nil (reparse-symbol function_parameters) [9827 9843]))                          
                        :documentation "
        查询ha预留资源异常
        ")
                        (reparse-symbol indented_block_body) [9601 10308])
                    ("" code nil (reparse-symbol indented_block_body) [10319 10372])
                    ("" code nil (reparse-symbol indented_block_body) [10383 10431])
                    ("" code nil (reparse-symbol indented_block_body) [10442 10511])
                    ("test_set_ha_resource" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10541 10545])
                            ("fake_info" variable nil (reparse-symbol function_parameters) [10547 10556])
                            ("fake_host" variable nil (reparse-symbol function_parameters) [10558 10567])
                            ("fake_exception" variable nil (reparse-symbol function_parameters) [10569 10583]))                          )
                        (reparse-symbol indented_block_body) [10516 10810])
                    ("" code nil (reparse-symbol indented_block_body) [10821 10874])
                    ("" code nil (reparse-symbol indented_block_body) [10885 10933])
                    ("" code nil (reparse-symbol indented_block_body) [10944 11013])
                    ("test_set_ha_resource_failed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11050 11054])
                            ("fake_info" variable nil (reparse-symbol function_parameters) [11056 11065])
                            ("fake_host" variable nil (reparse-symbol function_parameters) [11067 11076])
                            ("fake_exception" variable nil (reparse-symbol function_parameters) [11078 11092]))                          )
                        (reparse-symbol indented_block_body) [11018 11469])
                    ("" code nil (reparse-symbol indented_block_body) [11480 11528])
                    ("test_total_resource" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11557 11561])
                            ("fake_host" variable nil (reparse-symbol function_parameters) [11563 11572]))                          )
                        (reparse-symbol indented_block_body) [11533 11782])
                    ("" code nil (reparse-symbol indented_block_body) [11793 11876])
                    ("test_get_vm_resource" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11906 11910])
                            ("fake_res" variable nil (reparse-symbol function_parameters) [11912 11920]))                          )
                        (reparse-symbol indented_block_body) [11881 12016])
                    ("test_get_reserved_resource" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12052 12056]))                          )
                        (reparse-symbol indented_block_body) [12021 12205]))                  
                :type "class")
                nil [226 12205]))          
      :file "resource_test.py"
      :pointmax 13365
      :fsize 13770
      :lastmodtime '(23974 46610 866769 716000)
      :unmatched-syntax nil))
  :file "!usr!lib!python3.6!site-packages!project!rccpxuanyuan!rccpxuanyuantests!xuanyuan_resource!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
