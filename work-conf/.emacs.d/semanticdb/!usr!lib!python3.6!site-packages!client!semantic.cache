;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"
This program is a simple client.
Available commands and parameters are derived from the schema: api.yml
\"\"\"" code nil nil [52 163])
            ("sys" include nil nil [165 175])
            ("argparse" include nil nil [176 191])
            ("os" include nil nil [192 201])
            ("json" include nil nil [202 213])
            ("yaml" include nil nil [214 225])
            ("six" include nil nil [226 236])
            ("emei.framework.client" include nil nil [238 280])
            ("SchemaNotFound" type
               (:documentation " Raise when yml file not found"
                :superclasses ("Exception")
                :type "class")
                nil [283 357])
            ("UsageError" type
               (:documentation " Raised when usage is wrong "
                :superclasses ("Exception")
                :type "class")
                nil [359 427])
            ("_parse_args" function (:arguments 
              ( ("namespaces" variable nil (reparse-symbol function_parameters) [445 455])
                ("namespace" variable nil (reparse-symbol function_parameters) [457 466]))              ) nil [429 1587])
            ("main" function (:documentation "
    Extract parameters and call rpc interface.
    ") nil [1589 4852])
            ("_parse_file" function
               (:documentation "
    Parse parameters from json file.
    "
                :arguments 
                  ( ("filename" variable nil (reparse-symbol function_parameters) [5073 5081]))                  )
                nil [5057 5403])
            ("_get_schema" function (:documentation "
    Load information about api from api.yml.
    ") nil [6411 6696])
            ("_add_command_arguments" function
               (:documentation "
    Show parameters in terminal.
    "
                :arguments 
                  ( ("namespaces" variable nil (reparse-symbol function_parameters) [6725 6735])
                    ("subparsers" variable nil (reparse-symbol function_parameters) [6737 6747]))                  )
                nil [6698 8273])
            ("_get_type" function (:arguments 
              ( ("namespaces" variable nil (reparse-symbol function_parameters) [8289 8299])
                ("namespace" variable nil (reparse-symbol function_parameters) [8301 8310])
                ("argument" variable nil (reparse-symbol function_parameters) [8312 8320]))              ) nil [8275 8649])
            ("_create_namespaces" function
               (:documentation "
    Create namespaces from config file.
    "
                :arguments 
                  ( ("data" variable nil (reparse-symbol function_parameters) [8674 8678]))                  )
                nil [8651 9504])
            ("_find_schema" function
               (:documentation "
    Return the path of config file.
    "
                :arguments 
                  ( ("schema_name" variable nil (reparse-symbol function_parameters) [9523 9534]))                  )
                nil [9506 9845])
            ("if" code nil nil [9847 9885]))          
      :file "cli.py"
      :pointmax 9885
      :fsize 10030
      :lastmodtime '(23916 36203 942724 678000)
      :unmatched-syntax '((INDENT_BLOCK 5366 . 5403) (NEWLINE 5365 . 5366) (COLON 5364 . 5365) (AS 5356 . 5358) (INDENT_BLOCK 5243 . 5280) (NEWLINE 5242 . 5243) (COLON 5241 . 5242) (TRY 5141 . 5144) (AS 5233 . 5235))))
  :file "!usr!lib!python3.6!site-packages!client!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
