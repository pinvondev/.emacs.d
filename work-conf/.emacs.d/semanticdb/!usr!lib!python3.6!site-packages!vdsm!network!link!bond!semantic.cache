;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode makefile-automake-mode
      :tags 
        '( ("$(top_srcdir)/build-aux/Makefile.subs" include nil nil [813 859])
            ("vdsmnetworklinkbonddir" variable (:default-value ("$(vdsmpylibdir)/network/link/bond")) nil [860 919])
            ("dist_vdsmnetworklinkbond_PYTHON" variable (:default-value ("$(srcdir)/*.py")) nil [919 968]))          
      :file "Makefile.am"
      :pointmax 968
      :fsize 967
      :lastmodtime '(23968 6112 197983 228000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [819 857])
            ("__future__" include nil nil [858 889])
            ("json" include nil nil [924 935])
            ("os" include nil nil [936 945])
            ("six" include nil nil [947 957])
            ("vdsm.common" include nil nil [959 992])
            ("vdsm.common.cache" include nil nil [993 1031])
            ("BONDING_DEFAULTS" code nil nil [1033 1098])
            ("BONDING_OPT" variable nil nil [1099 1143])
            ("ARP_IP_TARGET" variable nil nil [1144 1175])
            ("EXCLUDED_BONDING_ENTRIES" variable nil nil [1178 1465])
            ("BONDING_MODES_NAME_TO_NUMBER" variable nil nil [1467 1664])
            ("BONDING_MODES_NUMBER_TO_NAME" variable nil nil [1666 1771])
            ("set_options" function (:arguments 
              ( ("bond" variable nil (reparse-symbol function_parameters) [1790 1794])
                ("requested_options" variable nil (reparse-symbol function_parameters) [1796 1813]))              ) nil [1774 2236])
            ("_set_mode" function (:arguments 
              ( ("bond" variable nil (reparse-symbol function_parameters) [2252 2256])
                ("mode" variable nil (reparse-symbol function_parameters) [2258 2262]))              ) nil [2238 2303])
            ("_set_options" function (:arguments 
              ( ("bond" variable nil (reparse-symbol function_parameters) [2322 2326])
                ("requested_options" variable nil (reparse-symbol function_parameters) [2328 2345])
                ("current_options" variable nil (reparse-symbol function_parameters) [2347 2362]))              ) nil [2305 2603])
            ("_set_untouched_options_to_defaults" function (:arguments 
              ( ("bond" variable nil (reparse-symbol function_parameters) [2649 2653])
                ("mode" variable nil (reparse-symbol function_parameters) [2655 2659])
                ("requested_options" variable nil (reparse-symbol function_parameters) [2661 2678])
                ("current_options" variable nil (reparse-symbol function_parameters) [2680 2695]))              ) nil [2605 3041])
            ("_set_option" function (:arguments 
              ( ("bond" variable nil (reparse-symbol function_parameters) [3059 3063])
                ("key" variable nil (reparse-symbol function_parameters) [3065 3068])
                ("new_value" variable nil (reparse-symbol function_parameters) [3070 3079])
                ("current_value" variable nil (reparse-symbol function_parameters) [3081 3094]))              ) nil [3043 3239])
            ("_write_option" function (:arguments 
              ( ("bond" variable nil (reparse-symbol function_parameters) [3259 3263])
                ("key" variable nil (reparse-symbol function_parameters) [3265 3268])
                ("value" variable nil (reparse-symbol function_parameters) [3270 3275]))              ) nil [3241 3353])
            ("_set_arp_ip_target" function (:arguments 
              ( ("bond" variable nil (reparse-symbol function_parameters) [3378 3382])
                ("new_value" variable nil (reparse-symbol function_parameters) [3384 3393])
                ("current_value" variable nil (reparse-symbol function_parameters) [3395 3408]))              ) nil [3355 3919])
            ("get_options" function
               (:documentation "
    Filter bond options from given bond properties.

    If filter_out_defaults is set, exclude defaults from the report.
    Note: mode should always be reported, even if it's the default one.

    If filter_options is provided, use it as the filter.

    Options with no value are filtered out.

    Bond options are a subset of bond properties and refer to properties that
    can be set and affect bond operation.
    "
                :arguments 
                  ( ("bond_properties" variable nil (reparse-symbol function_parameters) [3937 3952])
                    ("filter_out_defaults" variable nil (reparse-symbol function_parameters) [3954 3973])
                    ("filter_opts" variable nil (reparse-symbol function_parameters) [3980 3991]))                  )
                nil [3921 4720])
            ("_filter_out_default_opts" function (:arguments 
              ( ("bond_properties" variable nil (reparse-symbol function_parameters) [4751 4766])
                ("opts_keys" variable nil (reparse-symbol function_parameters) [4768 4777]))              ) nil [4722 5113])
            ("properties" function
               (:documentation "
    Returns a dictionary of bond property name as key and a list as value.
    E.g. {'mode': ['balance-rr', '0'], 'xmit_hash_policy': ['layer2', '0']}

    If filter_properties is provided (as an iterable object), the returned
    properties will include only those that are explicitly specified in it,
    otherwise no restriction is applied.

    If filter_out_properties is provided, the property names it includes are
    excluded from the properties returned, otherwise no restriction is applied.
    "
                :arguments 
                  ( ("bond_name" variable nil (reparse-symbol function_parameters) [5130 5139])
                    ("filter_properties" variable nil (reparse-symbol function_parameters) [5141 5158])
                    ("filter_out_properties" variable nil (reparse-symbol function_parameters) [5165 5186]))                  )
                nil [5115 6166])
            ("bond_opts_read_elements" function (:arguments 
              ( ("file_path" variable nil (reparse-symbol function_parameters) [6196 6205]))              ) nil [6168 6304])
            ("normalize_arp_ip_target" function
               (:documentation "
    Sysfs reports multiple ip addresses in arp_ip_target separated by space,
    which are represented by multiple elements in opts[ARP_IP_TARGET].
    The bonding driver accepts multiple ip addresses in the arp_ip_target
    option separated by a comma.
    To enable an unified handling for all options, the value of arp_ip_target
    is converted in the expression, which would accepted as value for setting
    this option. This is the separation of multiple ip addresses by comma.
    "
                :arguments 
                  ( ("opts" variable nil (reparse-symbol function_parameters) [6334 6338]))                  )
                nil [6306 6968])
            ("getDefaultBondingOptions" function
               (:documentation "
    Return default options for the given mode. If it is None, return options
    for the default mode (usually '0').
    "
                :arguments 
                  ( ("mode" variable nil (reparse-symbol function_parameters) [7009 7013]))                  
                :decorators 
                  ( ("memoized" function (:type "decorator") nil nil))                  )
                nil [6970 7289])
            ("getAllDefaultBondingOptions" function
               (:documentation "
    Return default options per mode, in a dictionary of dictionaries. All keys
    are numeric modes stored as strings for coherence with 'mode' option value.
    "
                :decorators 
                  ( ("memoized" function (:type "decorator") nil nil))                  )
                nil [7291 7599])
            ("numerize_bond_mode" function (:arguments 
              ( ("mode" variable nil (reparse-symbol function_parameters) [7624 7628]))              ) nil [7601 7759]))          
      :file "sysfs_options.py"
      :pointmax 7759
      :fsize 7758
      :lastmodtime '(23968 14119 308945 153000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [814 852])
            ("__future__" include nil nil [853 884])
            ("contextlib" include nil nil [886 923])
            ("errno" include nil nil [924 936])
            ("functools" include nil nil [937 966])
            ("glob" include nil nil [967 999])
            ("io" include nil nil [1000 1009])
            ("json" include nil nil [1010 1021])
            ("os" include nil nil [1022 1031])
            ("six" include nil nil [1033 1043])
            ("vdsm.common.cache" include nil nil [1045 1083])
            ("vdsm.common" include nil nil [1084 1117])
            ("vdsm.network.link.bond" include nil nil [1119 1167])
            ("vdsm.network.link.bond.sysfs_driver" include nil nil [1168 1231])
            ("vdsm.network.link.iface" include nil nil [1232 1285])
            ("BONDING_NAME2NUMERIC_PATH" code nil nil [1287 1365])
            ("_MAX_BONDING_MODES" variable nil nil [1367 1389])
            ("dump_bonding_options" function nil nil [1392 1728])
            ("_get_default_bonding_options" function (:documentation "
    Return default options per mode, in a dictionary of dictionaries. All keys
    are strings.
    ") nil [1730 2625])
            ("_get_bonding_options_name2numeric" function (:documentation "
    Return a map of options values per mode, in a dictionary of dictionaries.
    All keys are strings.
    ") nil [2627 3235])
            ("_bond_device" function
               (:decorators 
                  ( ("contextmanager" function (:type "decorator") nil nil))                  
                :arguments 
                  ( ("bond_name" variable nil (reparse-symbol function_parameters) [3270 3279])
                    ("mode" variable nil (reparse-symbol function_parameters) [3281 3285]))                  )
                nil [3237 3567])
            ("_change_mode" function (:arguments 
              ( ("bond_name" variable nil (reparse-symbol function_parameters) [3586 3595])
                ("mode" variable nil (reparse-symbol function_parameters) [3597 3601]))              ) nil [3569 3704])
            ("_bond_opts_name2numeric_filtered" function
               (:documentation "
    Return a dictionary in the same format as _bond_opts_name2numeric().
    Exclude entries that are not bonding options,
    e.g. 'ad_num_ports' or 'slaves'.
    "
                :arguments 
                  ( ("bond" variable nil (reparse-symbol function_parameters) [3743 3747]))                  )
                nil [3706 4132])
            ("get_bonding_option_numeric_val" function (:arguments 
              ( ("mode_num" variable nil (reparse-symbol function_parameters) [4169 4177])
                ("option_name" variable nil (reparse-symbol function_parameters) [4179 4190])
                ("val_name" variable nil (reparse-symbol function_parameters) [4192 4200]))              ) nil [4134 4367])
            ("_get_bonding_option_name2numeric" function
               (:documentation "
    Return options per mode, in a dictionary of dictionaries.
    For each mode, there are options with name values as keys
    and their numeric equivalent.
    "
                :decorators 
                  ( ("memoized" function (:type "decorator") nil nil))                  )
                nil [4369 4676])
            ("_bond_opts_name2numeric" function
               (:documentation "
    Returns a dictionary of bond option name and a values iterable. E.g.,
    {'mode': ('balance-rr', '0'), 'xmit_hash_policy': ('layer2', '0')}
    "
                :arguments 
                  ( ("bond" variable nil (reparse-symbol function_parameters) [4706 4710]))                  )
                nil [4678 5289])
            ("_bond_opts_name2numeric_scan" function (:arguments 
              ( ("opt_path" variable nil (reparse-symbol function_parameters) [5324 5332]))              ) nil [5291 5670])
            ("_bond_opts_name2numeric_getval" function (:arguments 
              ( ("opt_path" variable nil (reparse-symbol function_parameters) [5707 5715])
                ("opt_write_file" variable nil (reparse-symbol function_parameters) [5717 5731])
                ("numeric_val" variable nil (reparse-symbol function_parameters) [5733 5744]))              ) nil [5672 6108]))          
      :file "sysfs_options_mapper.py"
      :pointmax 6108
      :fsize 6107
      :lastmodtime '(23968 14137 701359 669000)
      :unmatched-syntax nil))
  :file "!usr!lib!python3.6!site-packages!vdsm!network!link!bond!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
