;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode makefile-automake-mode
      :tags 
        '( ("$(top_srcdir)/build-aux/Makefile.subs" include nil nil [820 866])
            ("SUBDIRS" variable (:default-value ("api" "common" "tool" "profiling" "rpc" "network" "virt" "storage" "hook" "host" "metrics" "gluster" "supervdsm_api")) nil [867 970])
            ("dist_vdsmpylib_PYTHON" variable (:default-value ("__init__.py" "alignmentScan.py" "API.py" "client.py" "clientIF.py" "constants.py" "config.py" "cpuinfo.py" "dmidecodeUtil.py" "executor.py" "health.py" "hugepages.py" "jobs.py" "jsonrpcvdscli.py" "kvm2ovirt.py" "logUtils.py" "machinetype.py" "moduleloader.py" "momIF.py" "mkimage.py" "numa.py" "osinfo.py" "ppc64HardwareInfo.py" "protocoldetector.py" "schedule.py" "sslutils.py" "supervdsm_server.py" "taskset.py" "throttledlog.py" "utils.py" "v2v.py" "vdsmd.py" "virtsparsify.py" "virtsysprep.py" "$(NULL)")) nil [971 1539])
            ("nodist_vdsmpylib_PYTHON" variable (:default-value ("$(NULL)")) nil [1540 1577])
            ("nodist_noinst_DATA" variable (:default-value ("vdsm.conf.sample" "$(NULL)")) nil [1578 1629])
            ("CLEANFILES" variable (:default-value ("$(nodist_vdsmpylib_PYTHON)" "$(nodist_noinst_DATA)" "$(NULL)")) nil [1630 1709])
            ("EXTRA_DIST" variable (:default-value ("vdsm.conf.sample" "$(NULL)")) nil [1711 1755])
            ("vdsm.conf.sample" function (:arguments ("Makefile" "$(srcdir)/common/config.py")) nil [1756 1876])
            ("install-data-local" function (:arguments ("install-data-sample-vdsm-conf")) nil [1877 1970])
            ("uninstall-local" function (:arguments ("uninstall-data-sample-vdsm-conf")) nil [1971 2023])
            ("install-data-sample-vdsm-conf" function nil nil [2024 2165])
            ("uninstall-data-sample-vdsm-conf" function nil nil [2166 2241]))          
      :file "Makefile.am"
      :pointmax 2308
      :fsize 2307
      :lastmodtime '(23968 6112 180982 924000)
      :unmatched-syntax '((semantic-list 2287 . 2307) (punctuation 2286 . 2287) (semantic-list 2257 . 2282) (punctuation 2256 . 2257) (punctuation 2251 . 2252) (symbol 2242 . 2251) (bol 2242 . 2242)))
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [899 937])
            ("errno" include nil nil [939 951])
            ("io" include nil nil [952 961])
            ("logging" include nil nil [962 976])
            ("six" include nil nil [978 988])
            ("vdsm.network.api" include nil nil [990 1039])
            ("vdsm.network.errors" include nil nil [1040 1090])
            ("vdsm" include nil nil [1092 1114])
            ("vdsm" include nil nil [1115 1141])
            ("vdsm" include nil nil [1142 1171])
            ("vdsm" include nil nil [1172 1193])
            ("vdsm" include nil nil [1194 1214])
            ("vdsm.clientIF" include nil nil [1215 1249])
            ("vdsm.common" include nil nil [1250 1277])
            ("vdsm.common" include nil nil [1278 1310])
            ("vdsm.common" include nil nil [1311 1344])
            ("vdsm.common" include nil nil [1345 1374])
            ("vdsm.common" include nil nil [1375 1406])
            ("vdsm.common" include nil nil [1407 1439])
            ("vdsm.common" include nil nil [1440 1472])
            ("vdsm.common" include nil nil [1473 1506])
            ("vdsm.common" include nil nil [1507 1539])
            ("vdsm.common" include nil nil [1540 1568])
            ("vdsm.host" include nil nil [1569 1605])
            ("vdsm.host" include nil nil [1606 1632])
            ("vdsm.storage.sd" include nil nil [1694 1716])
            ("vdsm.storage" include nil nil [1717 1753])
            ("vdsm.storage" include nil nil [1754 1792])
            ("vdsm.storage" include nil nil [1793 1833])
            ("vdsm.virt" include nil nil [1834 1865])
            ("vdsm.virt" include nil nil [1866 1894])
            ("vdsm.common.compat" include nil nil [1895 1932])
            ("vdsm.common.define" include nil nil [1933 1981])
            ("vdsm.config" include nil nil [1982 2012])
            ("vdsm.virt" include nil nil [2013 2043])
            ("vdsm.virt.jobs" include nil nil [2044 2065])
            ("vdsm.virt.jobs" include nil nil [2066 2097])
            ("vdsm.virt.vmdevices" include nil nil [2098 2138])
            ("vdsm.virt.vmdevices" include nil nil [2139 2178])
            ("haClient" variable nil nil [2181 2196])
            ("try" code nil nil [2246 2340])
            ("try" code nil nil [2341 2421])
            ("USER_SHUTDOWN_MESSAGE" variable nil nil [2489 2532])
            ("throttledlog" code nil nil [2535 2578])
            ("throttledlog" code nil nil [2579 2617])
            ("APIBase" type
               (:superclasses ("object")
                :members 
                  ( ("ctorArgs" variable nil (reparse-symbol indented_block_body) [2647 2660])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [2694 2728])
                            ("self" variable nil (reparse-symbol indented_block_body) [2737 2762])
                            ("self" variable nil (reparse-symbol indented_block_body) [2771 2795]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2679 2683]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [2666 2796]))                  
                :type "class")
                nil [2620 2796])
            ("Task" type
               (:superclasses ("APIBase")
                :members 
                  ( ("ctorArgs" variable nil (reparse-symbol indented_block_body) [2823 2844])
                    ("__init__" function
                       (:suite 
                          ( ("APIBase" code nil (reparse-symbol indented_block_body) [2884 2906])
                            ("self" variable nil (reparse-symbol indented_block_body) [2915 2932]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2863 2867])
                            ("UUID" variable nil (reparse-symbol function_parameters) [2869 2873]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [2850 2933])
                    ("clear" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2948 2952]))                          )
                        (reparse-symbol indented_block_body) [2938 3002])
                    ("getInfo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3019 3023]))                          )
                        (reparse-symbol indented_block_body) [3007 3075])
                    ("getStatus" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3094 3098]))                          )
                        (reparse-symbol indented_block_body) [3080 3152])
                    ("revert" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3168 3172]))                          )
                        (reparse-symbol indented_block_body) [3157 3223])
                    ("stop" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3237 3241]))                          )
                        (reparse-symbol indented_block_body) [3228 3290]))                  
                :type "class")
                nil [2798 3290])
            ("VM" type
               (:superclasses ("APIBase")
                :members 
                  ( ("BLANK_UUID" variable nil (reparse-symbol indented_block_body) [3380 3431])
                    ("LOG_ATTRIBUTES" variable nil (reparse-symbol indented_block_body) [3436 3470])
                    ("ctorArgs" variable nil (reparse-symbol indented_block_body) [3475 3494])
                    ("__init__" function
                       (:suite 
                          ( ("APIBase" code nil (reparse-symbol indented_block_body) [3534 3556])
                            ("self" variable nil (reparse-symbol indented_block_body) [3565 3582]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3513 3517])
                            ("UUID" variable nil (reparse-symbol function_parameters) [3519 3523]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [3500 3583])
                    ("vm" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3609 3613]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [3588 3782])
                    ("" code nil (reparse-symbol indented_block_body) [3798 3813])
                    ("changeCD" function
                       (:parent "dummy"
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3847 3851])
                            ("driveSpec" variable nil (reparse-symbol function_parameters) [3853 3862]))                          
                        :documentation "
        Change the CD in the specified VM.

        :param vmId: uuid of specific VM.
        :type vmId: UUID
        :param driveSpec: specification of the new CD image. Either an
                image path or a `storage`-centric quartet.
        ")
                        (reparse-symbol indented_block_body) [3818 4173])
                    ("" code nil (reparse-symbol indented_block_body) [4189 4204])
                    ("changeFloppy" function
                       (:parent "dummy"
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4242 4246])
                            ("driveSpec" variable nil (reparse-symbol function_parameters) [4248 4257]))                          
                        :documentation "
        Change the floppy disk in the specified VM.

        :param vmId: uuid of specific VM.
        :type vmId: UUID
        :param driveSpec: specification of the new CD image. Either an
                image path or a `storage`-centric quartet.
        ")
                        (reparse-symbol indented_block_body) [4209 4581])
                    ("" code nil (reparse-symbol indented_block_body) [4597 4612])
                    ("cont" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4642 4646]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [4617 4679])
                    ("" code nil (reparse-symbol indented_block_body) [4695 4710])
                    ("create" function
                       (:parent "dummy"
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4742 4746])
                            ("vmParams" variable nil (reparse-symbol function_parameters) [4748 4756]))                          
                        :documentation "
        Start up a virtual machine.

        Virtual machine creation with memory volumes parameters:
        - In 4.1 and lower the paramater hiberVolHandle is used and contains a
          string of comma separated UUIDs representing the domain ID, pool ID,
          memory dump image ID, memory dump volume ID, memory conf image ID,
          memory conf volume ID
        - In 4.2 two paramters are used:
          memoryDumpVolume and memoryConfVolume which contains a dict with
          the memory dump and the memory conf in PDIV format with the keys
          poolID, domainID, imageID, volumeID

        :param vmParams: required and optional VM parameters.
        :type vmParams: dict
        ")
                        (reparse-symbol indented_block_body) [4715 7999])
                    ("" code nil (reparse-symbol indented_block_body) [8015 8030])
                    ("desktopLock" function
                       (:parent "dummy"
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8067 8071]))                          
                        :documentation "
        Lock user session in guest operating system using guest agent.
        ")
                        (reparse-symbol indented_block_body) [8035 8348])
                    ("" code nil (reparse-symbol indented_block_body) [8364 8379])
                    ("desktopLogin" function
                       (:parent "dummy"
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8417 8421])
                            ("domain" variable nil (reparse-symbol function_parameters) [8423 8429])
                            ("username" variable nil (reparse-symbol function_parameters) [8431 8439])
                            ("password" variable nil (reparse-symbol function_parameters) [8441 8449]))                          
                        :documentation "
        Log into guest operating system using guest agent.
        ")
                        (reparse-symbol indented_block_body) [8384 8741])
                    ("" code nil (reparse-symbol indented_block_body) [8757 8772])
                    ("desktopLogoff" function
                       (:parent "dummy"
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8811 8815])
                            ("force" variable nil (reparse-symbol function_parameters) [8817 8822]))                          
                        :documentation "
        Log out of guest operating system using guest agent.
        ")
                        (reparse-symbol indented_block_body) [8777 9096])
                    ("" code nil (reparse-symbol indented_block_body) [9112 9127])
                    ("desktopSendHcCommand" function
                       (:parent "dummy"
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9173 9177])
                            ("message" variable nil (reparse-symbol function_parameters) [9179 9186]))                          
                        :documentation "
        Send a command to the guest agent (depricated).
        ")
                        (reparse-symbol indented_block_body) [9132 9462])
                    ("" code nil (reparse-symbol indented_block_body) [9478 9493])
                    ("destroy" function
                       (:parent "dummy"
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9526 9530])
                            ("gracefulAttempts" variable nil (reparse-symbol function_parameters) [9532 9548]))                          
                        :documentation "
        Destroy the specified VM.
        ")
                        (reparse-symbol indented_block_body) [9498 9949])
                    ("" code nil (reparse-symbol indented_block_body) [9965 9980])
                    ("getMigrationStatus" function
                       (:parent "dummy"
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10024 10028]))                          
                        :documentation "
        Report status of a currently outgoing migration.
        ")
                        (reparse-symbol indented_block_body) [9985 10375])
                    ("" code nil (reparse-symbol indented_block_body) [10391 10406])
                    ("getStats" function
                       (:parent "dummy"
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10440 10444]))                          
                        :documentation "
        Obtain statistics of the specified VM
        ")
                        (reparse-symbol indented_block_body) [10411 11002])
                    ("" code nil (reparse-symbol indented_block_body) [11018 11033])
                    ("hibernate" function
                       (:parent "dummy"
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11068 11072])
                            ("hibernationVolHandle" variable nil (reparse-symbol function_parameters) [11074 11094]))                          
                        :documentation "
        Hibernate a VM.

        :param hiberVolHandle: opaque string, indicating the location of
                               hibernation images.
        ")
                        (reparse-symbol indented_block_body) [11038 11564])
                    ("" code nil (reparse-symbol indented_block_body) [11580 11595])
                    ("updateDevice" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11633 11637])
                            ("params" variable nil (reparse-symbol function_parameters) [11639 11645]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [11600 11889])
                    ("" code nil (reparse-symbol indented_block_body) [11905 11920])
                    ("hotplugNic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11956 11960])
                            ("params" variable nil (reparse-symbol function_parameters) [11962 11968]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [11925 12062])
                    ("" code nil (reparse-symbol indented_block_body) [12078 12093])
                    ("hostdevHotplug" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12133 12137])
                            ("devices" variable nil (reparse-symbol function_parameters) [12139 12146]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [12098 12196])
                    ("" code nil (reparse-symbol indented_block_body) [12212 12227])
                    ("hostdevHotunplug" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12269 12273])
                            ("devices" variable nil (reparse-symbol function_parameters) [12275 12282]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [12232 12334])
                    ("" code nil (reparse-symbol indented_block_body) [12350 12365])
                    ("hotunplugNic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12403 12407])
                            ("params" variable nil (reparse-symbol function_parameters) [12409 12415]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [12370 12511])
                    ("" code nil (reparse-symbol indented_block_body) [12527 12542])
                    ("hotplugDisk" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12579 12583])
                            ("params" variable nil (reparse-symbol function_parameters) [12585 12591]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [12547 12686])
                    ("" code nil (reparse-symbol indented_block_body) [12702 12717])
                    ("hotunplugDisk" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12756 12760])
                            ("params" variable nil (reparse-symbol function_parameters) [12762 12768]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [12722 12865])
                    ("" code nil (reparse-symbol indented_block_body) [12881 12896])
                    ("hotplugLease" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12934 12938])
                            ("lease" variable nil (reparse-symbol function_parameters) [12940 12945]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [12901 12991])
                    ("" code nil (reparse-symbol indented_block_body) [13007 13022])
                    ("hotunplugLease" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13062 13066])
                            ("lease" variable nil (reparse-symbol function_parameters) [13068 13073]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [13027 13121])
                    ("" code nil (reparse-symbol indented_block_body) [13137 13152])
                    ("hotplugMemory" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13191 13195])
                            ("params" variable nil (reparse-symbol function_parameters) [13197 13203]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [13157 13309])
                    ("" code nil (reparse-symbol indented_block_body) [13325 13340])
                    ("hotunplugMemory" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13381 13385])
                            ("params" variable nil (reparse-symbol function_parameters) [13387 13393]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [13345 13501])
                    ("" code nil (reparse-symbol indented_block_body) [13517 13532])
                    ("setNumberOfCpus" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13557 13561])
                            ("numberOfCpus" variable nil (reparse-symbol function_parameters) [13563 13575]))                          )
                        (reparse-symbol indented_block_body) [13537 14054])
                    ("" code nil (reparse-symbol indented_block_body) [14070 14085])
                    ("updateVmPolicy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14125 14129])
                            ("params" variable nil (reparse-symbol function_parameters) [14131 14137]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [14090 14287])
                    ("" code nil (reparse-symbol indented_block_body) [14303 14318])
                    ("migrate" function
                       (:parent "dummy"
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14351 14355])
                            ("params" variable nil (reparse-symbol function_parameters) [14357 14363]))                          
                        :documentation "
        Migrate a VM to a remote host.

        :param params: a dictionary containing:
            *dst* - remote host or hibernation image filename
            *dstparams* - hibernation image filename for vdsm parameters
            *mode* - ``remote``/``file``
            *method* - ``online``
            *downtime* - allowed down time during online migration
            *consoleAddress* - remote host graphics address
            *dstqemu* - remote host address dedicated for migration
            *compressed* - compress repeated pages during live migration
            *autoConverge* - force convergence during live migration
            *maxBandwidth* - max bandwidth used by this specific migration
            *convergenceSchedule* - actions to perform when stalling
            *outgoingLimit* - max number of outgoing migrations, must be > 0.
            *incomingLimit* - max number of incoming migrations, must be > 0.
            *encrypted* - whether to use TLS migrations
        ")
                        (reparse-symbol indented_block_body) [14323 15836])
                    ("" code nil (reparse-symbol indented_block_body) [15852 15867])
                    ("migrateChangeParams" function
                       (:parent "dummy"
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15912 15916])
                            ("params" variable nil (reparse-symbol function_parameters) [15918 15924]))                          
                        :documentation "
        Change parameters of an ongoing migration

        :param params: a dictionary containing:
            *maxBandwidth* - new max bandwidth
        ")
                        (reparse-symbol indented_block_body) [15872 16148])
                    ("" code nil (reparse-symbol indented_block_body) [16164 16179])
                    ("migrateCancel" function
                       (:parent "dummy"
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16218 16222]))                          
                        :documentation "
        Cancel a currently outgoing migration process.
        ")
                        (reparse-symbol indented_block_body) [16184 16343])
                    ("" code nil (reparse-symbol indented_block_body) [16359 16374])
                    ("migrationCreate" function
                       (:parent "dummy"
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16415 16419])
                            ("params" variable nil (reparse-symbol function_parameters) [16421 16427])
                            ("incomingLimit" variable nil (reparse-symbol function_parameters) [16429 16442]))                          
                        :documentation "
        Start a migration-destination VM.

        :param params: parameters of new VM, to be passed to
            *:meth:* - `~clientIF.create`.
        :type params: dict
        :param incomingLimit: maximum number of incoming migrations to set
            before the migration is started. Must be > 0.
        :type incomingLimit: int
        ")
                        (reparse-symbol indented_block_body) [16379 18261])
                    ("" code nil (reparse-symbol indented_block_body) [18277 18292])
                    ("diskReplicateStart" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18336 18340])
                            ("srcDisk" variable nil (reparse-symbol function_parameters) [18342 18349])
                            ("dstDisk" variable nil (reparse-symbol function_parameters) [18351 18358]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [18297 18421])
                    ("" code nil (reparse-symbol indented_block_body) [18437 18452])
                    ("diskReplicateFinish" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18497 18501])
                            ("srcDisk" variable nil (reparse-symbol function_parameters) [18503 18510])
                            ("dstDisk" variable nil (reparse-symbol function_parameters) [18512 18519]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [18457 18583])
                    ("" code nil (reparse-symbol indented_block_body) [18599 18614])
                    ("diskSizeExtend" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18654 18658])
                            ("driveSpecs" variable nil (reparse-symbol function_parameters) [18660 18670])
                            ("newSize" variable nil (reparse-symbol function_parameters) [18672 18679]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [18619 19100])
                    ("" code nil (reparse-symbol indented_block_body) [19116 19131])
                    ("pause" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19162 19166]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [19136 19200])
                    ("" code nil (reparse-symbol indented_block_body) [19216 19231])
                    ("reset" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19246 19250]))                          
                        :documentation "
        Press the virtual reset button for the specified VM.
        ")
                        (reparse-symbol indented_block_body) [19236 19371])
                    ("" code nil (reparse-symbol indented_block_body) [19387 19402])
                    ("setTicket" function
                       (:parent "dummy"
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19437 19441])
                            ("password" variable nil (reparse-symbol function_parameters) [19443 19451])
                            ("ttl" variable nil (reparse-symbol function_parameters) [19453 19456])
                            ("existingConnAction" variable nil (reparse-symbol function_parameters) [19458 19476])
                            ("params" variable nil (reparse-symbol function_parameters) [19478 19484]))                          
                        :documentation "
        Set the ticket (password) to be used to connect to a VM display

        :param vmId: specify the VM whos ticket is to be changed.
        :param password: new password
        :type password: string
        :param ttl: ticket lifetime (seconds)
        :param existingConnAction: what to do with a currently-connected
                client (SPICE only):
                ``disconnect`` - disconnect old client when a new client
                                 connects.
                ``keep``       - allow existing client to remain
                                 connected.
                ``fail``       - abort command without disconnecting
                                 the current client.
        :param additional parameters in dict format
        ")
                        (reparse-symbol indented_block_body) [19407 20350])
                    ("" code nil (reparse-symbol indented_block_body) [20366 20381])
                    ("shutdown" function
                       (:parent "dummy"
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20415 20419])
                            ("delay" variable nil (reparse-symbol function_parameters) [20421 20426])
                            ("message" variable nil (reparse-symbol function_parameters) [20433 20440])
                            ("reboot" variable nil (reparse-symbol function_parameters) [20447 20453])
                            ("timeout" variable nil (reparse-symbol function_parameters) [20461 20468])
                            ("force" variable nil (reparse-symbol function_parameters) [20492 20497]))                          
                        :documentation "
        Shut a VM down politely.

        :param message: message to be shown to guest user before shutting down
                        his machine.
        :param delay: grace period (seconds) to let guest user close his
                      applications.
        :param reboot: True if reboot is desired, False for shutdown
        :param timeout: number of seconds to wait before trying next
                        shutdown/reboot method
        :param force: True if shutdown/reboot desired by any means necessary
                      (forceful reboot/shutdown if all graceful methods fail)
        ")
                        (reparse-symbol indented_block_body) [20386 21448])
                    ("" code nil (reparse-symbol indented_block_body) [21464 21479])
                    ("setDestroyOnReboot" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21523 21527]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [21484 21577])
                    ("_getHibernationPaths" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21607 21611])
                            ("vmParams" variable nil (reparse-symbol function_parameters) [21613 21621]))                          )
                        (reparse-symbol indented_block_body) [21582 22090])
                    ("_getHibernationPathsFromString" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22130 22134])
                            ("hibernationStr" variable nil (reparse-symbol function_parameters) [22136 22150]))                          
                        :documentation "
        Break *hibernationStr* into two PDIVs of hibernation images.
        ")
                        (reparse-symbol indented_block_body) [22095 22655])
                    ("" code nil (reparse-symbol indented_block_body) [22671 22686])
                    ("freeze" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22718 22722]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [22691 22757])
                    ("" code nil (reparse-symbol indented_block_body) [22773 22788])
                    ("thaw" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22818 22822]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [22793 22855])
                    ("" code nil (reparse-symbol indented_block_body) [22871 22886])
                    ("start_backup" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22924 22928])
                            ("backup_id" variable nil (reparse-symbol function_parameters) [22930 22939])
                            ("disks" variable nil (reparse-symbol function_parameters) [22941 22946])
                            ("from_checkpoint_id" variable nil (reparse-symbol function_parameters) [22969 22987])
                            ("to_checkpoint_id" variable nil (reparse-symbol function_parameters) [22994 23010]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [22891 23146])
                    ("" code nil (reparse-symbol indented_block_body) [23162 23177])
                    ("stop_backup" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23214 23218])
                            ("backup_id" variable nil (reparse-symbol function_parameters) [23220 23229]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [23182 23278])
                    ("" code nil (reparse-symbol indented_block_body) [23294 23309])
                    ("backup_info" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23346 23350])
                            ("backup_id" variable nil (reparse-symbol function_parameters) [23352 23361]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [23314 23410])
                    ("" code nil (reparse-symbol indented_block_body) [23426 23441])
                    ("delete_checkpoints" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23485 23489])
                            ("checkpoint_ids" variable nil (reparse-symbol function_parameters) [23491 23505]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [23446 23566])
                    ("" code nil (reparse-symbol indented_block_body) [23582 23597])
                    ("redefine_checkpoints" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23643 23647])
                            ("checkpoints" variable nil (reparse-symbol function_parameters) [23649 23660]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [23602 23720])
                    ("" code nil (reparse-symbol indented_block_body) [23736 23751])
                    ("snapshot" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23785 23789])
                            ("snapDrives" variable nil (reparse-symbol function_parameters) [23791 23801])
                            ("snapMemory" variable nil (reparse-symbol function_parameters) [23803 23813])
                            ("frozen" variable nil (reparse-symbol function_parameters) [23820 23826]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [23756 24216])
                    ("" code nil (reparse-symbol indented_block_body) [24232 24247])
                    ("setBalloonTarget" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24289 24293])
                            ("target" variable nil (reparse-symbol function_parameters) [24295 24301]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [24252 24352])
                    ("" code nil (reparse-symbol indented_block_body) [24368 24383])
                    ("setCpuTuneQuota" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24424 24428])
                            ("quota" variable nil (reparse-symbol function_parameters) [24430 24435]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [24388 24484])
                    ("" code nil (reparse-symbol indented_block_body) [24500 24515])
                    ("getIoTune" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24550 24554]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [24520 24635])
                    ("" code nil (reparse-symbol indented_block_body) [24651 24666])
                    ("setIoTune" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24701 24705])
                            ("tunables" variable nil (reparse-symbol function_parameters) [24707 24715]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [24671 24761])
                    ("" code nil (reparse-symbol indented_block_body) [24777 24792])
                    ("getIoTunePolicy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24833 24837]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [24797 24924])
                    ("" code nil (reparse-symbol indented_block_body) [24940 24955])
                    ("setCpuTunePeriod" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24997 25001])
                            ("period" variable nil (reparse-symbol function_parameters) [25003 25009]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [24960 25060])
                    ("" code nil (reparse-symbol indented_block_body) [25076 25091])
                    ("getDiskAlignment" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25117 25121])
                            ("disk" variable nil (reparse-symbol function_parameters) [25123 25127]))                          )
                        (reparse-symbol indented_block_body) [25096 25255])
                    ("" code nil (reparse-symbol indented_block_body) [25271 25286])
                    ("merge" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25317 25321])
                            ("drive" variable nil (reparse-symbol function_parameters) [25323 25328])
                            ("baseVolUUID" variable nil (reparse-symbol function_parameters) [25330 25341])
                            ("topVolUUID" variable nil (reparse-symbol function_parameters) [25343 25353])
                            ("bandwidth" variable nil (reparse-symbol function_parameters) [25355 25364])
                            ("jobUUID" variable nil (reparse-symbol function_parameters) [25368 25375]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [25291 25477])
                    ("" code nil (reparse-symbol indented_block_body) [25493 25508])
                    ("seal" function
                       (:parent "dummy"
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25538 25542])
                            ("job_id" variable nil (reparse-symbol function_parameters) [25544 25550])
                            ("sp_id" variable nil (reparse-symbol function_parameters) [25552 25557])
                            ("images" variable nil (reparse-symbol function_parameters) [25559 25565]))                          
                        :documentation "
        Run virt-sysprep on all disks of the VM, to erase all machine-specific
        configuration from the filesystem: SSH keys, UDEV rules, MAC addresses,
        system ID, hostname etc.
        ")
                        (reparse-symbol indented_block_body) [25513 25934]))                  
                :type "class")
                nil [3357 25934])
            ("Volume" type
               (:superclasses ("APIBase")
                :members 
                  ( ("ctorArgs" variable nil (reparse-symbol indented_block_body) [25963 26033])
                    ("Types" type
                       (:members 
                          ( ("UNKNOWN" variable nil (reparse-symbol indented_block_body) [26060 26084])
                            ("PREALLOCATED" variable nil (reparse-symbol indented_block_body) [26093 26127])
                            ("SPARSE" variable nil (reparse-symbol indented_block_body) [26136 26158]))                          
                        :type "class")
                        (reparse-symbol indented_block_body) [26039 26159])
                    ("Formats" type
                       (:members 
                          ( ("UNKNOWN" variable nil (reparse-symbol indented_block_body) [26187 26214])
                            ("COW" variable nil (reparse-symbol indented_block_body) [26223 26242])
                            ("RAW" variable nil (reparse-symbol indented_block_body) [26251 26270]))                          
                        :type "class")
                        (reparse-symbol indented_block_body) [26164 26271])
                    ("Roles" type
                       (:members 
                          ( ("SHARED" variable nil (reparse-symbol indented_block_body) [26297 26319])
                            ("LEAF" variable nil (reparse-symbol indented_block_body) [26328 26346]))                          
                        :type "class")
                        (reparse-symbol indented_block_body) [26276 26347])
                    ("BLANK_UUID" variable nil (reparse-symbol indented_block_body) [26352 26378])
                    ("__init__" function
                       (:suite 
                          ( ("APIBase" code nil (reparse-symbol indented_block_body) [26443 26465])
                            ("self" variable nil (reparse-symbol indented_block_body) [26474 26491])
                            ("self" variable nil (reparse-symbol indented_block_body) [26500 26521])
                            ("self" variable nil (reparse-symbol indented_block_body) [26530 26551])
                            ("self" variable nil (reparse-symbol indented_block_body) [26560 26583]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26397 26401])
                            ("UUID" variable nil (reparse-symbol function_parameters) [26403 26407])
                            ("spUUID" variable nil (reparse-symbol function_parameters) [26409 26415])
                            ("sdUUID" variable nil (reparse-symbol function_parameters) [26417 26423])
                            ("imgUUID" variable nil (reparse-symbol function_parameters) [26425 26432]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [26384 26584])
                    ("copy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26598 26602])
                            ("dstSdUUID" variable nil (reparse-symbol function_parameters) [26604 26613])
                            ("dstImgUUID" variable nil (reparse-symbol function_parameters) [26615 26625])
                            ("dstVolUUID" variable nil (reparse-symbol function_parameters) [26627 26637])
                            ("desc" variable nil (reparse-symbol function_parameters) [26639 26643])
                            ("volType" variable nil (reparse-symbol function_parameters) [26645 26652])
                            ("volFormat" variable nil (reparse-symbol function_parameters) [26667 26676])
                            ("preallocate" variable nil (reparse-symbol function_parameters) [26678 26689])
                            ("postZero" variable nil (reparse-symbol function_parameters) [26691 26699])
                            ("force" variable nil (reparse-symbol function_parameters) [26701 26706])
                            ("discard" variable nil (reparse-symbol function_parameters) [26708 26715]))                          )
                        (reparse-symbol indented_block_body) [26589 27107])
                    ("create" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [27123 27127])
                            ("size" variable nil (reparse-symbol function_parameters) [27129 27133])
                            ("volFormat" variable nil (reparse-symbol function_parameters) [27135 27144])
                            ("preallocate" variable nil (reparse-symbol function_parameters) [27146 27157])
                            ("diskType" variable nil (reparse-symbol function_parameters) [27159 27167])
                            ("desc" variable nil (reparse-symbol function_parameters) [27169 27173])
                            ("srcImgUUID" variable nil (reparse-symbol function_parameters) [27190 27200])
                            ("srcVolUUID" variable nil (reparse-symbol function_parameters) [27202 27212])
                            ("initialSize" variable nil (reparse-symbol function_parameters) [27214 27225]))                          )
                        (reparse-symbol indented_block_body) [27112 27573])
                    ("delete" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [27589 27593])
                            ("postZero" variable nil (reparse-symbol function_parameters) [27595 27603])
                            ("force" variable nil (reparse-symbol function_parameters) [27605 27610])
                            ("discard" variable nil (reparse-symbol function_parameters) [27612 27619]))                          )
                        (reparse-symbol indented_block_body) [27578 27825])
                    ("verify_untrusted" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [27851 27855]))                          )
                        (reparse-symbol indented_block_body) [27830 28011])
                    ("extendSize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28031 28035])
                            ("newSize" variable nil (reparse-symbol function_parameters) [28037 28044]))                          )
                        (reparse-symbol indented_block_body) [28016 28166])
                    ("updateSize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28186 28190])
                            ("newSize" variable nil (reparse-symbol function_parameters) [28192 28199]))                          )
                        (reparse-symbol indented_block_body) [28171 28321])
                    ("getInfo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28338 28342]))                          )
                        (reparse-symbol indented_block_body) [28326 28478])
                    ("getQemuImageInfo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28504 28508]))                          )
                        (reparse-symbol indented_block_body) [28483 28650])
                    ("getSize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28667 28671]))                          )
                        (reparse-symbol indented_block_body) [28655 28807])
                    ("setSize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28824 28828])
                            ("newSize" variable nil (reparse-symbol function_parameters) [28830 28837]))                          )
                        (reparse-symbol indented_block_body) [28812 28982])
                    ("refresh" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28999 29003]))                          )
                        (reparse-symbol indented_block_body) [28987 29139])
                    ("setDescription" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [29163 29167])
                            ("description" variable nil (reparse-symbol function_parameters) [29169 29180]))                          )
                        (reparse-symbol indented_block_body) [29144 29389])
                    ("setLegality" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [29410 29414])
                            ("legality" variable nil (reparse-symbol function_parameters) [29416 29424]))                          )
                        (reparse-symbol indented_block_body) [29394 29578]))                  
                :type "class")
                nil [25936 29578])
            ("Image" type
               (:superclasses ("APIBase")
                :members 
                  ( ("ctorArgs" variable nil (reparse-symbol indented_block_body) [29606 29664])
                    ("BLANK_UUID" variable nil (reparse-symbol indented_block_body) [29670 29696])
                    ("__init__" function
                       (:suite 
                          ( ("APIBase" code nil (reparse-symbol indented_block_body) [29752 29774])
                            ("self" variable nil (reparse-symbol indented_block_body) [29783 29800])
                            ("self" variable nil (reparse-symbol indented_block_body) [29809 29830])
                            ("self" variable nil (reparse-symbol indented_block_body) [29839 29860]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [29715 29719])
                            ("UUID" variable nil (reparse-symbol function_parameters) [29721 29725])
                            ("spUUID" variable nil (reparse-symbol function_parameters) [29727 29733])
                            ("sdUUID" variable nil (reparse-symbol function_parameters) [29735 29741]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [29702 29861])
                    ("delete" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [29877 29881])
                            ("postZero" variable nil (reparse-symbol function_parameters) [29883 29891])
                            ("force" variable nil (reparse-symbol function_parameters) [29893 29898])
                            ("discard" variable nil (reparse-symbol function_parameters) [29900 29907]))                          )
                        (reparse-symbol indented_block_body) [29866 30056])
                    ("deleteVolumes" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [30079 30083])
                            ("volumeList" variable nil (reparse-symbol function_parameters) [30085 30095])
                            ("postZero" variable nil (reparse-symbol function_parameters) [30097 30105])
                            ("force" variable nil (reparse-symbol function_parameters) [30113 30118])
                            ("discard" variable nil (reparse-symbol function_parameters) [30148 30155]))                          )
                        (reparse-symbol indented_block_body) [30061 30318])
                    ("getVolumes" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [30338 30342]))                          )
                        (reparse-symbol indented_block_body) [30323 30425])
                    ("move" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [30439 30443])
                            ("dstSdUUID" variable nil (reparse-symbol function_parameters) [30445 30454])
                            ("operation" variable nil (reparse-symbol function_parameters) [30456 30465])
                            ("postZero" variable nil (reparse-symbol function_parameters) [30467 30475])
                            ("force" variable nil (reparse-symbol function_parameters) [30477 30482])
                            ("discard" variable nil (reparse-symbol function_parameters) [30484 30491]))                          )
                        (reparse-symbol indented_block_body) [30430 30794])
                    ("sparsify" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [30812 30816])
                            ("tmpVolUUID" variable nil (reparse-symbol function_parameters) [30818 30828])
                            ("dstSdUUID" variable nil (reparse-symbol function_parameters) [30830 30839])
                            ("dstImgUUID" variable nil (reparse-symbol function_parameters) [30841 30851])
                            ("dstVolUUID" variable nil (reparse-symbol function_parameters) [30853 30863]))                          )
                        (reparse-symbol indented_block_body) [30799 31070])
                    ("cloneStructure" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [31094 31098])
                            ("dstSdUUID" variable nil (reparse-symbol function_parameters) [31100 31109]))                          )
                        (reparse-symbol indented_block_body) [31075 31253])
                    ("syncData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [31271 31275])
                            ("dstSdUUID" variable nil (reparse-symbol function_parameters) [31277 31286])
                            ("syncType" variable nil (reparse-symbol function_parameters) [31288 31296]))                          )
                        (reparse-symbol indented_block_body) [31258 31438])
                    ("upload" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [31454 31458])
                            ("methodArgs" variable nil (reparse-symbol function_parameters) [31460 31470])
                            ("volumeID" variable nil (reparse-symbol function_parameters) [31472 31480]))                          )
                        (reparse-symbol indented_block_body) [31443 31600])
                    ("download" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [31618 31622])
                            ("methodArgs" variable nil (reparse-symbol function_parameters) [31624 31634])
                            ("volumeID" variable nil (reparse-symbol function_parameters) [31636 31644]))                          )
                        (reparse-symbol indented_block_body) [31605 31766])
                    ("prepare" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [31783 31787])
                            ("volumeID" variable nil (reparse-symbol function_parameters) [31789 31797])
                            ("allowIllegal" variable nil (reparse-symbol function_parameters) [31799 31811]))                          )
                        (reparse-symbol indented_block_body) [31771 32011])
                    ("teardown" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [32029 32033])
                            ("volumeID" variable nil (reparse-symbol function_parameters) [32035 32043]))                          )
                        (reparse-symbol indented_block_body) [32016 32153])
                    ("uploadToStream" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [32177 32181])
                            ("methodArgs" variable nil (reparse-symbol function_parameters) [32183 32193])
                            ("callback" variable nil (reparse-symbol function_parameters) [32195 32203])
                            ("startEvent" variable nil (reparse-symbol function_parameters) [32205 32215])
                            ("volUUID" variable nil (reparse-symbol function_parameters) [32217 32224]))                          )
                        (reparse-symbol indented_block_body) [32158 32385])
                    ("downloadFromStream" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [32413 32417])
                            ("methodArgs" variable nil (reparse-symbol function_parameters) [32419 32429])
                            ("callback" variable nil (reparse-symbol function_parameters) [32431 32439])
                            ("volUUID" variable nil (reparse-symbol function_parameters) [32441 32448]))                          )
                        (reparse-symbol indented_block_body) [32390 32601])
                    ("reconcileVolumeChain" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [32631 32635])
                            ("leafVolID" variable nil (reparse-symbol function_parameters) [32637 32646]))                          )
                        (reparse-symbol indented_block_body) [32606 32792]))                  
                :type "class")
                nil [29580 32792])
            ("LVMVolumeGroup" type
               (:superclasses ("APIBase")
                :members 
                  ( ("ctorArgs" variable nil (reparse-symbol indented_block_body) [32829 32860])
                    ("__init__" function
                       (:suite 
                          ( ("APIBase" code nil (reparse-symbol indented_block_body) [32917 32939])
                            ("self" variable nil (reparse-symbol indented_block_body) [32948 32977]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [32879 32883])
                            ("lvmvolumegroupID" variable nil (reparse-symbol function_parameters) [32885 32901]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [32866 32978])
                    ("create" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [32994 32998])
                            ("name" variable nil (reparse-symbol function_parameters) [33000 33004])
                            ("devlist" variable nil (reparse-symbol function_parameters) [33006 33013])
                            ("force" variable nil (reparse-symbol function_parameters) [33015 33020]))                          )
                        (reparse-symbol indented_block_body) [32983 33085])
                    ("getInfo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [33102 33106]))                          )
                        (reparse-symbol indented_block_body) [33090 33278])
                    ("remove" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [33294 33298]))                          )
                        (reparse-symbol indented_block_body) [33283 33469]))                  
                :type "class")
                nil [32794 33469])
            ("ISCSIConnection" type
               (:superclasses ("APIBase")
                :members 
                  ( ("ctorArgs" variable nil (reparse-symbol indented_block_body) [33507 33520])
                    ("__init__" function
                       (:suite 
                          ( ("APIBase" code nil (reparse-symbol indented_block_body) [33554 33576]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [33539 33543]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [33526 33577])
                    ("discoverSendTargets" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [33606 33610])
                            ("host" variable nil (reparse-symbol function_parameters) [33612 33616])
                            ("port" variable nil (reparse-symbol function_parameters) [33618 33622])
                            ("user" variable nil (reparse-symbol function_parameters) [33624 33628])
                            ("password" variable nil (reparse-symbol function_parameters) [33633 33641])
                            ("ipv6_enabled" variable nil (reparse-symbol function_parameters) [33674 33686]))                          )
                        (reparse-symbol indented_block_body) [33582 33884]))                  
                :type "class")
                nil [33471 33884])
            ("StorageDomain" type
               (:superclasses ("APIBase")
                :members 
                  ( ("ctorArgs" variable nil (reparse-symbol indented_block_body) [33920 33950])
                    ("Types" type
                       (:members 
                          ( ("UNKNOWN" variable nil (reparse-symbol indented_block_body) [33977 34017])
                            ("NFS" variable nil (reparse-symbol indented_block_body) [34026 34058])
                            ("FCP" variable nil (reparse-symbol indented_block_body) [34067 34099])
                            ("ISCSI" variable nil (reparse-symbol indented_block_body) [34108 34144])
                            ("LOCALFS" variable nil (reparse-symbol indented_block_body) [34153 34193])
                            ("CIFS" variable nil (reparse-symbol indented_block_body) [34202 34236])
                            ("POSIXFS" variable nil (reparse-symbol indented_block_body) [34245 34285])
                            ("GLUSTERFS" variable nil (reparse-symbol indented_block_body) [34294 34338]))                          
                        :type "class")
                        (reparse-symbol indented_block_body) [33956 34339])
                    ("Classes" type
                       (:members 
                          ( ("DATA" variable nil (reparse-symbol indented_block_body) [34367 34401])
                            ("ISO" variable nil (reparse-symbol indented_block_body) [34410 34442])
                            ("BACKUP" variable nil (reparse-symbol indented_block_body) [34451 34489]))                          
                        :type "class")
                        (reparse-symbol indented_block_body) [34344 34490])
                    ("BLANK_UUID" variable nil (reparse-symbol indented_block_body) [34495 34534])
                    ("__init__" function
                       (:suite 
                          ( ("APIBase" code nil (reparse-symbol indented_block_body) [34574 34596])
                            ("self" variable nil (reparse-symbol indented_block_body) [34605 34622]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [34553 34557])
                            ("UUID" variable nil (reparse-symbol function_parameters) [34559 34563]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [34540 34623])
                    ("activate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [34641 34645])
                            ("storagepoolID" variable nil (reparse-symbol function_parameters) [34647 34660]))                          )
                        (reparse-symbol indented_block_body) [34628 34737])
                    ("attach" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [34753 34757])
                            ("storagepoolID" variable nil (reparse-symbol function_parameters) [34759 34772]))                          )
                        (reparse-symbol indented_block_body) [34742 34847])
                    ("create" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [34863 34867])
                            ("domainType" variable nil (reparse-symbol function_parameters) [34869 34879])
                            ("typeArgs" variable nil (reparse-symbol function_parameters) [34881 34889])
                            ("name" variable nil (reparse-symbol function_parameters) [34891 34895])
                            ("domainClass" variable nil (reparse-symbol function_parameters) [34897 34908])
                            ("version" variable nil (reparse-symbol function_parameters) [34925 34932])
                            ("blockSize" variable nil (reparse-symbol function_parameters) [34981 34990])
                            ("maxHosts" variable nil (reparse-symbol function_parameters) [35010 35018]))                          )
                        (reparse-symbol indented_block_body) [34852 35255])
                    ("deactivate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [35275 35279])
                            ("storagepoolID" variable nil (reparse-symbol function_parameters) [35281 35294])
                            ("masterSdUUID" variable nil (reparse-symbol function_parameters) [35296 35308])
                            ("masterVersion" variable nil (reparse-symbol function_parameters) [35310 35323]))                          )
                        (reparse-symbol indented_block_body) [35260 35480])
                    ("detach" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [35496 35500])
                            ("storagepoolID" variable nil (reparse-symbol function_parameters) [35502 35515])
                            ("masterSdUUID" variable nil (reparse-symbol function_parameters) [35517 35529])
                            ("masterVersion" variable nil (reparse-symbol function_parameters) [35536 35549])
                            ("force" variable nil (reparse-symbol function_parameters) [35568 35573]))                          )
                        (reparse-symbol indented_block_body) [35485 35905])
                    ("extend" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [35921 35925])
                            ("storagepoolID" variable nil (reparse-symbol function_parameters) [35927 35940])
                            ("devlist" variable nil (reparse-symbol function_parameters) [35942 35949])
                            ("force" variable nil (reparse-symbol function_parameters) [35951 35956]))                          )
                        (reparse-symbol indented_block_body) [35910 36098])
                    ("resizePV" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36116 36120])
                            ("storagepoolID" variable nil (reparse-symbol function_parameters) [36122 36135])
                            ("guid" variable nil (reparse-symbol function_parameters) [36137 36141]))                          )
                        (reparse-symbol indented_block_body) [36103 36211])
                    ("format" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36227 36231])
                            ("autoDetach" variable nil (reparse-symbol function_parameters) [36233 36243]))                          )
                        (reparse-symbol indented_block_body) [36216 36315])
                    ("getFileStats" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36337 36341])
                            ("pattern" variable nil (reparse-symbol function_parameters) [36343 36350])
                            ("caseSensitive" variable nil (reparse-symbol function_parameters) [36352 36365]))                          )
                        (reparse-symbol indented_block_body) [36320 36442])
                    ("getImages" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36461 36465]))                          )
                        (reparse-symbol indented_block_body) [36447 36519])
                    ("getInfo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36536 36540]))                          )
                        (reparse-symbol indented_block_body) [36524 36601])
                    ("getStats" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36619 36623]))                          )
                        (reparse-symbol indented_block_body) [36606 36685])
                    ("getVolumes" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36705 36709])
                            ("storagepoolID" variable nil (reparse-symbol function_parameters) [36711 36724])
                            ("imageID" variable nil (reparse-symbol function_parameters) [36726 36733]))                          )
                        (reparse-symbol indented_block_body) [36690 36829])
                    ("setDescription" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36853 36857])
                            ("description" variable nil (reparse-symbol function_parameters) [36859 36870]))                          )
                        (reparse-symbol indented_block_body) [36834 36951])
                    ("validate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36969 36973]))                          )
                        (reparse-symbol indented_block_body) [36956 37035]))                  
                :type "class")
                nil [33886 37035])
            ("StoragePool" type
               (:superclasses ("APIBase")
                :members 
                  ( ("ctorArgs" variable nil (reparse-symbol indented_block_body) [37069 37097])
                    ("__init__" function
                       (:suite 
                          ( ("APIBase" code nil (reparse-symbol indented_block_body) [37137 37159])
                            ("self" variable nil (reparse-symbol indented_block_body) [37168 37185]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [37116 37120])
                            ("UUID" variable nil (reparse-symbol function_parameters) [37122 37126]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [37103 37186])
                    ("connect" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [37226 37230])
                            ("hostID" variable nil (reparse-symbol function_parameters) [37232 37238])
                            ("scsiKey" variable nil (reparse-symbol function_parameters) [37240 37247])
                            ("masterSdUUID" variable nil (reparse-symbol function_parameters) [37249 37261])
                            ("masterVersion" variable nil (reparse-symbol function_parameters) [37263 37276])
                            ("domainDict" variable nil (reparse-symbol function_parameters) [37294 37304]))                          )
                        (reparse-symbol indented_block_body) [37214 37430])
                    ("connectStorageServer" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [37460 37464])
                            ("domainType" variable nil (reparse-symbol function_parameters) [37466 37476])
                            ("connectionParams" variable nil (reparse-symbol function_parameters) [37478 37494]))                          )
                        (reparse-symbol indented_block_body) [37435 37631])
                    ("create" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [37647 37651])
                            ("name" variable nil (reparse-symbol function_parameters) [37653 37657])
                            ("masterSdUUID" variable nil (reparse-symbol function_parameters) [37659 37671])
                            ("masterVersion" variable nil (reparse-symbol function_parameters) [37673 37686])
                            ("domainList" variable nil (reparse-symbol function_parameters) [37688 37698])
                            ("lockRenewalIntervalSec" variable nil (reparse-symbol function_parameters) [37715 37737])
                            ("leaseTimeSec" variable nil (reparse-symbol function_parameters) [37739 37751])
                            ("ioOpTimeoutSec" variable nil (reparse-symbol function_parameters) [37753 37767])
                            ("leaseRetries" variable nil (reparse-symbol function_parameters) [37784 37796]))                          )
                        (reparse-symbol indented_block_body) [37636 38104])
                    ("destroy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [38144 38148])
                            ("hostID" variable nil (reparse-symbol function_parameters) [38150 38156])
                            ("scsiKey" variable nil (reparse-symbol function_parameters) [38158 38165]))                          )
                        (reparse-symbol indented_block_body) [38132 38232])
                    ("disconnect" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [38275 38279])
                            ("hostID" variable nil (reparse-symbol function_parameters) [38281 38287])
                            ("scsiKey" variable nil (reparse-symbol function_parameters) [38289 38296])
                            ("remove" variable nil (reparse-symbol function_parameters) [38298 38304]))                          )
                        (reparse-symbol indented_block_body) [38260 38388])
                    ("disconnectStorageServer" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [38421 38425])
                            ("domainType" variable nil (reparse-symbol function_parameters) [38427 38437])
                            ("connectionParams" variable nil (reparse-symbol function_parameters) [38439 38455]))                          )
                        (reparse-symbol indented_block_body) [38393 38598])
                    ("getBackedUpVmsInfo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [38626 38630])
                            ("storagedomainID" variable nil (reparse-symbol function_parameters) [38632 38647])
                            ("vmList" variable nil (reparse-symbol function_parameters) [38649 38655]))                          )
                        (reparse-symbol indented_block_body) [38603 38731])
                    ("getBackedUpVmsList" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [38759 38763])
                            ("storagedomainID" variable nil (reparse-symbol function_parameters) [38765 38780]))                          )
                        (reparse-symbol indented_block_body) [38736 38848])
                    ("getDomainsContainingImage" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [38883 38887])
                            ("imageID" variable nil (reparse-symbol function_parameters) [38889 38896]))                          )
                        (reparse-symbol indented_block_body) [38853 38965])
                    ("getSpmStatus" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [38987 38991]))                          )
                        (reparse-symbol indented_block_body) [38970 39044])
                    ("getInfo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [39061 39065]))                          )
                        (reparse-symbol indented_block_body) [39049 39124])
                    ("reconstructMaster" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [39151 39155])
                            ("hostId" variable nil (reparse-symbol function_parameters) [39157 39163])
                            ("name" variable nil (reparse-symbol function_parameters) [39165 39169])
                            ("masterSdUUID" variable nil (reparse-symbol function_parameters) [39171 39183])
                            ("masterVersion" variable nil (reparse-symbol function_parameters) [39185 39198])
                            ("domainDict" variable nil (reparse-symbol function_parameters) [39226 39236])
                            ("lockRenewalIntervalSec" variable nil (reparse-symbol function_parameters) [39238 39260])
                            ("leaseTimeSec" variable nil (reparse-symbol function_parameters) [39262 39274])
                            ("ioOpTimeoutSec" variable nil (reparse-symbol function_parameters) [39302 39316])
                            ("leaseRetries" variable nil (reparse-symbol function_parameters) [39318 39330]))                          )
                        (reparse-symbol indented_block_body) [39129 39599])
                    ("setDescription" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [39623 39627])
                            ("description" variable nil (reparse-symbol function_parameters) [39629 39640]))                          )
                        (reparse-symbol indented_block_body) [39604 39719])
                    ("spmStart" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [39737 39741])
                            ("prevID" variable nil (reparse-symbol function_parameters) [39743 39749])
                            ("prevLver" variable nil (reparse-symbol function_parameters) [39751 39759])
                            ("enableScsiFencing" variable nil (reparse-symbol function_parameters) [39761 39778])
                            ("maxHostID" variable nil (reparse-symbol function_parameters) [39797 39806])
                            ("domVersion" variable nil (reparse-symbol function_parameters) [39813 39823]))                          )
                        (reparse-symbol indented_block_body) [39724 40030])
                    ("spmStop" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40047 40051]))                          )
                        (reparse-symbol indented_block_body) [40035 40099])
                    ("upgrade" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40116 40120])
                            ("targetDomVersion" variable nil (reparse-symbol function_parameters) [40122 40138]))                          )
                        (reparse-symbol indented_block_body) [40104 40215])
                    ("updateVMs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40234 40238])
                            ("vmList" variable nil (reparse-symbol function_parameters) [40240 40246])
                            ("storagedomainID" variable nil (reparse-symbol function_parameters) [40248 40263]))                          )
                        (reparse-symbol indented_block_body) [40220 40342])
                    ("removeVM" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40360 40364])
                            ("vmUUID" variable nil (reparse-symbol function_parameters) [40366 40372])
                            ("storagedomainID" variable nil (reparse-symbol function_parameters) [40374 40389]))                          )
                        (reparse-symbol indented_block_body) [40347 40468])
                    ("prepareMerge" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40490 40494])
                            ("subchainInfo" variable nil (reparse-symbol function_parameters) [40496 40508]))                          )
                        (reparse-symbol indented_block_body) [40473 40575])
                    ("finalizeMerge" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40598 40602])
                            ("subchainInfo" variable nil (reparse-symbol function_parameters) [40604 40616]))                          )
                        (reparse-symbol indented_block_body) [40580 40684])
                    ("reduceVolume" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40706 40710])
                            ("storagedomainID" variable nil (reparse-symbol function_parameters) [40712 40727])
                            ("imageID" variable nil (reparse-symbol function_parameters) [40729 40736])
                            ("volumeID" variable nil (reparse-symbol function_parameters) [40738 40746])
                            ("allowActive" variable nil (reparse-symbol function_parameters) [40769 40780]))                          )
                        (reparse-symbol indented_block_body) [40689 40925]))                  
                :type "class")
                nil [37037 40925])
            ("Global" type
               (:superclasses ("APIBase")
                :members 
                  ( ("ctorArgs" variable nil (reparse-symbol indented_block_body) [40954 40967])
                    ("__init__" function
                       (:suite 
                          ( ("APIBase" code nil (reparse-symbol indented_block_body) [41001 41023]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40986 40990]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [40973 41024])
                    ("fenceNode" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [41072 41076])
                            ("addr" variable nil (reparse-symbol function_parameters) [41078 41082])
                            ("port" variable nil (reparse-symbol function_parameters) [41084 41088])
                            ("agent" variable nil (reparse-symbol function_parameters) [41090 41095])
                            ("username" variable nil (reparse-symbol function_parameters) [41097 41105])
                            ("password" variable nil (reparse-symbol function_parameters) [41107 41115])
                            ("action" variable nil (reparse-symbol function_parameters) [41117 41123])
                            ("secure" variable nil (reparse-symbol function_parameters) [41143 41149])
                            ("options" variable nil (reparse-symbol function_parameters) [41157 41164])
                            ("policy" variable nil (reparse-symbol function_parameters) [41169 41175]))                          
                        :documentation "Send a fencing command to a remote node.

           agent is one of (rsa, ilo, drac5, ipmilan, etc)
           action can be one of (status, on, off, reboot).")
                        (reparse-symbol indented_block_body) [41058 47294])
                    ("ping" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [47308 47312]))                          
                        :documentation "Ping the server and confirm network connectivity.

        Deprecated, functionality was split into ping2 and confirmConnectivity.
        ")
                        (reparse-symbol indented_block_body) [47299 47636])
                    ("ping2" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [47651 47655]))                          
                        :documentation "Ping the server.")
                        (reparse-symbol indented_block_body) [47641 47723])
                    ("confirmConnectivity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [47752 47756]))                          
                        :documentation "Confirm network connectivity.

        This verb should be called by engine to confirm remaining connectivity
        after successful setupNetworks call.
        ")
                        (reparse-symbol indented_block_body) [47728 48002])
                    ("" code nil (reparse-symbol indented_block_body) [48018 48033])
                    ("getCapabilities" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [48058 48062]))                          
                        :documentation "
        Report host capabilities.
        ")
                        (reparse-symbol indented_block_body) [48038 48323])
                    ("" code nil (reparse-symbol indented_block_body) [48339 48354])
                    ("getHardwareInfo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [48379 48383]))                          
                        :documentation "
        Report host hardware information
        ")
                        (reparse-symbol indented_block_body) [48359 48706])
                    ("" code nil (reparse-symbol indented_block_body) [48722 48737])
                    ("getAllVmStats" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [48760 48764]))                          
                        :documentation "
        Get statistics of all running VMs.
        ")
                        (reparse-symbol indented_block_body) [48742 49212])
                    ("" code nil (reparse-symbol indented_block_body) [49228 49243])
                    ("getAllVmIoTunePolicies" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [49275 49279]))                          
                        :documentation "
        Get IO tuning policies of all running VMs.
        ")
                        (reparse-symbol indented_block_body) [49248 49524])
                    ("" code nil (reparse-symbol indented_block_body) [49540 49555])
                    ("hostdevListByCaps" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [49582 49586])
                            ("caps" variable nil (reparse-symbol function_parameters) [49588 49592]))                          )
                        (reparse-symbol indented_block_body) [49560 49704])
                    ("" code nil (reparse-symbol indented_block_body) [49720 49735])
                    ("hostdevChangeNumvfs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [49764 49768])
                            ("deviceName" variable nil (reparse-symbol function_parameters) [49770 49780])
                            ("numvfs" variable nil (reparse-symbol function_parameters) [49782 49788]))                          )
                        (reparse-symbol indented_block_body) [49740 49918])
                    ("" code nil (reparse-symbol indented_block_body) [49934 49949])
                    ("hostdevReattach" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [49974 49978])
                            ("deviceName" variable nil (reparse-symbol function_parameters) [49980 49990]))                          )
                        (reparse-symbol indented_block_body) [49954 50077])
                    ("" code nil (reparse-symbol indented_block_body) [50093 50108])
                    ("getStats" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [50126 50130]))                          
                        :documentation "
        Report host statistics.
        ")
                        (reparse-symbol indented_block_body) [50113 50485])
                    ("" code nil (reparse-symbol indented_block_body) [50501 50516])
                    ("setLogLevel" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [50537 50541])
                            ("level" variable nil (reparse-symbol function_parameters) [50543 50548])
                            ("name" variable nil (reparse-symbol function_parameters) [50550 50554]))                          
                        :documentation "
        Set verbosity level of vdsm's log.
        Doesn't survive a restart.

        :param level: requested logging level.
                Examples: `logging.DEBUG` `logging.ERROR`
        :type level: string
        :param name: logger name to set. If not provided,
                defaults to the root logger.
                Otherwise, tune the specific logger provided.
        :type name: string
        ")
                        (reparse-symbol indented_block_body) [50521 51065])
                    ("" code nil (reparse-symbol indented_block_body) [51108 51123])
                    ("dumpxmls" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [51141 51145])
                            ("vmList" variable nil (reparse-symbol function_parameters) [51147 51153]))                          
                        :documentation "
        Return a map of VM UUID to libvirt's domain XML.
        It is conceptually equivalent to calling 'dumpxml' for each VM.

        :param vmList: UUIDs of VMs to return the domain XML for.
        :type vmList: list
        ")
                        (reparse-symbol indented_block_body) [51128 51558])
                    ("" code nil (reparse-symbol indented_block_body) [51574 51589])
                    ("getVMList" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [51608 51612])
                            ("fullStatus" variable nil (reparse-symbol function_parameters) [51614 51624])
                            ("vmList" variable nil (reparse-symbol function_parameters) [51632 51638])
                            ("onlyUUID" variable nil (reparse-symbol function_parameters) [51643 51651]))                          
                        :documentation " return a list of known VMs with full (or partial) config each ")
                        (reparse-symbol indented_block_body) [51594 52012])
                    ("" code nil (reparse-symbol indented_block_body) [52028 52043])
                    ("getExternalVMs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [52067 52071])
                            ("uri" variable nil (reparse-symbol function_parameters) [52073 52076])
                            ("username" variable nil (reparse-symbol function_parameters) [52078 52086])
                            ("password" variable nil (reparse-symbol function_parameters) [52088 52096])
                            ("vm_names" variable nil (reparse-symbol function_parameters) [52098 52106]))                          
                        :documentation "
        Return information about the not-KVM virtual machines:
        getExternalVMs returns list of VMs with subsection of  properties
        that returns from getVmsList (with the same keys ie vmName for name)
        currently v2v returns the following information:
            vm: vmName, vmId, state, memSize, smp, disks and network list,
            disk: dev, alias
            network: type, macAddr, bridge, dev
        ")
                        (reparse-symbol indented_block_body) [52048 52632])
                    ("" code nil (reparse-symbol indented_block_body) [52648 52663])
                    ("getExternalVMNames" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [52691 52695])
                            ("uri" variable nil (reparse-symbol function_parameters) [52697 52700])
                            ("username" variable nil (reparse-symbol function_parameters) [52702 52710])
                            ("password" variable nil (reparse-symbol function_parameters) [52712 52720]))                          
                        :documentation "
        Return names of VMs running on external hypervisor.
        ")
                        (reparse-symbol indented_block_body) [52668 52873])
                    ("" code nil (reparse-symbol indented_block_body) [52889 52904])
                    ("getExternalVmFromOva" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [52934 52938])
                            ("ova_path" variable nil (reparse-symbol function_parameters) [52940 52948]))                          
                        :documentation "
        Return information regarding a VM that is a part of the ova:
        getExternalVmFromOva return information on a VM that is a part
        of the provided ova file.
        The return value is a VM with the following information:
            vm: vmName, state, memSize, smp, disks and network list,
            disk: type, capacity, alias, allocation
            network: dev, model, type, bridge
        ")
                        (reparse-symbol indented_block_body) [52909 53423])
                    ("" code nil (reparse-symbol indented_block_body) [53439 53454])
                    ("convertExternalVm" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [53481 53485])
                            ("uri" variable nil (reparse-symbol function_parameters) [53487 53490])
                            ("username" variable nil (reparse-symbol function_parameters) [53492 53500])
                            ("password" variable nil (reparse-symbol function_parameters) [53502 53510])
                            ("vminfo" variable nil (reparse-symbol function_parameters) [53512 53518])
                            ("jobid" variable nil (reparse-symbol function_parameters) [53520 53525]))                          )
                        (reparse-symbol indented_block_body) [53459 53657])
                    ("" code nil (reparse-symbol indented_block_body) [53673 53688])
                    ("convertExternalVmFromOva" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [53722 53726])
                            ("ova_path" variable nil (reparse-symbol function_parameters) [53728 53736])
                            ("vminfo" variable nil (reparse-symbol function_parameters) [53738 53744])
                            ("jobid" variable nil (reparse-symbol function_parameters) [53746 53751]))                          )
                        (reparse-symbol indented_block_body) [53693 53825])
                    ("" code nil (reparse-symbol indented_block_body) [53841 53856])
                    ("getJobs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [53873 53877])
                            ("job_type" variable nil (reparse-symbol function_parameters) [53879 53887])
                            ("job_ids" variable nil (reparse-symbol function_parameters) [53894 53901]))                          )
                        (reparse-symbol indented_block_body) [53861 54013])
                    ("" code nil (reparse-symbol indented_block_body) [54029 54044])
                    ("getConvertedVm" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [54068 54072])
                            ("jobid" variable nil (reparse-symbol function_parameters) [54074 54079]))                          )
                        (reparse-symbol indented_block_body) [54049 54125])
                    ("" code nil (reparse-symbol indented_block_body) [54141 54156])
                    ("deleteV2VJob" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [54178 54182])
                            ("jobid" variable nil (reparse-symbol function_parameters) [54184 54189]))                          )
                        (reparse-symbol indented_block_body) [54161 54229])
                    ("" code nil (reparse-symbol indented_block_body) [54245 54260])
                    ("abortV2VJob" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [54281 54285])
                            ("jobid" variable nil (reparse-symbol function_parameters) [54287 54292]))                          )
                        (reparse-symbol indented_block_body) [54265 54331])
                    ("" code nil (reparse-symbol indented_block_body) [54347 54362])
                    ("registerSecrets" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [54387 54391])
                            ("secrets" variable nil (reparse-symbol function_parameters) [54393 54400])
                            ("clear" variable nil (reparse-symbol function_parameters) [54402 54407]))                          )
                        (reparse-symbol indented_block_body) [54367 54469])
                    ("" code nil (reparse-symbol indented_block_body) [54485 54500])
                    ("unregisterSecrets" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [54527 54531])
                            ("uuids" variable nil (reparse-symbol function_parameters) [54533 54538]))                          )
                        (reparse-symbol indented_block_body) [54505 54581])
                    ("" code nil (reparse-symbol indented_block_body) [54632 54650])
                    ("setupNetworks" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [54673 54677])
                            ("networks" variable nil (reparse-symbol function_parameters) [54679 54687])
                            ("bondings" variable nil (reparse-symbol function_parameters) [54689 54697])
                            ("options" variable nil (reparse-symbol function_parameters) [54699 54706]))                          
                        :documentation "Add a new network to this vds, replacing an old one.")
                        (reparse-symbol indented_block_body) [54655 55473])
                    ("setSafeNetworkConfig" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [55503 55507]))                          
                        :documentation "Declare current network configuration as 'safe'")
                        (reparse-symbol indented_block_body) [55478 55971])
                    ("" code nil (reparse-symbol indented_block_body) [55987 56005])
                    ("getNetworkCapabilities" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [56037 56041]))                          
                        :documentation "
        Report host network capabilities.
        ")
                        (reparse-symbol indented_block_body) [56010 56288])
                    ("" code nil (reparse-symbol indented_block_body) [56304 56322])
                    ("getNetworkStatistics" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [56352 56356]))                          
                        :documentation "
        Report host network statistics.
        ")
                        (reparse-symbol indented_block_body) [56327 56498])
                    ("" code nil (reparse-symbol indented_block_body) [56514 56529])
                    ("echo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [56559 56563])
                            ("message" variable nil (reparse-symbol function_parameters) [56565 56572]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [56534 56630])
                    ("getLldp" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [56647 56651])
                            ("filter" variable nil (reparse-symbol function_parameters) [56653 56659]))                          )
                        (reparse-symbol indented_block_body) [56635 56756])
                    ("getStorageDomains" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [56817 56821])
                            ("storagepoolID" variable nil (reparse-symbol function_parameters) [56823 56836])
                            ("domainClass" variable nil (reparse-symbol function_parameters) [56843 56854])
                            ("storageType" variable nil (reparse-symbol function_parameters) [56887 56898])
                            ("remotePath" variable nil (reparse-symbol function_parameters) [56905 56915]))                          )
                        (reparse-symbol indented_block_body) [56795 57070])
                    ("getConnectedStoragePools" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [57104 57108]))                          )
                        (reparse-symbol indented_block_body) [57075 57167])
                    ("getStorageRepoStats" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [57196 57200])
                            ("domains" variable nil (reparse-symbol function_parameters) [57202 57209]))                          )
                        (reparse-symbol indented_block_body) [57172 57267])
                    ("startMonitoringDomain" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [57298 57302])
                            ("sdUUID" variable nil (reparse-symbol function_parameters) [57304 57310])
                            ("hostID" variable nil (reparse-symbol function_parameters) [57312 57318]))                          )
                        (reparse-symbol indented_block_body) [57272 57384])
                    ("stopMonitoringDomain" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [57414 57418])
                            ("sdUUID" variable nil (reparse-symbol function_parameters) [57420 57426]))                          )
                        (reparse-symbol indented_block_body) [57389 57483])
                    ("getLVMVolumeGroups" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [57511 57515])
                            ("storageType" variable nil (reparse-symbol function_parameters) [57517 57528]))                          )
                        (reparse-symbol indented_block_body) [57488 57584])
                    ("getDeviceList" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [57607 57611])
                            ("storageType" variable nil (reparse-symbol function_parameters) [57613 57624])
                            ("guids" variable nil (reparse-symbol function_parameters) [57631 57636])
                            ("checkStatus" variable nil (reparse-symbol function_parameters) [57641 57652]))                          )
                        (reparse-symbol indented_block_body) [57589 57732])
                    ("getDevicesVisibility" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [57762 57766])
                            ("guidList" variable nil (reparse-symbol function_parameters) [57768 57776]))                          )
                        (reparse-symbol indented_block_body) [57737 57835])
                    ("getAllTasksInfo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [57860 57864]))                          )
                        (reparse-symbol indented_block_body) [57840 57910])
                    ("getAllTasksStatuses" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [57939 57943]))                          )
                        (reparse-symbol indented_block_body) [57915 57993])
                    ("getAllTasks" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [58014 58018]))                          )
                        (reparse-symbol indented_block_body) [57998 58060])
                    ("setMOMPolicy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [58082 58086])
                            ("policy" variable nil (reparse-symbol function_parameters) [58088 58094]))                          )
                        (reparse-symbol indented_block_body) [58065 58248])
                    ("setMOMPolicyParameters" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [58280 58284])
                            ("key_value_store" variable nil (reparse-symbol function_parameters) [58286 58301]))                          )
                        (reparse-symbol indented_block_body) [58253 58474])
                    ("setKsmTune" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [58494 58498])
                            ("tuningParams" variable nil (reparse-symbol function_parameters) [58500 58512]))                          )
                        (reparse-symbol indented_block_body) [58479 58739])
                    ("setHaMaintenanceMode" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [58769 58773])
                            ("mode" variable nil (reparse-symbol function_parameters) [58775 58779])
                            ("enabled" variable nil (reparse-symbol function_parameters) [58781 58788]))                          
                        :documentation "
        Sets Hosted Engine HA maintenance mode ('global' or 'local') to
        enabled (True) or disabled (False).
        ")
                        (reparse-symbol indented_block_body) [58744 59609])
                    ("add_image_ticket" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [59635 59639])
                            ("ticket" variable nil (reparse-symbol function_parameters) [59641 59647]))                          )
                        (reparse-symbol indented_block_body) [59614 59700])
                    ("get_image_ticket" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [59726 59730])
                            ("uuid" variable nil (reparse-symbol function_parameters) [59732 59736]))                          )
                        (reparse-symbol indented_block_body) [59705 59787])
                    ("remove_image_ticket" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [59816 59820])
                            ("uuid" variable nil (reparse-symbol function_parameters) [59822 59826]))                          )
                        (reparse-symbol indented_block_body) [59792 59880])
                    ("extend_image_ticket" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [59909 59913])
                            ("uuid" variable nil (reparse-symbol function_parameters) [59915 59919])
                            ("timeout" variable nil (reparse-symbol function_parameters) [59921 59928]))                          )
                        (reparse-symbol indented_block_body) [59885 59991]))                  
                :type "class")
                nil [40927 59991])
            ("SDM" type
               (:superclasses ("APIBase")
                :members 
                  ( ("ctorArgs" variable nil (reparse-symbol indented_block_body) [60017 60030])
                    ("copy_data" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [60050 60054])
                            ("job_id" variable nil (reparse-symbol function_parameters) [60056 60062])
                            ("source" variable nil (reparse-symbol function_parameters) [60064 60070])
                            ("destination" variable nil (reparse-symbol function_parameters) [60072 60083]))                          )
                        (reparse-symbol indented_block_body) [60036 60154])
                    ("sparsify_volume" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [60179 60183])
                            ("job_id" variable nil (reparse-symbol function_parameters) [60185 60191])
                            ("vol_info" variable nil (reparse-symbol function_parameters) [60193 60201]))                          )
                        (reparse-symbol indented_block_body) [60159 60267])
                    ("amend_volume" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [60289 60293])
                            ("job_id" variable nil (reparse-symbol function_parameters) [60295 60301])
                            ("vol_info" variable nil (reparse-symbol function_parameters) [60303 60311])
                            ("qcow2_attr" variable nil (reparse-symbol function_parameters) [60313 60323]))                          )
                        (reparse-symbol indented_block_body) [60272 60398])
                    ("merge" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [60413 60417])
                            ("job_id" variable nil (reparse-symbol function_parameters) [60419 60425])
                            ("subchain_info" variable nil (reparse-symbol function_parameters) [60427 60440]))                          )
                        (reparse-symbol indented_block_body) [60403 60501])
                    ("move_domain_device" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [60529 60533])
                            ("job_id" variable nil (reparse-symbol function_parameters) [60535 60541])
                            ("move_params" variable nil (reparse-symbol function_parameters) [60543 60554]))                          )
                        (reparse-symbol indented_block_body) [60506 60626])
                    ("reduce_domain" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [60649 60653])
                            ("job_id" variable nil (reparse-symbol function_parameters) [60655 60661])
                            ("reduce_params" variable nil (reparse-symbol function_parameters) [60663 60676]))                          )
                        (reparse-symbol indented_block_body) [60631 60745])
                    ("update_volume" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [60768 60772])
                            ("job_id" variable nil (reparse-symbol function_parameters) [60774 60780])
                            ("vol_info" variable nil (reparse-symbol function_parameters) [60782 60790])
                            ("vol_attr" variable nil (reparse-symbol function_parameters) [60792 60800]))                          )
                        (reparse-symbol indented_block_body) [60750 60874]))                  
                :type "class")
                nil [59993 60874])
            ("Lease" type
               (:superclasses ("APIBase")
                :members 
                  ( ("ctorArgs" variable nil (reparse-symbol indented_block_body) [60902 60915])
                    ("create" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [60932 60936])
                            ("lease" variable nil (reparse-symbol function_parameters) [60938 60943]))                          )
                        (reparse-symbol indented_block_body) [60921 60991])
                    ("delete" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [61007 61011])
                            ("lease" variable nil (reparse-symbol function_parameters) [61013 61018]))                          )
                        (reparse-symbol indented_block_body) [60996 61066])
                    ("info" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [61080 61084])
                            ("lease" variable nil (reparse-symbol function_parameters) [61086 61091]))                          )
                        (reparse-symbol indented_block_body) [61071 61137])
                    ("status" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [61153 61157])
                            ("lease" variable nil (reparse-symbol function_parameters) [61159 61164]))                          )
                        (reparse-symbol indented_block_body) [61142 61212])
                    ("rebuild_leases" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [61236 61240])
                            ("sd_id" variable nil (reparse-symbol function_parameters) [61242 61247]))                          )
                        (reparse-symbol indented_block_body) [61217 61297]))                  
                :type "class")
                nil [60876 61297])
            ("NBD" type
               (:superclasses ("APIBase")
                :members 
                  ( ("start_server" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [61341 61345])
                            ("server_id" variable nil (reparse-symbol function_parameters) [61347 61356])
                            ("config" variable nil (reparse-symbol function_parameters) [61358 61364]))                          )
                        (reparse-symbol indented_block_body) [61324 61428])
                    ("stop_server" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [61449 61453])
                            ("server_id" variable nil (reparse-symbol function_parameters) [61455 61464]))                          )
                        (reparse-symbol indented_block_body) [61433 61519]))                  
                :type "class")
                nil [61299 61519])
            ("ManagedVolume" type
               (:superclasses ("APIBase")
                :members 
                  ( ("" code nil (reparse-symbol indented_block_body) [61567 61585])
                    ("attach_volume" function
                       (:parent "dummy"
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [61624 61628])
                            ("vol_id" variable nil (reparse-symbol function_parameters) [61630 61636])
                            ("connection_info" variable nil (reparse-symbol function_parameters) [61638 61653]))                          
                        :documentation "
        attach volume and return attached device information
        ")
                        (reparse-symbol indented_block_body) [61590 61809])
                    ("" code nil (reparse-symbol indented_block_body) [61825 61843])
                    ("detach_volume" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [61882 61886])
                            ("vol_id" variable nil (reparse-symbol function_parameters) [61888 61894]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [61848 61948])
                    ("" code nil (reparse-symbol indented_block_body) [61964 61982])
                    ("volumes_info" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [62020 62024])
                            ("vol_ids" variable nil (reparse-symbol function_parameters) [62026 62033]))                          
                        :decorators 
                          ( ("api.method" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [61987 62090]))                  
                :type "class")
                nil [61521 62090]))          
      :file "API.py"
      :pointmax 62090
      :fsize 62089
      :lastmodtime '(23969 45379 861193 150000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [822 860])
            ("errno" include nil nil [862 874])
            ("os" include nil nil [875 884])
            ("os.path" include nil nil [885 899])
            ("socket" include nil nil [900 913])
            ("time" include nil nil [914 925])
            ("threading" include nil nil [926 942])
            ("functools" include nil nil [943 972])
            ("weakref" include nil nil [973 998])
            ("collections" include nil nil [999 1034])
            ("six" include nil nil [1036 1046])
            ("yajsonrpc.betterAsyncore" include nil nil [1048 1092])
            ("yajsonrpc.exception" include nil nil [1093 1145])
            ("yajsonrpc.stompclient" include nil nil [1146 1191])
            ("yajsonrpc.stompserver" include nil nil [1192 1240])
            ("yajsonrpc" include nil nil [1241 1275])
            ("vdsm" include nil nil [1276 1301])
            ("vdsm.config" include nil nil [1302 1332])
            ("vdsm.common" include nil nil [1333 1366])
            ("vdsm.common.define" include nil nil [1367 1415])
            ("vdsm.common.hostutils" include nil nil [1416 1466])
            ("vdsm.common.time" include nil nil [1467 1490])
            ("vdsm.protocoldetector" include nil nil [1491 1546])
            ("vdsm.momIF" include nil nil [1547 1579])
            ("vdsm.virt" include nil nil [1580 1608])
            ("vdsm.virt" include nil nil [1609 1640])
            ("vdsm.virt" include nil nil [1641 1671])
            ("vdsm.virt" include nil nil [1672 1700])
            ("vdsm.virt" include nil nil [1701 1731])
            ("vdsm.virt.vmchannels" include nil nil [1732 1773])
            ("vdsm.virt.vmdevices.storage" include nil nil [1774 1823])
            ("vdsm.virt.utils" include nil nil [1824 1863])
            ("libvirt" include nil nil [1864 1878])
            ("vdsm" include nil nil [1879 1909])
            ("vdsm" include nil nil [1910 1931])
            ("vdsm.common" include nil nil [1932 1966])
            ("vdsm.common" include nil nil [1967 1999])
            ("vdsm.common" include nil nil [2000 2041])
            ("vdsm.common" include nil nil [2042 2074])
            ("vdsm.common" include nil nil [2075 2108])
            ("vdsm.virt" include nil nil [2109 2133])
            ("vdsm.virt.qemuguestagent" include nil nil [2134 2191])
            ("vdsm.virt.vm" include nil nil [2192 2243])
            ("try" code nil nil [2245 2361])
            ("clientIF" type
               (:documentation "
    The client interface of vdsm.

    Exposes vdsm verbs as json-rpc or xml-rpc functions.
    "
                :superclasses ("object")
                :members 
                  ( ("_instance" variable nil (reparse-symbol indented_block_body) [2499 2515])
                    ("_instanceLock" variable nil (reparse-symbol indented_block_body) [2520 2552])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"
        Initialize the (single) clientIF instance

        :param irs: a Dispatcher object to be used as this object's irs.
        :type irs: :class:`vdsm.storage.dispatcher.Dispatcher`
        :param log: a log object to be used for this object's logging.
        :type log: :class:`logging.Logger`
        \"\"\"" code nil (reparse-symbol indented_block_body) [2607 2923])
                            ("self" variable nil (reparse-symbol indented_block_body) [2932 2973])
                            ("self" variable nil (reparse-symbol indented_block_body) [2982 3024])
                            ("self" variable nil (reparse-symbol indented_block_body) [3033 3079])
                            ("self" variable nil (reparse-symbol indented_block_body) [3088 3135])
                            ("self" variable nil (reparse-symbol indented_block_body) [3144 3158])
                            ("if" code nil (reparse-symbol indented_block_body) [3167 3330])
                            ("self" variable nil (reparse-symbol indented_block_body) [3338 3352])
                            ("self" variable nil (reparse-symbol indented_block_body) [3361 3382])
                            ("self" variable nil (reparse-symbol indented_block_body) [3812 3853])
                            ("self" variable nil (reparse-symbol indented_block_body) [3862 3922])
                            ("self" variable nil (reparse-symbol indented_block_body) [3931 3946])
                            ("self" variable nil (reparse-symbol indented_block_body) [3955 3972])
                            ("self" variable nil (reparse-symbol indented_block_body) [3981 4007])
                            ("self" variable nil (reparse-symbol indented_block_body) [4016 4055])
                            ("self" variable nil (reparse-symbol indented_block_body) [4064 4091])
                            ("self" variable nil (reparse-symbol indented_block_body) [4100 4128])
                            ("if" code nil (reparse-symbol indented_block_body) [4137 4248])
                            ("try" code nil (reparse-symbol indented_block_body) [4256 5761]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2571 2575])
                            ("irs" variable nil (reparse-symbol function_parameters) [2577 2580])
                            ("log" variable nil (reparse-symbol function_parameters) [2582 2585])
                            ("scheduler" variable nil (reparse-symbol function_parameters) [2587 2596]))                          
                        :documentation "
        Initialize the (single) clientIF instance

        :param irs: a Dispatcher object to be used as this object's irs.
        :type irs: :class:`vdsm.storage.dispatcher.Dispatcher`
        :param log: a log object to be used for this object's logging.
        :type log: :class:`logging.Logger`
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [2558 5761])
                    ("getVMs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5777 5781]))                          
                        :documentation "
        Get a snapshot of the currently registered VMs.
        Return value will be a dict of {vmUUID: VM_object}
        ")
                        (reparse-symbol indented_block_body) [5766 6003])
                    ("pop_unknown_vm_ids" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6031 6035]))                          
                        :documentation "
        Return iterable of unknown VM ids that were spotted.
        Only VM ids spotted since the last call of this method or since
        creation of this instance (in case this method hasn't been called yet)
        are returned.

        This is intended to serve for detection of external VMs.
        ")
                        (reparse-symbol indented_block_body) [6008 6604])
                    ("add_unknown_vm_id" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6631 6635])
                            ("vm_id" variable nil (reparse-symbol function_parameters) [6637 6642]))                          
                        :documentation "
        Add `vm_id` to the set of unknown VM ids.

        :param vm_id: VM id to add
        :type vm_id: basestring
        ")
                        (reparse-symbol indented_block_body) [6609 6868])
                    ("ready" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6897 6901]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [6873 6979])
                    ("notify" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6995 6999])
                            ("event_id" variable nil (reparse-symbol function_parameters) [7001 7009])
                            ("params" variable nil (reparse-symbol function_parameters) [7011 7017]))                          
                        :documentation "
        Send notification using provided subscription id as
        event_id and a dictionary as event body. Before sending
        there is notify_time added on top level to the dictionary.

        Please consult event-schema.yml in order to build an appropriate event.
        https://github.com/oVirt/vdsm/blob/master/lib/api/vdsm-events.yml

        Args:
            event_id (string): unique event name
            params (dict): event content
        ")
                        (reparse-symbol indented_block_body) [6984 8375])
                    ("contEIOVms" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8395 8399])
                            ("sdUUID" variable nil (reparse-symbol function_parameters) [8401 8407])
                            ("isDomainStateValid" variable nil (reparse-symbol function_parameters) [8409 8427]))                          )
                        (reparse-symbol indented_block_body) [8380 9467])
                    ("getInstance" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [9505 9508])
                            ("irs" variable nil (reparse-symbol function_parameters) [9510 9513])
                            ("log" variable nil (reparse-symbol function_parameters) [9520 9523])
                            ("scheduler" variable nil (reparse-symbol function_parameters) [9530 9539]))                          )
                        (reparse-symbol indented_block_body) [9472 9912])
                    ("_createAcceptor" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9937 9941])
                            ("host" variable nil (reparse-symbol function_parameters) [9943 9947])
                            ("port" variable nil (reparse-symbol function_parameters) [9949 9953]))                          )
                        (reparse-symbol indented_block_body) [9917 10167])
                    ("_connectToBroker" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10193 10197]))                          )
                        (reparse-symbol indented_block_body) [10172 11147])
                    ("_prepareHttpServer" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11175 11179]))                          )
                        (reparse-symbol indented_block_body) [11152 11768])
                    ("_prepareJSONRPCServer" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11799 11803]))                          )
                        (reparse-symbol indented_block_body) [11773 12681])
                    ("_wait_for_shutting_down_vms" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12718 12722]))                          
                        :documentation "
        Wait loop checking remaining VMs in vm container

        This method is helper method that highers the
        probability of engine to properly acknowledge
        that all VMs are terminated by host shutdown.

        The VMs are shutdown by external service: libvirt-guests
        The service pauses system shutdown on systemd shutdown
        and gracefully shutdowns the running VMs.

        This method applies only when the host is in shutdown.
        If the host is running, the method ends immediately.
        ")
                        (reparse-symbol indented_block_body) [12686 13949])
                    ("prepareForShutdown" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13977 13981]))                          
                        :documentation "
        Prepare server for shutdown.

        Should be called before taking server down.
        ")
                        (reparse-symbol indented_block_body) [13954 14936])
                    ("start" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14951 14955]))                          )
                        (reparse-symbol indented_block_body) [14941 15195])
                    ("prepareVolumePath" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15222 15226])
                            ("drive" variable nil (reparse-symbol function_parameters) [15228 15233])
                            ("vmId" variable nil (reparse-symbol function_parameters) [15235 15239])
                            ("path" variable nil (reparse-symbol function_parameters) [15246 15250]))                          
                        :documentation "
        :param drive: the drive to prepare path for
        :type drive: dict, string or None
        :param vmId: VM UUID
        :type vmId: string or None
        :param path: defines payload path for devices providing
            payload; if omitted and `drive` is a payload device then
            the path will be generated
        :type path: string or None
        ")
                        (reparse-symbol indented_block_body) [15200 19532])
                    ("_prepareVolumePathFromPayload" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19571 19575])
                            ("vmId" variable nil (reparse-symbol function_parameters) [19577 19581])
                            ("device" variable nil (reparse-symbol function_parameters) [19583 19589])
                            ("payload" variable nil (reparse-symbol function_parameters) [19591 19598])
                            ("path" variable nil (reparse-symbol function_parameters) [19600 19604]))                          
                        :documentation "
        :param vmId: VM UUID or None
        :param device: either 'floppy' or 'cdrom'
        :param payload: a dict formed like this:
            {'volId': 'volume id',   # volId is optional
             'file': {'filename': 'content', ...}}
        :param path: payload path as a string; if not given, it will
           be generated
        ")
                        (reparse-symbol indented_block_body) [19537 20267])
                    ("teardownVolumePath" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20295 20299])
                            ("drive" variable nil (reparse-symbol function_parameters) [20301 20306]))                          )
                        (reparse-symbol indented_block_body) [20272 20827])
                    ("getDiskAlignment" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20853 20857])
                            ("drive" variable nil (reparse-symbol function_parameters) [20859 20864]))                          
                        :documentation "
        Returns the alignment of the disk partitions

        param drive:
        is either {\"poolID\": , \"domainID\": , \"imageID\": , \"volumeID\": }
        or {\"GUID\": }

        Return type: a dictionary with partition names as keys and
        True for aligned partitions and False for unaligned as values
        ")
                        (reparse-symbol indented_block_body) [20832 21553])
                    ("createVm" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21571 21575])
                            ("vmParams" variable nil (reparse-symbol function_parameters) [21577 21585])
                            ("vmRecover" variable nil (reparse-symbol function_parameters) [21587 21596]))                          )
                        (reparse-symbol indented_block_body) [21558 22008])
                    ("getAllVmStats" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22031 22035]))                          )
                        (reparse-symbol indented_block_body) [22013 22100])
                    ("getAllVmIoTunePolicies" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22132 22136]))                          )
                        (reparse-symbol indented_block_body) [22105 22363])
                    ("createStompClient" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22390 22394])
                            ("client_socket" variable nil (reparse-symbol function_parameters) [22396 22409]))                          )
                        (reparse-symbol indented_block_body) [22368 22654])
                    ("_recoverThread" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22678 22682]))                          )
                        (reparse-symbol indented_block_body) [22659 22960])
                    ("_recoverExistingVms" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22989 22993]))                          )
                        (reparse-symbol indented_block_body) [22965 24190])
                    ("lookup_vm_from_event" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24220 24224])
                            ("dom" variable nil (reparse-symbol function_parameters) [24226 24229])
                            ("args" variable nil (reparse-symbol function_parameters) [24231 24236]))                          )
                        (reparse-symbol indented_block_body) [24195 24699])
                    ("dispatchLibvirtEvents" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24730 24734])
                            ("conn" variable nil (reparse-symbol function_parameters) [24736 24740])
                            ("dom" variable nil (reparse-symbol function_parameters) [24742 24745])
                            ("args" variable nil (reparse-symbol function_parameters) [24747 24752]))                          )
                        (reparse-symbol indented_block_body) [24704 27477])
                    ("_waitForDomainsUp" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [27504 27508]))                          )
                        (reparse-symbol indented_block_body) [27482 27898])
                    ("_waitForStoragePool" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [27927 27931]))                          )
                        (reparse-symbol indented_block_body) [27903 28160])
                    ("_preparePathsForRecoveredVMs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28198 28202]))                          )
                        (reparse-symbol indented_block_body) [28165 28897])
                    ("_prepare_network_drive" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28929 28933])
                            ("drive" variable nil (reparse-symbol function_parameters) [28935 28940])
                            ("res" variable nil (reparse-symbol function_parameters) [28942 28945]))                          
                        :documentation "
        Fills drive object for network drives with network-specific data.

        Network (gluster) drives have a very special ephemeral runtime
        path specification, and it can't be resolved to a typical storage
        path in runtime. Therefore, we have to replace storage path
        with a VM path.

        So
            /rhev/data-center/mnt/glusterSD/host:vol/sd_id/images/img_id/vol_id
        is replaced with
            vol/sd_id/images/img_id/vol_id

        Arguments:
            drive (dict like): Drive description. Function modifies it
                as a side-effect.
            res (dict): drive description.

        Returns:
            Network friendly drive's path value.
        ")
                        (reparse-symbol indented_block_body) [28902 30148]))                  
                :type "class")
                nil [2363 30148]))          
      :file "clientIF.py"
      :pointmax 30148
      :fsize 30147
      :lastmodtime '(23968 6112 182982 960000)
      :unmatched-syntax '((INDENT_BLOCK 5190 . 5422) (NEWLINE 5189 . 5190) (COLON 5188 . 5189) (TRY 5098 . 5101) (AS 5184 . 5186)))
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [822 860])
            ("os" include nil nil [862 871])
            ("collections" include nil nil [872 890])
            ("threading" include nil nil [891 907])
            ("vdsm" include nil nil [909 932])
            ("vdsm.common" include nil nil [933 962])
            ("vdsm.common" include nil nil [963 994])
            ("vdsm.common" include nil nil [995 1028])
            ("vdsm.config" include nil nil [1029 1059])
            ("_PATH" variable nil nil [1062 1096])
            ("_VM" variable nil nil [1097 1118])
            ("lock" variable nil nil [1120 1143])
            ("DEFAULT_HUGEPAGESIZE" variable nil nil [1145 1225])
            ("NonContiguousMemory" type
               (:documentation "Raised when the memory is too fragmented to allocate hugepages"
                :superclasses ("Exception")
                :type "class")
                nil [1228 1339])
            ("supported" function
               (:documentation "Small cached helper to get available hugepage sizes.

    Cached as the sizes don't change in the system's runtime.

    Args:
        path: A path to the hugepages directory. (mostly for testing purposes)

    Returns:
        A list of supported hugepage sizes available on the system.
    "
                :arguments 
                  ( ("path" variable nil (reparse-symbol function_parameters) [1371 1375]))                  
                :decorators 
                  ( ("cache.memoized" function (:type "decorator") nil nil))                  )
                nil [1341 1723])
            ("alloc" function
               (:documentation "Thread *unsafe* function to allocate hugepages.

    The default size depends on the architecture:
        x86_64: 2 MiB
        POWER8: 16 MiB

    It is a responsibility of the caller to properly handle concurrency.

    Args:
        count (int): Number of huge pages to be allocated.

    Returns:
        int: The number of successfully allocated hugepages.
    "
                :arguments 
                  ( ("count" variable nil (reparse-symbol function_parameters) [1735 1740])
                    ("size" variable nil (reparse-symbol function_parameters) [1742 1746])
                    ("path" variable nil (reparse-symbol function_parameters) [1763 1767]))                  )
                nil [1725 2252])
            ("dealloc" function
               (:documentation "Thread *unsafe* function to deallocate hugepages.

    The default size depends on the architecture:
        x86_64: 2 MiB
        POWER8: 16 MiB

    It is a responsibility of the caller to properly handle concurrency.

    Args:
        count (int): Number of huge pages to be deallocated.

    Returns:
        int: The number of successfully deallocated hugepages.
    "
                :arguments 
                  ( ("count" variable nil (reparse-symbol function_parameters) [2266 2271])
                    ("size" variable nil (reparse-symbol function_parameters) [2273 2277])
                    ("path" variable nil (reparse-symbol function_parameters) [2296 2300]))                  )
                nil [2254 2796])
            ("_alloc" function
               (:documentation "Helper to actually (de)allocate hugepages, called by public facing
        methods.

    Args:
        count: Number of hugepages to allocate (can be negative)
        size: The target hugepage size (must be supported by the system)
        path: Path to the hugepages directory.

    Returns: The amount of allocated pages (can be negative,
        implicating deallocation).

    Raises:
    "
                :arguments 
                  ( ("count" variable nil (reparse-symbol function_parameters) [2809 2814])
                    ("size" variable nil (reparse-symbol function_parameters) [2816 2820])
                    ("path" variable nil (reparse-symbol function_parameters) [2822 2826]))                  )
                nil [2798 3526])
            ("state" function
               (:documentation "Read the state of hugepages on the system.

    Args:
        path: A path to the hugepages directory. (mostly for testing purposes)

    Returns:
        A (default)dict of hugepage sizes and their properties
            (e.g. free, allocated hugepages of given size)
    "
                :arguments 
                  ( ("path" variable nil (reparse-symbol function_parameters) [3538 3542]))                  )
                nil [3528 4778])
            ("calculate_required_allocation" function
               (:documentation "

    Args:
        cif: The ClientIF instance. Used as we need to iterate over VMs to
            reason about hugepages consumed by them.
        vm_hugepages: The number of hugepages VM requires.
        vm_hugepagesz: VM's hugepage size.

    It is a responsibility of the caller to properly handle concurrency.

    Returns:
        Number of hugepages to be allocated considering system resources at
        our disposal.
    "
                :arguments 
                  ( ("cif" variable nil (reparse-symbol function_parameters) [4814 4817])
                    ("vm_hugepages" variable nil (reparse-symbol function_parameters) [4819 4831])
                    ("vm_hugepagesz" variable nil (reparse-symbol function_parameters) [4833 4846]))                  )
                nil [4780 6508])
            ("calculate_required_deallocation" function
               (:documentation "

    Args:
        vm_hugepages: The number of hugepages VM requires.
        vm_hugepagesz: VM's hugepage size.

    It is a responsibility of the caller to properly handle concurrency.

    Returns:
        Number of hugepages to be deallocated while making sure not to break
        any constraints (reserved and preallocated pages).
    "
                :arguments 
                  ( ("vm_hugepages" variable nil (reparse-symbol function_parameters) [6546 6558])
                    ("vm_hugepagesz" variable nil (reparse-symbol function_parameters) [6560 6573]))                  )
                nil [6510 7664])
            ("_all_vm_hugepages" function (:arguments 
              ( ("cif" variable nil (reparse-symbol function_parameters) [7688 7691])
                ("vm_hugepages" variable nil (reparse-symbol function_parameters) [7693 7705])
                ("vm_hugepagesz" variable nil (reparse-symbol function_parameters) [7707 7720]))              ) nil [7666 7861])
            ("_preallocated_hugepages" function (:arguments 
              ( ("vm_hugepagesz" variable nil (reparse-symbol function_parameters) [7891 7904]))              ) nil [7863 8366])
            ("_reserved_hugepages" function (:arguments 
              ( ("hugepagesz" variable nil (reparse-symbol function_parameters) [8392 8402]))              ) nil [8368 8748])
            ("_cmdline_hugepagesz_to_kb" function (:arguments 
              ( ("cmdline" variable nil (reparse-symbol function_parameters) [8780 8787]))              ) nil [8750 8906])
            ("_size_from_dir" function
               (:documentation "Get the size portion of a hugepages directory.

    Example: _size_from_dir('hugepages-1048576Kb') ~> 1048576

    Args:
        path: Path to the hugepages directory.

    Returns:
        Just the hugepage size from the name of directory specified in path.
    "
                :arguments 
                  ( ("path" variable nil (reparse-symbol function_parameters) [8927 8931]))                  )
                nil [8908 9236]))          
      :file "hugepages.py"
      :pointmax 9236
      :fsize 9235
      :lastmodtime '(23968 13267 169813 286000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [821 859])
            ("__future__" include nil nil [860 891])
            ("gc" include nil nil [893 902])
            ("logging" include nil nil [903 917])
            ("os" include nil nil [918 927])
            ("threading" include nil nil [928 944])
            ("vdsm.common" include nil nil [946 980])
            ("vdsm.common" include nil nil [981 1012])
            ("config" include nil nil [1028 1041])
            ("metrics" include nil nil [1049 1063])
            ("_monitor" variable nil nil [1065 1080])
            ("start" function nil nil [1083 1333])
            ("stop" function nil nil [1335 1444])
            ("Monitor" type
               (:superclasses ("object")
                :members 
                  ( ("log" variable nil (reparse-symbol indented_block_body) [1474 1507])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1551 1576])
                            ("self" variable nil (reparse-symbol indented_block_body) [1585 1643])
                            ("self" variable nil (reparse-symbol indented_block_body) [1652 1682])
                            ("self" variable nil (reparse-symbol indented_block_body) [1691 1714])
                            ("self" variable nil (reparse-symbol indented_block_body) [1723 1739]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1526 1530])
                            ("interval" variable nil (reparse-symbol function_parameters) [1532 1540]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1513 1740])
                    ("start" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1755 1759]))                          )
                        (reparse-symbol indented_block_body) [1745 1870])
                    ("stop" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1884 1888]))                          )
                        (reparse-symbol indented_block_body) [1875 1965])
                    ("wait" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1979 1983]))                          )
                        (reparse-symbol indented_block_body) [1970 2067])
                    ("_run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2081 2085]))                          )
                        (reparse-symbol indented_block_body) [2072 2523])
                    ("_check" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2539 2543]))                          )
                        (reparse-symbol indented_block_body) [2528 2679])
                    ("_check_garbage" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2703 2707]))                          )
                        (reparse-symbol indented_block_body) [2684 3195])
                    ("_check_resources" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3221 3225]))                          )
                        (reparse-symbol indented_block_body) [3200 4049])
                    ("_report_stats" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4072 4076]))                          )
                        (reparse-symbol indented_block_body) [4054 4514]))                  
                :type "class")
                nil [1446 4514])
            ("ProcStat" type
               (:superclasses ("object")
                :members 
                  ( ("_TICKS_PER_SEC" variable nil (reparse-symbol indented_block_body) [4545 4586])
                    ("_PATH" variable nil (reparse-symbol indented_block_body) [4591 4616])
                    ("__init__" function
                       (:suite 
                          ( ("with" code nil (reparse-symbol indented_block_body) [4650 4726])
                            ("self" code nil (reparse-symbol indented_block_body) [4798 4852])
                            ("self" code nil (reparse-symbol indented_block_body) [4861 4915])
                            ("self" variable nil (reparse-symbol indented_block_body) [4924 4958])
                            ("self" code nil (reparse-symbol indented_block_body) [4967 5031]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4635 4639]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [4622 5032]))                  
                :type "class")
                nil [4516 5032])
            ("saferepr" function
               (:documentation "
    Some objects from standard library fail in repr because of buggy __repr__
    implementation. Try the builtin repr() and if it fails, warn and fallback
    to simple repr.
    "
                :arguments 
                  ( ("obj" variable nil (reparse-symbol function_parameters) [5047 5050]))                  )
                nil [5034 5461]))          
      :file "health.py"
      :pointmax 5461
      :fsize 5460
      :lastmodtime '(23972 14349 788467 778000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [821 859])
            ("\"\"\"
a proxy for vdsm.common.config.

remove when all modules import vdsm.common.config directly
\"\"\"" code nil nil [861 960])
            ("vdsm.common.config" include nil nil [962 994]))          
      :file "config.py"
      :pointmax 1015
      :fsize 1014
      :lastmodtime '(23968 6112 188983 68000)
      :unmatched-syntax nil))
  :file "!usr!lib!python3.6!site-packages!vdsm!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
