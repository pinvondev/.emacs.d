;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"
Xuanyuan系统资源管理接口
职责：
    1. 提供外部访问Xuanyuan系统逻辑资源接口
\"\"\"" code nil nil [1 59])
            ("os" include nil nil [61 70])
            ("emei.framework.client" include nil nil [72 110])
            ("rccpxuanyuan.common" include nil nil [112 153])
            ("rccpxuanyuan.common" include nil nil [154 189])
            ("rccpxuanyuan.common" include nil nil [190 231])
            ("rccpxuanyuan.common.config" include nil nil [232 291])
            ("rccpxuanyuan.storage" include nil nil [293 336])
            ("rccpxuanyuan.host.api" include nil nil [337 375])
            ("rccpxuanyuan.task" include nil nil [376 418])
            ("HA_RESOURCE_NAME" variable nil nil [421 444])
            ("POS_RESOURCE_NAME" variable nil nil [445 470])
            ("SYS_RESOURCE_NAME" variable nil nil [471 496])
            ("VM_RESOURCE_NAME" variable nil nil [497 520])
            ("TOTAL_RESOURCE_NAME" variable nil nil [521 550])
            ("_DEFAULT_RESOURCE_PLANNING" variable nil nil [551 603])
            ("ResourcePlanning" type
               (:documentation "
    系统资源预留类
    职责：
        获取RCOS系统的预留CPU和内存；
        获取P-OS服务的预留CPU和内存；
        获取高可用服务的预留CPU和内存；
    "
                :members 
                  ( ("get_info" function
                       (:documentation "
        返回主机系统预留的cpu和内存
        由三个部分组成：RCOS系统、POS服务、高可用服务
        :return:
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [781 784]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [751 1254])
                    ("" code nil (reparse-symbol indented_block_body) [1313 1343])
                    ("set_ha_resource" function
                       (:documentation "
        为服务提供接口，设置需要预留的cpu和内存，且将该值保存在内存中
        :param resource_info: 设置预留资源字典
        :type dict
        :return:
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [1368 1371])
                            ("resource" variable nil (reparse-symbol function_parameters) [1373 1381]))                          )
                        (reparse-symbol indented_block_body) [1348 2070])
                    ("" code nil (reparse-symbol indented_block_body) [2109 2163])
                    ("_get_total_resource" function nil (reparse-symbol indented_block_body) [2168 2351])
                    ("" code nil (reparse-symbol indented_block_body) [2389 2443])
                    ("_get_vm_resource" function (:arguments 
                      ( ("cls" variable nil (reparse-symbol function_parameters) [2469 2472])
                        ("resource" variable nil (reparse-symbol function_parameters) [2474 2482]))                      ) (reparse-symbol indented_block_body) [2448 2572])
                    ("_get_reserved_resource" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("resource" variable nil (reparse-symbol function_parameters) [2622 2630]))                          
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [2577 3066])
                    ("" code nil (reparse-symbol indented_block_body) [3104 3158])
                    ("_get_rcos_resource" function
                       (:documentation "
        获取rcos系统预留的cpu和内存
        :return:
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [3186 3189]))                          )
                        (reparse-symbol indented_block_body) [3163 3839])
                    ("" code nil (reparse-symbol indented_block_body) [3877 3931])
                    ("_get_pos_resource" function
                       (:documentation "
        获取pos服务预留的cpu和内存
        :return:
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [3958 3961]))                          )
                        (reparse-symbol indented_block_body) [3936 4416])
                    ("" code nil (reparse-symbol indented_block_body) [4454 4502])
                    ("_get_ha_resource" function
                       (:documentation "
        获取高可用服务预留的cpu和内存
        :return:
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [4528 4531]))                          )
                        (reparse-symbol indented_block_body) [4507 4689])
                    ("_make_url" function
                       (:documentation "
        构造Restfule通信的url
        :param addr: IP地址
        :param port: 端口
        :param version: 版本号
        :param resource:
        :param filter_key:
        :param filter_value:
        :return:
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [5033 5036])
                            ("addr" variable nil (reparse-symbol function_parameters) [5038 5042])
                            ("port" variable nil (reparse-symbol function_parameters) [5044 5048])
                            ("version" variable nil (reparse-symbol function_parameters) [5050 5057])
                            ("resource" variable nil (reparse-symbol function_parameters) [5059 5067])
                            ("filter_key" variable nil (reparse-symbol function_parameters) [5069 5079])
                            ("filter_value" variable nil (reparse-symbol function_parameters) [5081 5093]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [5002 5440])
                    ("_search_ha_resource" function
                       (:documentation "
        使用高可用提供的Restful接口，查询预留的cpu和内存
        :return:
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [5487 5490]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [5446 7210])
                    ("_gb_to_byte" function
                       (:documentation " 将 gb 转换成 byte "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [7247 7250])
                            ("size_gb" variable nil (reparse-symbol function_parameters) [7252 7259]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [7214 7326]))                  
                :type "class")
                nil [606 7326]))          
      :file "resource.py"
      :pointmax 7326
      :fsize 7927
      :lastmodtime '(23974 46529 407906 180000)
      :unmatched-syntax nil))
  :file "!usr!lib!python3.6!site-packages!project!rccpxuanyuan!rccpxuanyuan!xuanyuan_resource!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
