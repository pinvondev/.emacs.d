;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode makefile-automake-mode
      :tags 
        '( ("$(top_srcdir)/build-aux/Makefile.subs" include nil nil [818 864])
            ("SUBDIRS" variable (:default-value ("network")) nil [865 883])
            ("vdsmcommondir" variable (:default-value ("$(vdsmpylibdir)/common")) nil [884 923])
            ("nodist_vdsmcommon_PYTHON" variable (:default-value ("$(srcdir)/config.py" "$(srcdir)/constants.py" "$(srcdir)/dsaversion.py" "$(NULL)")) nil [924 1038])
            ("dist_vdsmcommon_PYTHON" variable (:default-value ("$(filter-out $(nodist_vdsmcommon_PYTHON), $(wildcard $(srcdir)/*.py))")) nil [1039 1137])
            ("EXTRA_DIST" variable (:default-value ("config.py.in" "constants.py.in" "dsaversion.py.in" "$(NULL)")) nil [1147 1226])
            ("CLEANFILES" variable (:default-value ("$(nodist_vdsmcommon_PYTHON)" "$(NULL)")) nil [1227 1282]))          
      :file "Makefile.am"
      :pointmax 1336
      :fsize 1335
      :lastmodtime '(23967 64130 329741 662000)
      :unmatched-syntax '((semantic-list 1329 . 1335) (punctuation 1328 . 1329) (semantic-list 1298 . 1324) (punctuation 1297 . 1298) (punctuation 1292 . 1293) (symbol 1283 . 1292) (bol 1283 . 1283) (shell-command 1138 . 1145) (bol 1137 . 1137)))
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [821 859])
            ("__future__" include nil nil [860 891])
            ("logging" include nil nil [893 907])
            ("collections" include nil nil [909 943])
            ("decorator" include nil nil [945 976])
            ("vdsm.common.threadlocal" include nil nil [978 1018])
            ("exception" include nil nil [1027 1043])
            ("logutils" include nil nil [1051 1066])
            ("response" include nil nil [1074 1089])
            ("_log" variable nil nil [1092 1123])
            ("Context" variable nil nil [1126 1194])
            ("logged" function (:arguments 
              ( ("on" variable nil (reparse-symbol function_parameters) [1208 1210]))              ) nil [1197 1700])
            ("context_string" function (:arguments 
              ( ("api_object" variable nil (reparse-symbol function_parameters) [1721 1731]))              ) nil [1702 2593])
            ("guard" function
               (:documentation "
    Decorator for methods that can be called only under certain conditions.

    Before the method is called, guarding_functions are invoked in their order
    with the same arguments as the method.  They can check for validity of the
    call and raise an exception if the call shouldn't be permitted.

    :param guarding_functions: functions to call with the decorated method
      arguments before the decorated method is actually called
    "
                :arguments 
                  ( ("guarding_functions" variable nil (reparse-symbol function_parameters) [2605 2624]))                  )
                nil [2595 3262])
            ("method" function
               (:documentation "
    Decorate an instance method, and return a response according to the
    outcome of the call.

    If the method returns None, return a plain success response.
    If the method wants to augment the success response, it could return
    a dict. The dict items will be added to the success response.
    The method could override the success response message this way.

    If the method raises a VdsmException or one subclass, the decorator
    will produce the corresponding error response.
    If the method raises any other exception, the decorator will produce a
    general exception response with the details of the original error.
    "
                :arguments 
                  ( ("func" variable nil (reparse-symbol function_parameters) [3286 3290])
                    ("args" variable nil (reparse-symbol function_parameters) [3292 3297])
                    ("kwargs" variable nil (reparse-symbol function_parameters) [3299 3307]))                  
                :decorators 
                  ( ("decorator" function (:type "decorator") nil nil))                  )
                nil [3264 4864]))          
      :file "api.py"
      :pointmax 4864
      :fsize 4863
      :lastmodtime '(23967 64130 330741 686000)
      :unmatched-syntax '((INDENT_BLOCK 4451 . 4589) (NEWLINE 4450 . 4451) (COLON 4449 . 4450) (AS 4445 . 4447) (EXCEPT 4428 . 4434) (INDENT_BLOCK 4128 . 4424) (NEWLINE 4127 . 4128) (COLON 4126 . 4127) (TRY 4046 . 4049) (AS 4122 . 4124) (INDENT_BLOCK 1506 . 1595) (NEWLINE 1505 . 1506) (COLON 1504 . 1505) (TRY 1428 . 1431) (AS 1498 . 1500) (FROM 1067 . 1071) (PERIOD 1072 . 1073) (FROM 1044 . 1048) (PERIOD 1049 . 1050) (FROM 1020 . 1024) (PERIOD 1025 . 1026)))
    (semanticdb-table "semanticdb-table"
      :file "threadlocal.py"
      :fsize 972
      :lastmodtime '(23967 64130 338741 878000))
    (semanticdb-table "semanticdb-table"
      :file "exception.py"
      :fsize 10643
      :lastmodtime '(23967 64130 332741 734000))
    (semanticdb-table "semanticdb-table"
      :file "logutils.py"
      :fsize 13280
      :lastmodtime '(23967 64130 335741 806000))
    (semanticdb-table "semanticdb-table"
      :file "response.py"
      :fsize 2770
      :lastmodtime '(23967 64130 337741 854000))
    (semanticdb-table "semanticdb-table"
      :file "time.py"
      :fsize 3338
      :lastmodtime '(23967 64130 338741 878000))
    (semanticdb-table "semanticdb-table"
      :file "define.py"
      :fsize 5044
      :lastmodtime '(23967 64130 332741 734000)))
  :file "!usr!lib!python2.7!site-packages!vdsm!lib!vdsm!common!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
