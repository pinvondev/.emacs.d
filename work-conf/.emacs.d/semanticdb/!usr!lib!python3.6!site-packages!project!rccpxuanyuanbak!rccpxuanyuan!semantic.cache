;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"
rccpxuanyuand xuanyuan服务主入口，创建xuanyuan服务管理类和多线程任务
\"\"\"" code nil nil [321 378])
            ("__future__" include nil nil [380 418])
            ("__future__" include nil nil [419 456])
            ("os" include nil nil [471 480])
            ("getpass" include nil nil [497 511])
            ("pwd" include nil nil [512 522])
            ("grp" include nil nil [523 533])
            ("threading" include nil nil [534 550])
            ("syslog" include nil nil [551 564])
            ("resource" include nil nil [565 580])
            ("tempfile" include nil nil [581 596])
            ("logging" include nil nil [598 612])
            ("rccpxuanyuan" include nil nil [614 648])
            ("rccpxuanyuan" include nil nil [649 681])
            ("rccpxuanyuan.common" include nil nil [682 722])
            ("rccpxuanyuan.common" include nil nil [723 765])
            ("rccpxuanyuan.common" include nil nil [766 806])
            ("rccpxuanyuan.config" include nil nil [936 974])
            ("rccpxuanyuan.rpc.xuanyuan_rpcserver" include nil nil [1154 1219])
            ("rccpxuanyuan.task.task_manager" include nil nil [1220 1274])
            ("rccpxuanyuan.client_if" include nil nil [1275 1318])
            ("rccpxuanyuan" include nil nil [1319 1359])
            ("FatalError" type
               (:documentation " Raised when rccpxuanyuan fail to start "
                :superclasses ("Exception")
                :type "class")
                nil [1362 1442])
            ("serve_clients" function
               (:documentation "
    Xuanyuan服务初始化接口，完成服务中对象、任务、服务的初始化，
    并在异常后进行销毁。
    params log: log管理对象
    "
                :arguments 
                  ( ("log" variable nil (reparse-symbol function_parameters) [1462 1465]))                  )
                nil [1444 1665])
            ("run" function (:documentation "
    运行服务
    ") nil [1945 3035])
            ("__assert_log_permission" function nil nil [4183 4660])
            ("__assert_single_instance" function nil nil [4662 4886])
            ("__assert_rccpxuanyuan_user" function nil nil [4888 5392])
            ("__assert_sudoer_permissions" function nil nil [5394 6040])
            ("__set_cpu_affinity" function nil nil [6042 6752])
            ("main" function nil nil [6754 7208]))          
      :file "rccpxuanyuand.py"
      :pointmax 7208
      :fsize 7333
      :lastmodtime '(23938 14146 516532 64000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :file "config.py"
      :fsize 1038
      :lastmodtime '(23935 18195 40690 124000))
    (semanticdb-table "semanticdb-table"
      :file "client_if.py"
      :fsize 34491
      :lastmodtime '(23935 18194 730684 813000))
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"
api.py主机资源管理子系统对外接口层
职责：
    1. 显示声明子系统对外接口
    2. 完成接口入参反序列化、合法性检查、回参序列化过程
    3. 调用内部接口完成接口功能
\"\"\"" code nil nil [1 104])
            ("__future__" include nil nil [106 144])
            ("logging" include nil nil [146 160])
            ("rccpxuanyuan.network.errors" include nil nil [162 220])
            ("rccpxuanyuan" include nil nil [221 258])
            ("rccpxuanyuan.client_if" include nil nil [259 302])
            ("rccpxuanyuan.common" include nil nil [303 338])
            ("rccpxuanyuan.common" include nil nil [339 380])
            ("rccpxuanyuan.common" include nil nil [381 430])
            ("rccpxuanyuan.common" include nil nil [431 472])
            ("rccpxuanyuan.common" include nil nil [473 524])
            ("rccpxuanyuan.common" include nil nil [525 566])
            ("rccpxuanyuan.common.parameter" include nil nil [567 620])
            ("rccpxuanyuan.virt.interface" include nil nil [621 665])
            ("rccpxuanyuan.notify.notify" include nil nil [666 721])
            ("USER_SHUTDOWN_MESSAGE" variable nil nil [790 833])
            ("SHUTDOWN" variable nil nil [834 855])
            ("DESTROY" variable nil nil [856 875])
            ("REBOOT" variable nil nil [876 893])
            ("throttledlog" code nil nil [896 939])
            ("APIBase" type
               (:documentation "
    APIBase接口分组基类，设置子接口类功能资源和机制
    "
                :members 
                  ( ("ctorArgs" variable nil (reparse-symbol indented_block_body) [1010 1023])
                    ("__init__" function
                       (:suite 
                          ( ("log" variable nil (reparse-symbol indented_block_body) [1058 1088])
                            ("self" variable nil (reparse-symbol indented_block_body) [1097 1139])
                            ("self" variable nil (reparse-symbol indented_block_body) [1148 1172]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1042 1046]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1029 1173]))                  
                :type "class")
                nil [942 1173])
            ("GlobalAPI" type
               (:documentation "
    GlobalAPI 封装主机、服务管理外部调用接口，调用服务管理类、主机管理包
    主要职责：
        1. 接口的分组
        2. 接口入参反序列化
        3. 入参检查
        4. 同步接口和异步接口划分
        5. 返回值序列化
    "
                :superclasses ("APIBase")
                :members 
                  ( ("ctorArgs" variable nil (reparse-symbol indented_block_body) [1437 1450])
                    ("__init__" function
                       (:suite 
                          ( ("APIBase" code nil (reparse-symbol indented_block_body) [1484 1506]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1469 1473]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1456 1507])
                    ("" code nil (reparse-symbol indented_block_body) [1569 1589])
                    ("" code nil (reparse-symbol indented_block_body) [1605 1624])
                    ("get_mainboard_info" function (:documentation "
        查询服务器主板信息外部接口
        ") (reparse-symbol indented_block_body) [1629 1767])
                    ("" code nil (reparse-symbol indented_block_body) [1802 1822])
                    ("" code nil (reparse-symbol indented_block_body) [1838 1857])
                    ("get_cpu_info" function (:documentation "
        查询服务器CPU信息外部接口
        ") (reparse-symbol indented_block_body) [1862 1989])
                    ("" code nil (reparse-symbol indented_block_body) [2024 2044])
                    ("" code nil (reparse-symbol indented_block_body) [2060 2079])
                    ("get_mem_info" function (:documentation "
        查询服务器Mem信息外部接口
        ") (reparse-symbol indented_block_body) [2084 2211])
                    ("" code nil (reparse-symbol indented_block_body) [2246 2266])
                    ("" code nil (reparse-symbol indented_block_body) [2282 2301])
                    ("get_disk_info" function (:documentation "
        查询服务器Disk信息外部接口
        ") (reparse-symbol indented_block_body) [2306 2436])
                    ("" code nil (reparse-symbol indented_block_body) [2453 2473])
                    ("" code nil (reparse-symbol indented_block_body) [2489 2508])
                    ("get_service_info" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2534 2538]))                          
                        :documentation "
        查询xuanyuan服务信息外部接口
        ")
                        (reparse-symbol indented_block_body) [2513 2850])
                    ("" code nil (reparse-symbol indented_block_body) [2867 2887])
                    ("" code nil (reparse-symbol indented_block_body) [2903 2922])
                    ("add_host" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2940 2944])
                            ("platform_id" variable nil (reparse-symbol function_parameters) [2946 2957])
                            ("vip" variable nil (reparse-symbol function_parameters) [2959 2962])
                            ("servers" variable nil (reparse-symbol function_parameters) [2964 2971]))                          
                        :documentation "
        设置主机纳管外部接口
        ")
                        (reparse-symbol indented_block_body) [2927 3241])
                    ("" code nil (reparse-symbol indented_block_body) [3258 3278])
                    ("" code nil (reparse-symbol indented_block_body) [3294 3313])
                    ("remove_host" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3334 3338])
                            ("platform_id" variable nil (reparse-symbol function_parameters) [3340 3351]))                          
                        :documentation "
        设置主机脱管外部接口
        ")
                        (reparse-symbol indented_block_body) [3318 3532])
                    ("" code nil (reparse-symbol indented_block_body) [3550 3570])
                    ("" code nil (reparse-symbol indented_block_body) [3586 3605])
                    ("reset_host_management" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3636 3640]))                          
                        :documentation "
        重置主机纳管状态: 设置主机进入脱管状态
        ")
                        (reparse-symbol indented_block_body) [3610 3739])
                    ("" code nil (reparse-symbol indented_block_body) [3756 3776])
                    ("" code nil (reparse-symbol indented_block_body) [3792 3811])
                    ("get_messaging_ip" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3837 3841]))                          
                        :documentation "
        查询xuanyuan服务使用消息系统IP信息外部接口
        ")
                        (reparse-symbol indented_block_body) [3816 3967])
                    ("" code nil (reparse-symbol indented_block_body) [3984 4004])
                    ("" code nil (reparse-symbol indented_block_body) [4020 4039])
                    ("get_caps" function
                       (:parent "dummy"
                        :decorators 
                          ( ("callutils.time_stamp" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4083 4087]))                          
                        :documentation "
        查询服务器服务信息汇总外部接口
        ")
                        (reparse-symbol indented_block_body) [4044 5122])
                    ("" code nil (reparse-symbol indented_block_body) [5157 5177])
                    ("" code nil (reparse-symbol indented_block_body) [5193 5212])
                    ("shutdown" function (:documentation "
        关闭服务器外部接口
        ") (reparse-symbol indented_block_body) [5217 5324])
                    ("" code nil (reparse-symbol indented_block_body) [5359 5379])
                    ("" code nil (reparse-symbol indented_block_body) [5395 5414])
                    ("reboot" function (:documentation "
        重启服务器外部接口
        ") (reparse-symbol indented_block_body) [5419 5522])
                    ("" code nil (reparse-symbol indented_block_body) [5556 5576])
                    ("" code nil (reparse-symbol indented_block_body) [5592 5611])
                    ("set_ntp" function
                       (:documentation "
        设置 NTP
        param servers: NTP 同步源
        type servers: list
        param threshold: NTP 误差阈值
        type threshold: float
        "
                        :arguments 
                          ( ("servers" variable nil (reparse-symbol function_parameters) [5628 5635])
                            ("threshold" variable nil (reparse-symbol function_parameters) [5642 5651]))                          )
                        (reparse-symbol indented_block_body) [5616 5886])
                    ("" code nil (reparse-symbol indented_block_body) [5921 5941])
                    ("" code nil (reparse-symbol indented_block_body) [5957 5976])
                    ("get_ntp_info" function (:documentation "
        获取 NTP 信息, 包括同步源和阈值
        ") (reparse-symbol indented_block_body) [5981 6113])
                    ("" code nil (reparse-symbol indented_block_body) [6148 6168])
                    ("" code nil (reparse-symbol indented_block_body) [6184 6203])
                    ("open_ntp" function (:documentation "
        启动 NTP 服务
        ") (reparse-symbol indented_block_body) [6208 6315])
                    ("" code nil (reparse-symbol indented_block_body) [6350 6370])
                    ("" code nil (reparse-symbol indented_block_body) [6386 6405])
                    ("close_ntp" function (:documentation "
        关闭 NTP 服务
        ") (reparse-symbol indented_block_body) [6410 6518])
                    ("" code nil (reparse-symbol indented_block_body) [6553 6573])
                    ("" code nil (reparse-symbol indented_block_body) [6589 6608])
                    ("set_ntp" function
                       (:documentation "
        设置 NTP
        param servers: NTP 同步源
        type servers: list
        param threshold: NTP 误差阈值
        type threshold: float
        "
                        :arguments 
                          ( ("servers" variable nil (reparse-symbol function_parameters) [6625 6632])
                            ("threshold" variable nil (reparse-symbol function_parameters) [6639 6648]))                          )
                        (reparse-symbol indented_block_body) [6613 6883])
                    ("" code nil (reparse-symbol indented_block_body) [6918 6938])
                    ("" code nil (reparse-symbol indented_block_body) [6954 6973])
                    ("get_ntp_info" function (:documentation "
        获取 NTP 信息, 包括同步源和阈值
        ") (reparse-symbol indented_block_body) [6978 7110])
                    ("" code nil (reparse-symbol indented_block_body) [7145 7165])
                    ("" code nil (reparse-symbol indented_block_body) [7181 7200])
                    ("open_ntp" function (:documentation "
        启动 NTP 服务
        ") (reparse-symbol indented_block_body) [7205 7312])
                    ("" code nil (reparse-symbol indented_block_body) [7347 7367])
                    ("" code nil (reparse-symbol indented_block_body) [7383 7402])
                    ("close_ntp" function (:documentation "
        关闭 NTP 服务
        ") (reparse-symbol indented_block_body) [7407 7515])
                    ("" code nil (reparse-symbol indented_block_body) [17053 17073])
                    ("" code nil (reparse-symbol indented_block_body) [17089 17111])
                    ("get_nics_info" function
                       (:documentation "
        Report host nics info.
        "
                        :arguments 
                          ( ("nic_list" variable nil (reparse-symbol function_parameters) [17134 17142]))                          )
                        (reparse-symbol indented_block_body) [17116 17304])
                    ("" code nil (reparse-symbol indented_block_body) [17339 17359])
                    ("" code nil (reparse-symbol indented_block_body) [17375 17397])
                    ("get_bonds_info" function
                       (:documentation "
        Report host bonds info.
        "
                        :arguments 
                          ( ("bond_list" variable nil (reparse-symbol function_parameters) [17421 17430]))                          )
                        (reparse-symbol indented_block_body) [17402 17666])
                    ("" code nil (reparse-symbol indented_block_body) [17701 17721])
                    ("" code nil (reparse-symbol indented_block_body) [17737 17759])
                    ("get_net_dev_info" function (:documentation "
        Report host net devices info.
        ") (reparse-symbol indented_block_body) [17764 18027])
                    ("" code nil (reparse-symbol indented_block_body) [18044 18064])
                    ("" code nil (reparse-symbol indented_block_body) [18080 18102])
                    ("create_bond" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18123 18127])
                            ("bond_name" variable nil (reparse-symbol function_parameters) [18129 18138])
                            ("mode" variable nil (reparse-symbol function_parameters) [18140 18144])
                            ("slaves" variable nil (reparse-symbol function_parameters) [18146 18152]))                          
                        :documentation "create a new bond device")
                        (reparse-symbol indented_block_body) [18107 18701])
                    ("" code nil (reparse-symbol indented_block_body) [18718 18738])
                    ("" code nil (reparse-symbol indented_block_body) [18754 18776])
                    ("remove_bonds" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18798 18802])
                            ("bond_list" variable nil (reparse-symbol function_parameters) [18804 18813]))                          
                        :documentation "remove bond devices.")
                        (reparse-symbol indented_block_body) [18781 19346])
                    ("" code nil (reparse-symbol indented_block_body) [19363 19383])
                    ("" code nil (reparse-symbol indented_block_body) [19399 19421])
                    ("modify_bond" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19442 19446])
                            ("bond_name" variable nil (reparse-symbol function_parameters) [19448 19457])
                            ("mode" variable nil (reparse-symbol function_parameters) [19459 19463])
                            ("slaves" variable nil (reparse-symbol function_parameters) [19470 19476]))                          
                        :documentation "修改bond设备的属性")
                        (reparse-symbol indented_block_body) [19426 20018])
                    ("" code nil (reparse-symbol indented_block_body) [20035 20055])
                    ("" code nil (reparse-symbol indented_block_body) [20071 20093])
                    ("set_dev_ip" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20113 20117])
                            ("dev_name" variable nil (reparse-symbol function_parameters) [20119 20127])
                            ("dev_type" variable nil (reparse-symbol function_parameters) [20129 20137])
                            ("address" variable nil (reparse-symbol function_parameters) [20139 20146])
                            ("netmask" variable nil (reparse-symbol function_parameters) [20148 20155])
                            ("gateway" variable nil (reparse-symbol function_parameters) [20157 20164]))                          
                        :documentation "设置网络设备的IPv4地址.")
                        (reparse-symbol indented_block_body) [20098 20782])
                    ("" code nil (reparse-symbol indented_block_body) [20799 20819])
                    ("" code nil (reparse-symbol indented_block_body) [20835 20857])
                    ("set_dev_ipv6" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20879 20883])
                            ("dev_name" variable nil (reparse-symbol function_parameters) [20885 20893])
                            ("dev_type" variable nil (reparse-symbol function_parameters) [20895 20903])
                            ("address" variable nil (reparse-symbol function_parameters) [20905 20912])
                            ("gateway" variable nil (reparse-symbol function_parameters) [20914 20921]))                          
                        :documentation "设置网络设备的IPv6地址.")
                        (reparse-symbol indented_block_body) [20862 21534])
                    ("" code nil (reparse-symbol indented_block_body) [21551 21571])
                    ("" code nil (reparse-symbol indented_block_body) [21587 21609])
                    ("create_provider_ovs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21638 21642])
                            ("ovs_name" variable nil (reparse-symbol function_parameters) [21644 21652])
                            ("slave" variable nil (reparse-symbol function_parameters) [21654 21659])
                            ("vlan" variable nil (reparse-symbol function_parameters) [21661 21665]))                          
                        :documentation "创建provider ovs桥.")
                        (reparse-symbol indented_block_body) [21614 22209])
                    ("" code nil (reparse-symbol indented_block_body) [22226 22246])
                    ("" code nil (reparse-symbol indented_block_body) [22262 22284])
                    ("modify_provider_ovs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22313 22317])
                            ("ovs_name" variable nil (reparse-symbol function_parameters) [22319 22327])
                            ("slave" variable nil (reparse-symbol function_parameters) [22329 22334]))                          
                        :documentation "修个provider ovs的属性.")
                        (reparse-symbol indented_block_body) [22289 22869])
                    ("" code nil (reparse-symbol indented_block_body) [22886 22906])
                    ("" code nil (reparse-symbol indented_block_body) [22922 22944])
                    ("remove_provider_ovs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22973 22977])
                            ("ovs_list" variable nil (reparse-symbol function_parameters) [22979 22987]))                          
                        :documentation "删除provider ovs.")
                        (reparse-symbol indented_block_body) [22949 23512])
                    ("" code nil (reparse-symbol indented_block_body) [23547 23567])
                    ("" code nil (reparse-symbol indented_block_body) [23583 23605])
                    ("get_host_dns" function (:documentation "
        get host dns list info.
        ") (reparse-symbol indented_block_body) [23610 23843])
                    ("" code nil (reparse-symbol indented_block_body) [23861 23881])
                    ("" code nil (reparse-symbol indented_block_body) [23897 23919])
                    ("set_host_dns" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23941 23945])
                            ("dns_list" variable nil (reparse-symbol function_parameters) [23947 23955]))                          
                        :documentation "设置主机DNS信息.")
                        (reparse-symbol indented_block_body) [23924 24524])
                    ("" code nil (reparse-symbol indented_block_body) [24559 24579])
                    ("" code nil (reparse-symbol indented_block_body) [24595 24615])
                    ("connect_iscsi_tgt" function
                       (:documentation "创建iscsi连接"
                        :arguments 
                          ( ("iqn" variable nil (reparse-symbol function_parameters) [24642 24645])
                            ("ip_addr" variable nil (reparse-symbol function_parameters) [24647 24654])
                            ("username" variable nil (reparse-symbol function_parameters) [24656 24664])
                            ("password" variable nil (reparse-symbol function_parameters) [24695 24703])
                            ("port" variable nil (reparse-symbol function_parameters) [24708 24712]))                          )
                        (reparse-symbol indented_block_body) [24620 24862])
                    ("" code nil (reparse-symbol indented_block_body) [24897 24917])
                    ("" code nil (reparse-symbol indented_block_body) [24933 24953])
                    ("disconnect_iscsi_tgt" function
                       (:documentation "断开iscsi连接"
                        :arguments 
                          ( ("iqn" variable nil (reparse-symbol function_parameters) [24983 24986])
                            ("ip_addr" variable nil (reparse-symbol function_parameters) [24988 24995])
                            ("port" variable nil (reparse-symbol function_parameters) [24997 25001]))                          )
                        (reparse-symbol indented_block_body) [24958 25114])
                    ("" code nil (reparse-symbol indented_block_body) [25149 25169])
                    ("" code nil (reparse-symbol indented_block_body) [25185 25205])
                    ("get_iscsi_luns" function (:documentation "
        获取本机的iscsi luns
        :return:
        ") (reparse-symbol indented_block_body) [25210 25358])
                    ("" code nil (reparse-symbol indented_block_body) [25393 25413])
                    ("" code nil (reparse-symbol indented_block_body) [25429 25454])
                    ("deploy_pos_node" function
                       (:documentation "部署P-OS服务，新增一个存储节点"
                        :arguments 
                          ( ("cluster_id" variable nil (reparse-symbol function_parameters) [25479 25489])
                            ("node_id" variable nil (reparse-symbol function_parameters) [25491 25498])
                            ("zk_id" variable nil (reparse-symbol function_parameters) [25500 25505])
                            ("sip" variable nil (reparse-symbol function_parameters) [25507 25510])
                            ("cache_disks" variable nil (reparse-symbol function_parameters) [25536 25547])
                            ("joined_nodes" variable nil (reparse-symbol function_parameters) [25549 25561]))                          )
                        (reparse-symbol indented_block_body) [25459 25722])
                    ("" code nil (reparse-symbol indented_block_body) [25757 25777])
                    ("" code nil (reparse-symbol indented_block_body) [25793 25818])
                    ("undeploy_pos_node" function
                       (:documentation "卸载P-OS服务，删除一个存储节点"
                        :arguments 
                          ( ("cluster_id" variable nil (reparse-symbol function_parameters) [25845 25855])
                            ("node_id" variable nil (reparse-symbol function_parameters) [25857 25864]))                          )
                        (reparse-symbol indented_block_body) [25823 25975]))                  
                :type "class")
                nil [1242 25975])
            ("VirtAPI" type
               (:documentation "虚机外部接口"
                :superclasses ("APIBase")
                :members 
                  ( ("ctorArgs" variable nil (reparse-symbol indented_block_body) [26022 26035])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"通过基类的初始化方法, 获取 log 对象和 cif 对象\"\"\"" code nil (reparse-symbol indented_block_body) [26069 26104])
                            ("APIBase" code nil (reparse-symbol indented_block_body) [26113 26135])
                            ("self" variable nil (reparse-symbol indented_block_body) [26144 26161]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26054 26058]))                          
                        :documentation "通过基类的初始化方法, 获取 log 对象和 cif 对象"
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [26041 26162])
                    ("" code nil (reparse-symbol indented_block_body) [26179 26192])
                    ("" code nil (reparse-symbol indented_block_body) [26208 26225])
                    ("start_vm" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26243 26247])
                            ("conf" variable nil (reparse-symbol function_parameters) [26249 26253]))                          
                        :documentation "创建虚机")
                        (reparse-symbol indented_block_body) [26230 26310])
                    ("" code nil (reparse-symbol indented_block_body) [26328 26341])
                    ("" code nil (reparse-symbol indented_block_body) [26357 26374])
                    ("shutdown_vm" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26395 26399])
                            ("vm_id" variable nil (reparse-symbol function_parameters) [26401 26406])
                            ("force" variable nil (reparse-symbol function_parameters) [26408 26413]))                          
                        :documentation "虚机关闭, 虚机断电
        @vm_id: string, required
        @force: bool, optional, default=False
        ")
                        (reparse-symbol indented_block_body) [26379 26715])
                    ("" code nil (reparse-symbol indented_block_body) [26732 26745])
                    ("" code nil (reparse-symbol indented_block_body) [26761 26778])
                    ("reboot_vm" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26797 26801])
                            ("vm_id" variable nil (reparse-symbol function_parameters) [26803 26808]))                          
                        :documentation "虚机重启
        @vm_id: string, required
        ")
                        (reparse-symbol indented_block_body) [26783 26915])
                    ("" code nil (reparse-symbol indented_block_body) [26932 26945])
                    ("" code nil (reparse-symbol indented_block_body) [26961 26978])
                    ("change_cd" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26997 27001])
                            ("vm_id" variable nil (reparse-symbol function_parameters) [27003 27008])
                            ("dev_id" variable nil (reparse-symbol function_parameters) [27010 27016])
                            ("file_path" variable nil (reparse-symbol function_parameters) [27018 27027]))                          
                        :documentation "修改虚拟光驱设备
        @vm_id: string, required
        @dev_id: string, required
        @file_path: string, required
        ")
                        (reparse-symbol indented_block_body) [26983 27375]))                  
                :type "class")
                nil [25977 27375]))          
      :file "API.py"
      :pointmax 27375
      :fsize 28418
      :lastmodtime '(23938 14983 245716 465000)
      :unmatched-syntax '((INDENT_BLOCK 24474 . 24524) (NEWLINE 24473 . 24474) (COLON 24472 . 24473) (FINALLY 24465 . 24472) (INDENT_BLOCK 23462 . 23512) (NEWLINE 23461 . 23462) (COLON 23460 . 23461) (FINALLY 23453 . 23460) (INDENT_BLOCK 23374 . 23445) (NEWLINE 23373 . 23374) (COLON 23372 . 23373) (TRY 23215 . 23218) (AS 23368 . 23370) (INDENT_BLOCK 22819 . 22869) (NEWLINE 22818 . 22819) (COLON 22817 . 22818) (FINALLY 22810 . 22817) (INDENT_BLOCK 22731 . 22802) (NEWLINE 22730 . 22731) (COLON 22729 . 22730) (TRY 22565 . 22568) (AS 22725 . 22727) (INDENT_BLOCK 22159 . 22209) (NEWLINE 22158 . 22159) (COLON 22157 . 22158) (FINALLY 22150 . 22157) (INDENT_BLOCK 22071 . 22142) (NEWLINE 22070 . 22071) (COLON 22069 . 22070) (TRY 21899 . 21902) (AS 22065 . 22067) (INDENT_BLOCK 21484 . 21534) (NEWLINE 21483 . 21484) (COLON 21482 . 21483) (FINALLY 21475 . 21482) (INDENT_BLOCK 21396 . 21467) (NEWLINE 21395 . 21396) (COLON 21394 . 21395) (TRY 21153 . 21156) (AS 21390 . 21392) (INDENT_BLOCK 20732 . 20782) (NEWLINE 20731 . 20732) (COLON 20730 . 20731) (FINALLY 20723 . 20730) (INDENT_BLOCK 20644 . 20715) (NEWLINE 20643 . 20644) (COLON 20642 . 20643) (TRY 20396 . 20399) (AS 20638 . 20640) (INDENT_BLOCK 19968 . 20018) (NEWLINE 19967 . 19968) (COLON 19966 . 19967) (FINALLY 19959 . 19966) (INDENT_BLOCK 19880 . 19951) (NEWLINE 19879 . 19880) (COLON 19878 . 19879) (TRY 19705 . 19708) (AS 19874 . 19876) (INDENT_BLOCK 19296 . 19346) (NEWLINE 19295 . 19296) (COLON 19294 . 19295) (FINALLY 19287 . 19294) (INDENT_BLOCK 19208 . 19279) (NEWLINE 19207 . 19208) (COLON 19206 . 19207) (TRY 19046 . 19049) (AS 19202 . 19204) (INDENT_BLOCK 18651 . 18701) (NEWLINE 18650 . 18651) (COLON 18649 . 18650) (FINALLY 18642 . 18649) (INDENT_BLOCK 18563 . 18634) (NEWLINE 18562 . 18563) (COLON 18561 . 18562) (TRY 18388 . 18391) (AS 18557 . 18559) (NAME 4822 . 4832) (IF 4862 . 4864) (ELSE 4876 . 4880) (NAME 4689 . 4698) (IF 4726 . 4728) (ELSE 4739 . 4743))))
  :file "!usr!lib!python3.6!site-packages!project!rccpxuanyuanbak!rccpxuanyuan!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
