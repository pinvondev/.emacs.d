;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"
时钟同步管理
\"\"\"" code nil nil [1 15])
            ("re" include nil nil [17 26])
            ("logging" include nil nil [27 41])
            ("logging" include nil nil [43 80])
            ("rccpxuanyuan" include nil nil [81 115])
            ("rccpxuanyuan.common" include nil nil [116 156])
            ("rccpxuanyuan.common" include nil nil [157 198])
            ("rccpxuanyuan.common.config" include nil nil [199 254])
            ("rccpxuanyuan.host.api" include nil nil [255 293])
            ("FatalError" type
               (:documentation " Raised error when cannot config "
                :superclasses ("Exception")
                :type "class")
                nil [295 368])
            ("NTP_CONF" variable nil nil [374 400])
            ("NTP_DAEMON" variable nil nil [401 435])
            ("THRESHOLD" variable nil nil [436 453])
            ("LOGGERCONFFILE" code nil nil [454 516])
            ("LOG" variable nil nil [519 549])
            ("NTPClientManager" type
               (:documentation "
    NTP 客户端管理类
    "
                :members 
                  ( ("_is_running" function
                       (:typemodifiers ("static")
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          
                        :documentation "
        检查 NTP 是否已开启
        ")
                        (reparse-symbol indented_block_body) [1357 1621])
                    ("open_ntp" function
                       (:documentation "
        开启 ntp 服务
        1. 对比时间差, 相差较少时使用 ntpd 调整;
           相差较多时使用 nptdate 更新
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [1656 1659]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [1626 1953])
                    ("close_ntp" function
                       (:typemodifiers ("static")
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          
                        :documentation "
        关闭 ntp 服务
        ")
                        (reparse-symbol indented_block_body) [1958 2088])
                    ("_update" function
                       (:documentation "
        直接更新
        同步源的读取顺序: 实际使用的源; 配置文件中的源;
        如果以上两个地方都未找到同步源, 抛出异常
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [2122 2125]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [2093 3053])
                    ("_get_deviation" function
                       (:typemodifiers ("static")
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("server" variable nil (reparse-symbol function_parameters) [3095 3101]))                          
                        :documentation "
        首先判断同步源是否真实存在, 然后获取时间差
        ")
                        (reparse-symbol indented_block_body) [3058 3385])
                    ("set_servers" function
                       (:documentation "
        设置 NTP 同步源
        设置过程中对 ntp 服务是否开启没有要求

        设置完成后:
            如果 ntp 服务原本是开启的, 需要重启 ntp 服务
            如果 ntp 服务原本是关闭的, 则不改变其状态
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [3423 3426])
                            ("servers" variable nil (reparse-symbol function_parameters) [3428 3435]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [3390 3780])
                    ("set_threshold" function
                       (:documentation "
        设置阈值, 涉及 /etc/sysconfig/ntpd 和 /etc/ntp.conf
        两个文件的修改, 如果前一个修改成功, 后一个修改失败,
        则需要还原前一个文件的设置
        如果阈值在 0-0.5s 之间, 则不开启 -x 选项; 否则开启;
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [3820 3823])
                            ("threshold" variable nil (reparse-symbol function_parameters) [3825 3834]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [3785 4801])
                    ("get_servers" function
                       (:documentation "
        获取 NTP 同步源
        1. 配置文件中配置的同步源
        2. 实际运行过程中使用的同步源, 刚启动时, 需要等待一段时间才会确定
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [4839 4842]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [4806 5454])
                    ("get_threshold" function
                       (:documentation "
        获取阈值
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [5494 5497]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [5459 5884])
                    ("_modify_ntpd" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("filename" variable nil (reparse-symbol function_parameters) [5924 5932])
                            ("content" variable nil (reparse-symbol function_parameters) [5934 5941]))                          
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [5889 6170]))                  
                :type "class")
                nil [1101 6170])
            ("if" code nil nil [6172 6236]))          
      :file "ntp.py"
      :pointmax 6712
      :fsize 7283
      :lastmodtime '(23838 46586 600000 0)
      :unmatched-syntax '((INDENT_BLOCK 758 . 817) (COLON 756 . 757) (TRY 550 . 553) (AS 750 . 752)))
)
  :file "!usr!lib!python3.6!site-packages!rccpxuanyuan!ntp!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
