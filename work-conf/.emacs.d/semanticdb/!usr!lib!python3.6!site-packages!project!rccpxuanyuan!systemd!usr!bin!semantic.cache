;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [832 869])
            ("getopt" include nil nil [871 884])
            ("imp" include nil nil [885 895])
            ("logging" include nil nil [896 910])
            ("os" include nil nil [911 920])
            ("sys" include nil nil [921 931])
            ("syslog" include nil nil [932 945])
            ("textwrap" include nil nil [946 961])
            ("traceback" include nil nil [962 978])
            ("lib_dir" variable nil nil [1297 1414])
            ("rccpxuanyuan" variable nil nil [1415 1506])
            ("rccpxuanyuan" variable nil nil [1507 1640])
            ("tool_modules" variable nil nil [1715 1732])
            ("tool_command" variable nil nil [1733 1750])
            ("ERROR_SAME_COMMAND" variable nil nil [1752 1923])
            ("_listPathModules" function (:arguments 
              ( ("path" variable nil (reparse-symbol function_parameters) [1947 1951]))              ) nil [1926 2145])
            ("load_modules" function (:documentation "
    Dynamically load the modules present in the tool package.

    This means that vdsm-tool doesn't need to know in advance the modules
    and the commands present in the package. The commands to be exposed in
    the command line must be decorated with:

        from vdsm.tool import expose
        @expose(command_name)

    Two global structures are maintained:

        tool_modules: an ordered list of modules and functions whose main
                      purpose is to be used for the help output
        tool_command: a lookup dictionary of the commands useful to execute
                      the commands when requested
    ") nil [2147 4208])
            ("print_command_usage" function (:arguments 
              ( ("cmd" variable nil (reparse-symbol function_parameters) [4234 4237])
                ("stream" variable nil (reparse-symbol function_parameters) [4239 4245]))              ) nil [4210 4356])
            ("_usage_command" function (:arguments 
              ( ("cmd_name" variable nil (reparse-symbol function_parameters) [4377 4385])
                ("cmd_docs" variable nil (reparse-symbol function_parameters) [4387 4395]))              ) nil [4358 4483])
            ("_usage_module" function (:arguments 
              ( ("mod_name" variable nil (reparse-symbol function_parameters) [4503 4511])
                ("mod_desc" variable nil (reparse-symbol function_parameters) [4513 4521]))              ) nil [4485 4661])
            ("usage_and_exit" function (:arguments 
              ( ("exit_code" variable nil (reparse-symbol function_parameters) [4682 4691]))              ) nil [4663 5619])
            ("setup_logging" function (:arguments 
              ( ("log_file" variable nil (reparse-symbol function_parameters) [5639 5647])
                ("verbosity" variable nil (reparse-symbol function_parameters) [5649 5658])
                ("append" variable nil (reparse-symbol function_parameters) [5660 5666]))              ) nil [5621 6237])
            ("main" function nil nil [6239 7743])
            ("if" code nil nil [7744 7792]))          
      :file "rccpxuanyuan-tool"
      :pointmax 7792
      :fsize 7791
      :lastmodtime '(23965 42540 285336 986000)
      :unmatched-syntax nil))
  :file "!usr!lib!python3.6!site-packages!project!rccpxuanyuan!systemd!usr!bin!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
