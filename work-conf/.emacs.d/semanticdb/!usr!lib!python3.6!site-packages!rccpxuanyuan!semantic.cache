;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"
rccpxuanyuand xuanyuan服务主入口，创建xuanyuan服务管理类和多线程任务
\"\"\"" code nil nil [321 378])
            ("__future__" include nil nil [380 418])
            ("__future__" include nil nil [419 456])
            ("os" include nil nil [471 480])
            ("getpass" include nil nil [497 511])
            ("pwd" include nil nil [512 522])
            ("grp" include nil nil [523 533])
            ("threading" include nil nil [534 550])
            ("syslog" include nil nil [551 564])
            ("resource" include nil nil [565 580])
            ("tempfile" include nil nil [581 596])
            ("logging" include nil nil [598 612])
            ("logging" include nil nil [613 650])
            ("rccpxuanyuan" include nil nil [652 686])
            ("rccpxuanyuan" include nil nil [789 821])
            ("rccpxuanyuan.common" include nil nil [857 897])
            ("rccpxuanyuan.common" include nil nil [898 940])
            ("rccpxuanyuan.common" include nil nil [941 981])
            ("rccpxuanyuan.virt.libvirt" include nil nil [982 1037])
            ("rccpxuanyuan.config" include nil nil [1167 1205])
            ("rccpxuanyuan.rpc.rpc" include nil nil [1385 1435])
            ("LOGGERCONFFILE" code nil nil [1438 1500])
            ("FatalError" type
               (:documentation " Raised when rccpxuanyuan fail to start "
                :superclasses ("Exception")
                :type "class")
                nil [1503 1583])
            ("serve_clients" function
               (:documentation "
    创建服务客户端
    params log: log管理对象
    "
                :arguments 
                  ( ("log" variable nil (reparse-symbol function_parameters) [1603 1606]))                  )
                nil [1585 3189])
            ("run" function (:documentation "
    运行服务
    ") nil [3191 4619])
            ("__assert_log_permission" function nil nil [5767 6245])
            ("__assert_single_instance" function nil nil [6247 6471])
            ("__assert_rccpxuanyuan_user" function nil nil [6473 6977])
            ("__assert_sudoer_permissions" function nil nil [6979 7625])
            ("__set_cpu_affinity" function nil nil [7627 8290])
            ("main" function nil nil [8292 8746]))          
      :file "rccpxuanyuand.py"
      :pointmax 8746
      :fsize 7614
      :lastmodtime '(23953 46432 0 0)
      :unmatched-syntax '((INDENT_BLOCK 8624 . 8746) (NEWLINE 8623 . 8624) (COLON 8622 . 8623) (TRY 8308 . 8311) (AS 8618 . 8620) (INDENT_BLOCK 6438 . 6471) (NEWLINE 6437 . 6438) (COLON 6436 . 6437) (TRY 6283 . 6286) (AS 6432 . 6434) (INDENT_BLOCK 3338 . 3399) (NEWLINE 3337 . 3338) (COLON 3336 . 3337) (TRY 3231 . 3234) (AS 3332 . 3334)))
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [821 859])
            ("\"\"\"
a proxy for rccpxuanyuan.common.config.

remove when all modules import rccpxuanyuan.common.config directly
\"\"\"" code nil nil [861 976])
            ("rccpxuanyuan.common.config" include nil nil [978 1018]))          
      :file "config.py"
      :pointmax 1039
      :fsize 1038
      :lastmodtime '(23940 33512 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"
api.py主机资源管理子系统对外接口层
职责：
    1. 显示声明子系统对外接口
    2. 完成接口入参反序列化、合法性检查、回参序列化过程
    3. 调用内部接口完成接口功能
\"\"\"" code nil nil [1 104])
            ("logging" include nil nil [106 120])
            ("rccpxuanyuan.network.errors" include nil nil [122 180])
            ("rccpxuanyuan" include nil nil [181 218])
            ("rccpxuanyuan.client_if" include nil nil [219 262])
            ("rccpxuanyuan.common" include nil nil [263 298])
            ("rccpxuanyuan.common" include nil nil [299 340])
            ("rccpxuanyuan.common" include nil nil [341 390])
            ("rccpxuanyuan.common" include nil nil [391 432])
            ("rccpxuanyuan.common" include nil nil [433 484])
            ("rccpxuanyuan.common" include nil nil [485 526])
            ("rccpxuanyuan.common.parameter" include nil nil [527 580])
            ("rccpxuanyuan.virt.interface" include nil nil [581 625])
            ("rccpxuanyuan.common.notify" include nil nil [626 681])
            ("USER_SHUTDOWN_MESSAGE" variable nil nil [750 793])
            ("SHUTDOWN" variable nil nil [794 815])
            ("DESTROY" variable nil nil [816 835])
            ("REBOOT" variable nil nil [836 853])
            ("throttledlog" code nil nil [856 899])
            ("APIBase" type
               (:documentation "
    APIBase接口分组基类，设置子接口类功能资源和机制
    "
                :members 
                  ( ("ctorArgs" variable nil (reparse-symbol indented_block_body) [970 983])
                    ("__init__" function
                       (:suite 
                          ( ("log" variable nil (reparse-symbol indented_block_body) [1078 1108])
                            ("self" variable nil (reparse-symbol indented_block_body) [1117 1159])
                            ("self" variable nil (reparse-symbol indented_block_body) [1168 1192]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1002 1006]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [989 1133]))                  
                :type "class")
                nil [902 1133])
            ("GlobalAPI" type
               (:documentation "
    GlobalAPI 封装主机、服务管理外部调用接口，调用服务管理类、主机管理包
    主要职责：
        1. 接口的分组
        2. 接口入参反序列化
        3. 入参检查
        4. 同步接口和异步接口划分
        5. 返回值序列化
    "
                :superclasses ("APIBase")
                :members 
                  ( ("ctorArgs" variable nil (reparse-symbol indented_block_body) [1397 1410])
                    ("__init__" function
                       (:suite 
                          ( ("APIBase" code nil (reparse-symbol indented_block_body) [1504 1526]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1429 1433]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1416 1467])
                    ("" code nil (reparse-symbol indented_block_body) [1529 1549])
                    ("" code nil (reparse-symbol indented_block_body) [1565 1584])
                    ("get_mainboard_info" function (:documentation "
        查询服务器主板信息外部接口
        ") (reparse-symbol indented_block_body) [1589 1727])
                    ("" code nil (reparse-symbol indented_block_body) [1762 1782])
                    ("" code nil (reparse-symbol indented_block_body) [1798 1817])
                    ("get_cpu_info" function (:documentation "
        查询服务器CPU信息外部接口
        ") (reparse-symbol indented_block_body) [1822 1949])
                    ("" code nil (reparse-symbol indented_block_body) [1984 2004])
                    ("" code nil (reparse-symbol indented_block_body) [2020 2039])
                    ("get_mem_info" function (:documentation "
        查询服务器Mem信息外部接口
        ") (reparse-symbol indented_block_body) [2044 2171])
                    ("" code nil (reparse-symbol indented_block_body) [2206 2226])
                    ("" code nil (reparse-symbol indented_block_body) [2242 2261])
                    ("set_reserved_resource" function
                       (:documentation "
        服务主动设置预留cpu和内存，触发资源预留推送功能
        :param service_type: 服务类型
        :param resource: 设置的预留资源
        :return:
        "
                        :arguments 
                          ( ("service_type" variable nil (reparse-symbol function_parameters) [2292 2304])
                            ("resource" variable nil (reparse-symbol function_parameters) [2306 2314]))                          )
                        (reparse-symbol indented_block_body) [2266 2550])
                    ("" code nil (reparse-symbol indented_block_body) [2585 2605])
                    ("" code nil (reparse-symbol indented_block_body) [2621 2640])
                    ("get_disk_info" function (:documentation "
        查询服务器Disk信息外部接口
        ") (reparse-symbol indented_block_body) [2645 2775])
                    ("" code nil (reparse-symbol indented_block_body) [2792 2812])
                    ("" code nil (reparse-symbol indented_block_body) [2828 2847])
                    ("get_service_info" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2873 2877]))                          
                        :documentation "
        查询xuanyuan服务信息外部接口
        ")
                        (reparse-symbol indented_block_body) [2852 3189])
                    ("" code nil (reparse-symbol indented_block_body) [3206 3226])
                    ("" code nil (reparse-symbol indented_block_body) [3242 3261])
                    ("add_host" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3279 3283])
                            ("platform_id" variable nil (reparse-symbol function_parameters) [3285 3296])
                            ("vip_info" variable nil (reparse-symbol function_parameters) [3298 3306])
                            ("servers" variable nil (reparse-symbol function_parameters) [3308 3315]))                          
                        :documentation "
        设置主机纳管外部接口
        ")
                        (reparse-symbol indented_block_body) [3266 3580])
                    ("" code nil (reparse-symbol indented_block_body) [3597 3617])
                    ("" code nil (reparse-symbol indented_block_body) [3633 3652])
                    ("remove_host" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3673 3677])
                            ("platform_id" variable nil (reparse-symbol function_parameters) [3679 3690]))                          
                        :documentation "
        设置主机脱管外部接口
        ")
                        (reparse-symbol indented_block_body) [3657 3857])
                    ("" code nil (reparse-symbol indented_block_body) [3874 3894])
                    ("" code nil (reparse-symbol indented_block_body) [3910 3929])
                    ("reset_host_management" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3960 3964]))                          
                        :documentation "
        重置主机纳管状态: 设置主机进入脱管状态
        ")
                        (reparse-symbol indented_block_body) [3934 4063])
                    ("" code nil (reparse-symbol indented_block_body) [4080 4100])
                    ("" code nil (reparse-symbol indented_block_body) [4116 4135])
                    ("get_messaging_ip" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4161 4165]))                          
                        :documentation "
        查询xuanyuan服务使用消息系统IP信息外部接口
        ")
                        (reparse-symbol indented_block_body) [4140 4291])
                    ("" code nil (reparse-symbol indented_block_body) [4308 4328])
                    ("" code nil (reparse-symbol indented_block_body) [4344 4363])
                    ("get_caps" function
                       (:parent "dummy"
                        :decorators 
                          ( ("callutils.time_stamp" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4407 4411]))                          
                        :documentation "
        查询服务器服务信息汇总外部接口
        ")
                        (reparse-symbol indented_block_body) [4368 5446])
                    ("" code nil (reparse-symbol indented_block_body) [5481 5501])
                    ("" code nil (reparse-symbol indented_block_body) [5517 5536])
                    ("shutdown" function (:documentation "
        关闭服务器外部接口
        ") (reparse-symbol indented_block_body) [5541 5648])
                    ("" code nil (reparse-symbol indented_block_body) [5683 5703])
                    ("" code nil (reparse-symbol indented_block_body) [5719 5738])
                    ("reboot" function (:documentation "
        重启服务器外部接口
        ") (reparse-symbol indented_block_body) [5743 5846])
                    ("" code nil (reparse-symbol indented_block_body) [5880 5900])
                    ("" code nil (reparse-symbol indented_block_body) [5916 5935])
                    ("set_ntp" function
                       (:documentation "
        设置 NTP
        param servers: NTP 同步源
        type servers: list
        param threshold: NTP 误差阈值
        type threshold: float
        "
                        :arguments 
                          ( ("servers" variable nil (reparse-symbol function_parameters) [5952 5959])
                            ("threshold" variable nil (reparse-symbol function_parameters) [5966 5975]))                          )
                        (reparse-symbol indented_block_body) [5940 6210])
                    ("" code nil (reparse-symbol indented_block_body) [6245 6265])
                    ("" code nil (reparse-symbol indented_block_body) [6281 6300])
                    ("get_ntp_info" function (:documentation "
        获取 NTP 信息, 包括同步源和阈值
        ") (reparse-symbol indented_block_body) [6305 6437])
                    ("" code nil (reparse-symbol indented_block_body) [6472 6492])
                    ("" code nil (reparse-symbol indented_block_body) [6508 6527])
                    ("open_ntp" function (:documentation "
        启动 NTP 服务
        ") (reparse-symbol indented_block_body) [6532 6639])
                    ("" code nil (reparse-symbol indented_block_body) [6674 6694])
                    ("" code nil (reparse-symbol indented_block_body) [6710 6729])
                    ("close_ntp" function (:documentation "
        关闭 NTP 服务
        ") (reparse-symbol indented_block_body) [6734 6842])
                    ("" code nil (reparse-symbol indented_block_body) [6877 6897])
                    ("" code nil (reparse-symbol indented_block_body) [6913 6932])
                    ("set_ntp" function
                       (:documentation "
        设置 NTP
        param servers: NTP 同步源
        type servers: list
        param threshold: NTP 误差阈值
        type threshold: float
        "
                        :arguments 
                          ( ("servers" variable nil (reparse-symbol function_parameters) [6949 6956])
                            ("threshold" variable nil (reparse-symbol function_parameters) [6963 6972]))                          )
                        (reparse-symbol indented_block_body) [6937 7207])
                    ("" code nil (reparse-symbol indented_block_body) [7242 7262])
                    ("" code nil (reparse-symbol indented_block_body) [7278 7297])
                    ("get_ntp_info" function (:documentation "
        获取 NTP 信息, 包括同步源和阈值
        ") (reparse-symbol indented_block_body) [7302 7434])
                    ("" code nil (reparse-symbol indented_block_body) [7469 7489])
                    ("" code nil (reparse-symbol indented_block_body) [7505 7524])
                    ("open_ntp" function (:documentation "
        启动 NTP 服务
        ") (reparse-symbol indented_block_body) [7529 7636])
                    ("" code nil (reparse-symbol indented_block_body) [7671 7691])
                    ("" code nil (reparse-symbol indented_block_body) [7707 7726])
                    ("close_ntp" function (:documentation "
        关闭 NTP 服务
        ") (reparse-symbol indented_block_body) [7731 7840])
                    ("" code nil (reparse-symbol indented_block_body) [7875 7895])
                    ("" code nil (reparse-symbol indented_block_body) [7911 7930])
                    ("set_vip" function
                       (:documentation "
        设置高可用VIP配置项
        "
                        :arguments 
                          ( ("vip_info" variable nil (reparse-symbol function_parameters) [7947 7955]))                          )
                        (reparse-symbol indented_block_body) [7935 8058])
                    ("" code nil (reparse-symbol indented_block_body) [17596 17616])
                    ("" code nil (reparse-symbol indented_block_body) [17632 17654])
                    ("get_nics_info" function
                       (:documentation "
        Report host nics info.
        "
                        :arguments 
                          ( ("nic_list" variable nil (reparse-symbol function_parameters) [17677 17685]))                          )
                        (reparse-symbol indented_block_body) [17659 17847])
                    ("" code nil (reparse-symbol indented_block_body) [17882 17902])
                    ("" code nil (reparse-symbol indented_block_body) [17918 17940])
                    ("get_bonds_info" function
                       (:documentation "
        Report host bonds info.
        "
                        :arguments 
                          ( ("bond_list" variable nil (reparse-symbol function_parameters) [17964 17973]))                          )
                        (reparse-symbol indented_block_body) [17945 18209])
                    ("" code nil (reparse-symbol indented_block_body) [18244 18264])
                    ("" code nil (reparse-symbol indented_block_body) [18280 18302])
                    ("get_net_dev_info" function (:documentation "
        Report host net devices info.
        ") (reparse-symbol indented_block_body) [18307 18570])
                    ("" code nil (reparse-symbol indented_block_body) [18587 18607])
                    ("" code nil (reparse-symbol indented_block_body) [18623 18645])
                    ("create_bond" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18666 18670])
                            ("bond_name" variable nil (reparse-symbol function_parameters) [18672 18681])
                            ("mode" variable nil (reparse-symbol function_parameters) [18683 18687])
                            ("slaves" variable nil (reparse-symbol function_parameters) [18689 18695]))                          
                        :documentation "create a new bond device")
                        (reparse-symbol indented_block_body) [18650 19248])
                    ("" code nil (reparse-symbol indented_block_body) [19265 19285])
                    ("" code nil (reparse-symbol indented_block_body) [19301 19323])
                    ("remove_bonds" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19345 19349])
                            ("bond_list" variable nil (reparse-symbol function_parameters) [19351 19360]))                          
                        :documentation "remove bond devices.")
                        (reparse-symbol indented_block_body) [19328 19897])
                    ("" code nil (reparse-symbol indented_block_body) [19914 19934])
                    ("" code nil (reparse-symbol indented_block_body) [19950 19972])
                    ("modify_bond" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19993 19997])
                            ("bond_name" variable nil (reparse-symbol function_parameters) [19999 20008])
                            ("mode" variable nil (reparse-symbol function_parameters) [20010 20014])
                            ("slaves" variable nil (reparse-symbol function_parameters) [20021 20027]))                          
                        :documentation "修改bond设备的属性")
                        (reparse-symbol indented_block_body) [19977 20573])
                    ("" code nil (reparse-symbol indented_block_body) [20590 20610])
                    ("" code nil (reparse-symbol indented_block_body) [20626 20648])
                    ("set_dev_ip" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20668 20672])
                            ("dev_name" variable nil (reparse-symbol function_parameters) [20674 20682])
                            ("dev_type" variable nil (reparse-symbol function_parameters) [20684 20692])
                            ("address" variable nil (reparse-symbol function_parameters) [20694 20701])
                            ("netmask" variable nil (reparse-symbol function_parameters) [20703 20710])
                            ("gateway" variable nil (reparse-symbol function_parameters) [20712 20719]))                          
                        :documentation "设置网络设备的IPv4地址.")
                        (reparse-symbol indented_block_body) [20653 21341])
                    ("" code nil (reparse-symbol indented_block_body) [21358 21378])
                    ("" code nil (reparse-symbol indented_block_body) [21394 21416])
                    ("set_dev_ipv6" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21438 21442])
                            ("dev_name" variable nil (reparse-symbol function_parameters) [21444 21452])
                            ("dev_type" variable nil (reparse-symbol function_parameters) [21454 21462])
                            ("address" variable nil (reparse-symbol function_parameters) [21464 21471])
                            ("gateway" variable nil (reparse-symbol function_parameters) [21473 21480]))                          
                        :documentation "设置网络设备的IPv6地址.")
                        (reparse-symbol indented_block_body) [21421 22097])
                    ("" code nil (reparse-symbol indented_block_body) [22114 22134])
                    ("" code nil (reparse-symbol indented_block_body) [22150 22172])
                    ("create_provider_ovs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22201 22205])
                            ("ovs_name" variable nil (reparse-symbol function_parameters) [22207 22215])
                            ("slave" variable nil (reparse-symbol function_parameters) [22217 22222])
                            ("vlan" variable nil (reparse-symbol function_parameters) [22224 22228]))                          
                        :documentation "创建provider ovs桥.")
                        (reparse-symbol indented_block_body) [22177 22776])
                    ("" code nil (reparse-symbol indented_block_body) [22793 22813])
                    ("" code nil (reparse-symbol indented_block_body) [22829 22851])
                    ("modify_provider_ovs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22880 22884])
                            ("ovs_name" variable nil (reparse-symbol function_parameters) [22886 22894])
                            ("slave" variable nil (reparse-symbol function_parameters) [22896 22901]))                          
                        :documentation "修个provider ovs的属性.")
                        (reparse-symbol indented_block_body) [22856 23440])
                    ("" code nil (reparse-symbol indented_block_body) [23457 23477])
                    ("" code nil (reparse-symbol indented_block_body) [23493 23515])
                    ("remove_provider_ovs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23544 23548])
                            ("ovs_list" variable nil (reparse-symbol function_parameters) [23550 23558]))                          
                        :documentation "删除provider ovs.")
                        (reparse-symbol indented_block_body) [23520 24087])
                    ("" code nil (reparse-symbol indented_block_body) [24122 24142])
                    ("" code nil (reparse-symbol indented_block_body) [24158 24180])
                    ("get_host_dns" function (:documentation "
        get host dns list info.
        ") (reparse-symbol indented_block_body) [24185 24418])
                    ("" code nil (reparse-symbol indented_block_body) [24436 24456])
                    ("" code nil (reparse-symbol indented_block_body) [24472 24494])
                    ("set_host_dns" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24516 24520])
                            ("dns_list" variable nil (reparse-symbol function_parameters) [24522 24530]))                          
                        :documentation "设置主机DNS信息.")
                        (reparse-symbol indented_block_body) [24499 25099])
                    ("" code nil (reparse-symbol indented_block_body) [25134 25154])
                    ("" code nil (reparse-symbol indented_block_body) [25170 25190])
                    ("connect_iscsi_tgt" function
                       (:documentation "创建iscsi连接"
                        :arguments 
                          ( ("iqn" variable nil (reparse-symbol function_parameters) [25217 25220])
                            ("ip_addr" variable nil (reparse-symbol function_parameters) [25222 25229])
                            ("username" variable nil (reparse-symbol function_parameters) [25231 25239])
                            ("password" variable nil (reparse-symbol function_parameters) [25270 25278])
                            ("port" variable nil (reparse-symbol function_parameters) [25283 25287])
                            ("data" variable nil (reparse-symbol function_parameters) [25294 25298]))                          )
                        (reparse-symbol indented_block_body) [25195 25454])
                    ("" code nil (reparse-symbol indented_block_body) [25489 25509])
                    ("" code nil (reparse-symbol indented_block_body) [25525 25545])
                    ("disconnect_iscsi_tgt" function
                       (:documentation "断开iscsi连接"
                        :arguments 
                          ( ("iqn" variable nil (reparse-symbol function_parameters) [25575 25578])
                            ("ip_addr" variable nil (reparse-symbol function_parameters) [25580 25587])
                            ("port" variable nil (reparse-symbol function_parameters) [25589 25593]))                          )
                        (reparse-symbol indented_block_body) [25550 25706])
                    ("" code nil (reparse-symbol indented_block_body) [25741 25761])
                    ("" code nil (reparse-symbol indented_block_body) [25777 25797])
                    ("get_iscsi_luns" function (:documentation "
        获取本机的iscsi luns
        :return:
        ") (reparse-symbol indented_block_body) [25802 25950])
                    ("" code nil (reparse-symbol indented_block_body) [25985 26005])
                    ("" code nil (reparse-symbol indented_block_body) [26021 26046])
                    ("deploy_pos_node" function
                       (:documentation "部署P-OS服务，新增一个存储节点"
                        :arguments 
                          ( ("cluster_id" variable nil (reparse-symbol function_parameters) [26071 26081])
                            ("node_id" variable nil (reparse-symbol function_parameters) [26083 26090])
                            ("zk_id" variable nil (reparse-symbol function_parameters) [26092 26097])
                            ("sip" variable nil (reparse-symbol function_parameters) [26099 26102])
                            ("cache_disks" variable nil (reparse-symbol function_parameters) [26128 26139])
                            ("joined_nodes" variable nil (reparse-symbol function_parameters) [26141 26153]))                          )
                        (reparse-symbol indented_block_body) [26051 26314])
                    ("" code nil (reparse-symbol indented_block_body) [26349 26369])
                    ("" code nil (reparse-symbol indented_block_body) [26385 26410])
                    ("undeploy_pos_node" function
                       (:documentation "卸载P-OS服务，删除一个存储节点"
                        :arguments 
                          ( ("cluster_id" variable nil (reparse-symbol function_parameters) [26437 26447])
                            ("node_id" variable nil (reparse-symbol function_parameters) [26449 26456]))                          )
                        (reparse-symbol indented_block_body) [26415 26567]))                  
                :type "class")
                nil [1202 26567])
            ("VirtAPI" type
               (:documentation "虚机外部接口"
                :superclasses ("APIBase")
                :members 
                  ( ("ctorArgs" variable nil (reparse-symbol indented_block_body) [26614 26627])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"通过基类的初始化方法, 获取 log 对象和 cif 对象\"\"\"" code nil (reparse-symbol indented_block_body) [26721 26756])
                            ("APIBase" code nil (reparse-symbol indented_block_body) [26765 26787])
                            ("self" variable nil (reparse-symbol indented_block_body) [26796 26813]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26646 26650]))                          
                        :documentation "通过基类的初始化方法, 获取 log 对象和 cif 对象"
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [26633 26754])
                    ("" code nil (reparse-symbol indented_block_body) [26771 26784])
                    ("" code nil (reparse-symbol indented_block_body) [26800 26817])
                    ("start_vm" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26835 26839])
                            ("conf" variable nil (reparse-symbol function_parameters) [26841 26845]))                          
                        :documentation "创建虚机")
                        (reparse-symbol indented_block_body) [26822 26902])
                    ("" code nil (reparse-symbol indented_block_body) [26920 26933])
                    ("" code nil (reparse-symbol indented_block_body) [26949 26966])
                    ("shutdown_vm" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26987 26991])
                            ("vm_id" variable nil (reparse-symbol function_parameters) [26993 26998])
                            ("force" variable nil (reparse-symbol function_parameters) [27000 27005]))                          
                        :documentation "虚机关闭, 虚机断电
        @vm_id: string, required
        @force: bool, optional, default=False
        ")
                        (reparse-symbol indented_block_body) [26971 27307])
                    ("" code nil (reparse-symbol indented_block_body) [27324 27337])
                    ("" code nil (reparse-symbol indented_block_body) [27353 27370])
                    ("reboot_vm" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [27389 27393])
                            ("vm_id" variable nil (reparse-symbol function_parameters) [27395 27400]))                          
                        :documentation "虚机重启
        @vm_id: string, required
        ")
                        (reparse-symbol indented_block_body) [27375 27507])
                    ("" code nil (reparse-symbol indented_block_body) [27524 27537])
                    ("" code nil (reparse-symbol indented_block_body) [27553 27570])
                    ("change_cd" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [27589 27593])
                            ("vm_id" variable nil (reparse-symbol function_parameters) [27595 27600])
                            ("dev_id" variable nil (reparse-symbol function_parameters) [27602 27608])
                            ("file_path" variable nil (reparse-symbol function_parameters) [27610 27619]))                          
                        :documentation "修改虚拟光驱设备
        @vm_id: string, required
        @dev_id: string, required
        @file_path: string, required
        ")
                        (reparse-symbol indented_block_body) [27575 27967]))                  
                :type "class")
                nil [26569 27967]))          
      :file "API.py"
      :pointmax 27967
      :fsize 30007
      :lastmodtime '(23965 19835 104058 106000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"
ClientIF主机资源管理系统主管理类
职责：
    1. 提供子系统各个组件公共资源和机制
\"\"\"" code nil nil [1 57])
            ("threading" include nil nil [59 75])
            ("rccpxuanyuan.config" include nil nil [77 115])
            ("rccpxuanyuan.config" include nil nil [116 175])
            ("rccpxuanyuan.common" include nil nil [176 217])
            ("rccpxuanyuan.common" include nil nil [218 259])
            ("rccpxuanyuan.common" include nil nil [260 306])
            ("rccpxuanyuan.common.define" include nil nil [307 363])
            ("rccpxuanyuan.common.callutils" include nil nil [364 421])
            ("rccpxuanyuan.common.vip" include nil nil [422 473])
            ("rccpxuanyuan.common.vip" include nil nil [474 513])
            ("rccpxuanyuan.network" include nil nil [515 560])
            ("_UNMANAGED_PLATFORM_ID" variable nil nil [563 607])
            ("ClientIF" type
               (:documentation "
    The client interface of rccpxuanyuan.

    Exposes rccpxuanyuan verbs as json-rpc or xml-rpc functions.
    "
                :members 
                  ( ("_instance" variable nil (reparse-symbol indented_block_body) [755 771])
                    ("_instance_lock" variable nil (reparse-symbol indented_block_body) [776 809])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"
        Initialize the (single) ClientIF instance

        :param log: a log object to be used for this object's logging.
        :type log: :class:`logging.Logger`
        \"\"\"" code nil (reparse-symbol indented_block_body) [859 1039])
                            ("self" variable nil (reparse-symbol indented_block_body) [1049 1090])
                            ("self" variable nil (reparse-symbol indented_block_body) [1099 1146])
                            ("self" variable nil (reparse-symbol indented_block_body) [1155 1203])
                            ("self" variable nil (reparse-symbol indented_block_body) [1212 1226])
                            ("self" variable nil (reparse-symbol indented_block_body) [1235 1262])
                            ("self" variable nil (reparse-symbol indented_block_body) [1271 1299])
                            ("try" code nil (reparse-symbol indented_block_body) [1308 1685]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [828 832])
                            ("log" variable nil (reparse-symbol function_parameters) [834 837])
                            ("scheduler" variable nil (reparse-symbol function_parameters) [839 848]))                          
                        :documentation "
        Initialize the (single) ClientIF instance

        :param log: a log object to be used for this object's logging.
        :type log: :class:`logging.Logger`
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [815 1685])
                    ("get_instance" function
                       (:documentation "
        通过get_instance获取ClientIF实例，完成cif单例模式
        params cls: ClientIF类
        params log: log管理的全局变量
        params scheduler: cif周期任务管理器
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [1724 1727])
                            ("log" variable nil (reparse-symbol function_parameters) [1729 1732])
                            ("scheduler" variable nil (reparse-symbol function_parameters) [1739 1748]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [1690 2259])
                    ("prepare_for_shutdown" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2289 2293]))                          
                        :documentation "
        Prepare server for shutdown.
        Should be called before taking server down.
        ")
                        (reparse-symbol indented_block_body) [2264 2667])
                    ("start" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2682 2686]))                          )
                        (reparse-symbol indented_block_body) [2672 2702])
                    ("cb_dispatch_libvirt_events" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2738 2742])
                            ("conn" variable nil (reparse-symbol function_parameters) [2744 2748])
                            ("dom" variable nil (reparse-symbol function_parameters) [2750 2753])
                            ("args" variable nil (reparse-symbol function_parameters) [2755 2760]))                          )
                        (reparse-symbol indented_block_body) [2707 2776])
                    ("get_service_info" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2802 2806]))                          
                        :documentation "
        查询xuanyuan服务信息接口
        ")
                        (reparse-symbol indented_block_body) [2781 2968])
                    ("add_host" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2986 2990])
                            ("platform_id" variable nil (reparse-symbol function_parameters) [2992 3003])
                            ("vip_info" variable nil (reparse-symbol function_parameters) [3005 3013]))                          
                        :documentation "
        主机纳管接口: 当当前平台id未设置或与设置id相同时允许设置,否则抛异常
        params platform_id: 服务纳管平台id
        params vip_info: 通信虚拟IP信息
        example: {\"vip\": \"172.21.110.119\", \"netmask\": \"255.255.255.0\"}
        ")
                        (reparse-symbol indented_block_body) [2973 3871])
                    ("remove_host" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3892 3896])
                            ("platform_id" variable nil (reparse-symbol function_parameters) [3898 3909]))                          
                        :documentation "
        设置主机脱管接口 : 当当前平台id与设置id相同时允许设置,否则抛异常
        params platform_id: 服务纳管平台id
        ")
                        (reparse-symbol indented_block_body) [3876 4678])
                    ("reset_host_management" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4709 4713]))                          
                        :documentation "
        重置主机纳管状态: 设置主机进入脱管状态
        ")
                        (reparse-symbol indented_block_body) [4683 4814])
                    ("require_network_semaphore" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4849 4853])
                            ("blocking" variable nil (reparse-symbol function_parameters) [4855 4863])
                            ("timeout" variable nil (reparse-symbol function_parameters) [4870 4877]))                          
                        :documentation "
        申请网络驱动模块信号量
        params blocking: 阻塞标志
        params timeout: 超时时间
        ")
                        (reparse-symbol indented_block_body) [4819 5055])
                    ("release_network_semaphore" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5090 5094]))                          
                        :documentation "
        释放网络驱动模块信号量
        ")
                        (reparse-symbol indented_block_body) [5060 5191])
                    ("set_netconfigdirty_flag" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5224 5228])
                            ("flag" variable nil (reparse-symbol function_parameters) [5230 5234]))                          
                        :documentation "
        释放网络驱动模块信号量
        ")
                        (reparse-symbol indented_block_body) [5196 5319])
                    ("set_vip" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("vip_info" variable nil (reparse-symbol function_parameters) [5354 5362]))                          
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [5324 5539]))                  
                :type "class")
                nil [610 5539]))          
      :file "client_if.py"
      :pointmax 5539
      :fsize 6121
      :lastmodtime '(23965 19824 428723 104000)
      :unmatched-syntax nil))
  :file "!usr!lib!python3.6!site-packages!rccpxuanyuan!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
