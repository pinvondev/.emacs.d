;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"
libvirt 接口封装

# TODO
# register_vmevent_callback() 测试失败

\"\"\"" code nil nil [1 65])
            ("logging" include nil nil [67 81])
            ("libvirt" include nil nil [82 96])
            ("rccpxuanyuan.common" include nil nil [98 133])
            ("rccpxuanyuan.common" include nil nil [134 175])
            ("rccpxuanyuan.virt.libvirt.libvirt_assistant" include nil nil [176 241])
            ("LOG" variable nil nil [244 274])
            ("LibvirtAPI" type
               (:documentation "
    封装 libvirt 接口
    "
                :members 
                  ( ("" code nil (reparse-symbol indented_block_body) [363 382])
                    ("register_vmevent_callback" function
                       (:documentation "
        注册 libvirt 的事件通知
        # 该接口当前测试失败
        "
                        :arguments 
                          ( ("uuid_string" variable nil (reparse-symbol function_parameters) [417 428])
                            ("event" variable nil (reparse-symbol function_parameters) [430 435])
                            ("callback" variable nil (reparse-symbol function_parameters) [437 445])
                            ("opaque" variable nil (reparse-symbol function_parameters) [481 487])
                            ("cif" variable nil (reparse-symbol function_parameters) [489 492]))                          )
                        (reparse-symbol indented_block_body) [387 725])
                    ("" code nil (reparse-symbol indented_block_body) [806 825])
                    ("start_vm" function
                       (:documentation "
        创建虚机
        "
                        :arguments 
                          ( ("xml_desc" variable nil (reparse-symbol function_parameters) [843 851])
                            ("flags" variable nil (reparse-symbol function_parameters) [853 858])
                            ("cif" variable nil (reparse-symbol function_parameters) [860 863]))                          )
                        (reparse-symbol indented_block_body) [830 1081])
                    ("" code nil (reparse-symbol indented_block_body) [1115 1134])
                    ("vm_exist" function
                       (:documentation "
        虚机是否存在
        "
                        :arguments 
                          ( ("uuid_string" variable nil (reparse-symbol function_parameters) [1152 1163])
                            ("cif" variable nil (reparse-symbol function_parameters) [1165 1168]))                          )
                        (reparse-symbol indented_block_body) [1139 1398])
                    ("" code nil (reparse-symbol indented_block_body) [1432 1451])
                    ("shutdown_vm" function
                       (:documentation "
        关闭虚机
        如果 @flags 使用默认值 0, hypervisor 会使用它认为
        最合适的方式关闭虚机
        "
                        :arguments 
                          ( ("uuid_string" variable nil (reparse-symbol function_parameters) [1472 1483])
                            ("cif" variable nil (reparse-symbol function_parameters) [1485 1488])
                            ("flags" variable nil (reparse-symbol function_parameters) [1495 1500]))                          )
                        (reparse-symbol indented_block_body) [1456 1913])
                    ("" code nil (reparse-symbol indented_block_body) [1947 1966])
                    ("reboot_vm" function
                       (:documentation "
        虚机重启
        "
                        :arguments 
                          ( ("uuid_string" variable nil (reparse-symbol function_parameters) [1985 1996])
                            ("cif" variable nil (reparse-symbol function_parameters) [1998 2001]))                          )
                        (reparse-symbol indented_block_body) [1971 2290])
                    ("" code nil (reparse-symbol indented_block_body) [2324 2343])
                    ("destroy_vm" function
                       (:documentation "
        虚机断电
        @flags: 取 0 表示等待一段时间后强制中止虚机;
                取 VIR_DOMAIN_DESTROY_GRACEFUL 表示先等待用户关机,
                再销毁虚机, 如果超过时间后还未关机, 则返回一个错误
        "
                        :arguments 
                          ( ("uuid_string" variable nil (reparse-symbol function_parameters) [2363 2374])
                            ("cif" variable nil (reparse-symbol function_parameters) [2376 2379])
                            ("flags" variable nil (reparse-symbol function_parameters) [2386 2391]))                          )
                        (reparse-symbol indented_block_body) [2348 4025])
                    ("" code nil (reparse-symbol indented_block_body) [4060 4079])
                    ("get_vm_domain" function
                       (:documentation "
        获取虚机 xml 描述
        @flags: 0: xml 中不包含安全相关信息;
                VIR_DOMAIN_XML_SECURE: 显示安全相关信息
                VIR_DOMAIN_XML_INACTIVE: 若不包含该标志, 则获取的是当
                                         前运行的虚机描述
                VIR_DOMAIN_XML_UPDATE_CPU: 虚机 CPU 性能会匹配物理机
        "
                        :arguments 
                          ( ("uuid_string" variable nil (reparse-symbol function_parameters) [4102 4113])
                            ("cif" variable nil (reparse-symbol function_parameters) [4115 4118])
                            ("flags" variable nil (reparse-symbol function_parameters) [4125 4130]))                          )
                        (reparse-symbol indented_block_body) [4084 4736])
                    ("" code nil (reparse-symbol indented_block_body) [4770 4789])
                    ("update_device" function
                       (:documentation "
        更新虚机设备配置
        @flags: VIR_DOMAIN_AFFECT_CURRENT: 在当前虚机状态上进行修改, 默认值
                VIR_DOMAIN_AFFECT_LIVE: 在 active 下的虚机上修改, 且该修改不
        会持久化保存到配置文件中
                VIR_DOMAIN_AFFECT_CONFIG: 在持久化的虚机上修改, 如果虚机是临
        时的则报错
        "
                        :arguments 
                          ( ("uuid_string" variable nil (reparse-symbol function_parameters) [4812 4823])
                            ("xml" variable nil (reparse-symbol function_parameters) [4825 4828])
                            ("cif" variable nil (reparse-symbol function_parameters) [4830 4833])
                            ("flags" variable nil (reparse-symbol function_parameters) [4840 4845]))                          )
                        (reparse-symbol indented_block_body) [4794 5550]))                  
                :type "class")
                nil [277 5550]))          
      :file "api.py"
      :pointmax 5550
      :fsize 6071
      :lastmodtime '(23925 61484 0 0)
      :unmatched-syntax '((INDENT_BLOCK 5489 . 5550) (NEWLINE 5488 . 5489) (COLON 5487 . 5488) (AS 5481 . 5483) (INDENT_BLOCK 5333 . 5386) (NEWLINE 5332 . 5333) (COLON 5331 . 5332) (TRY 5229 . 5232) (AS 5325 . 5327) (INDENT_BLOCK 4649 . 4702) (NEWLINE 4648 . 4649) (COLON 4647 . 4648) (TRY 4545 . 4548) (AS 4641 . 4643) (INDENT_BLOCK 3027 . 4025) (NEWLINE 3026 . 3027) (COLON 3025 . 3026) (AS 3019 . 3021) (INDENT_BLOCK 2881 . 2934) (NEWLINE 2880 . 2881) (COLON 2879 . 2880) (TRY 2777 . 2780) (AS 2873 . 2875) (INDENT_BLOCK 2216 . 2269) (NEWLINE 2215 . 2216) (COLON 2214 . 2215) (TRY 2112 . 2115) (AS 2208 . 2210) (INDENT_BLOCK 1827 . 1880) (NEWLINE 1826 . 1827) (COLON 1825 . 1826) (TRY 1723 . 1726) (AS 1819 . 1821)))
    (semanticdb-table "semanticdb-table"
      :file "libvirt_assistant.py"
      :fsize 6719
      :lastmodtime '(23925 61484 0 0)))
  :file "!usr!lib!python3.6!site-packages!rccpxuanyuanbak!virt!libvirt!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
