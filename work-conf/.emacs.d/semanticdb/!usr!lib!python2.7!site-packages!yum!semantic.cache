;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("os" include nil nil [767 776])
            ("glob" include nil nil [777 788])
            ("imp" include nil nil [789 799])
            ("warnings" include nil nil [800 815])
            ("atexit" include nil nil [816 829])
            ("gettext" include nil nil [830 844])
            ("logging" include nil nil [845 859])
            ("logginglevels" include nil nil [860 880])
            ("constants" include nil nil [881 904])
            ("config" include nil nil [905 918])
            ("config" include nil nil [920 965])
            ("Errors" include nil nil [966 979])
            ("parser" include nil nil [980 1017])
            ("textwrap" include nil nil [1019 1044])
            ("fnmatch" include nil nil [1045 1059])
            ("weakref" include nil nil [1061 1097])
            ("yum" include nil nil [1099 1116])
            ("yum.i18n" include nil nil [1118 1149])
            ("API_VERSION" variable nil nil [2506 2525])
            ("DeprecatedInt" type
               (:documentation "A simple int subclass that is used to check when a deprecated
    constant is used.
    "
                :superclasses ("int")
                :type "class")
                nil [2527 2652])
            ("TYPE_CORE" variable nil nil [2668 2681])
            ("TYPE_INTERACTIVE" variable nil nil [2682 2702])
            ("TYPE_INTERFACE" variable nil nil [2703 2736])
            ("ALL_TYPES" variable nil nil [2737 2778])
            ("SLOT_TO_CONDUIT" variable nil nil [2818 3770])
            ("SLOTS" variable nil nil [3799 3837])
            ("PluginYumExit" type
               (:documentation "Exception that can be raised by plugins to signal that yum should stop."
                :superclasses ("Exception")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [4019 4037])
                            ("self" variable nil (reparse-symbol indented_block_body) [4046 4090]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3971 3975])
                            ("value" variable nil (reparse-symbol function_parameters) [3977 3982])
                            ("translation_domain" variable nil (reparse-symbol function_parameters) [3987 4005]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [3958 4091])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4107 4111]))                          )
                        (reparse-symbol indented_block_body) [4095 4267]))                  
                :type "class")
                nil [3839 4267])
            ("YumPlugins" type
               (:documentation "Manager class for Yum plugins."
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("'''Initialise the instance.

        @param base: The
        @param searchpath: A list of paths to look for plugin modules.
        @param optparser: The OptionParser instance for this run (optional).
            Use to allow plugins to extend command line options.
        @param types: A sequence specifying the types of plugins to load.
            This should be sequnce containing one or more of the TYPE_...
            constants. If None (the default), all plugins will be loaded.
        @param pluginconfpath: A list of paths to look for plugin configuration
            files. Defaults to \"/etc/yum/pluginconf.d\".
        '''" code nil (reparse-symbol indented_block_body) [4471 5107])
                            ("if" code nil (reparse-symbol indented_block_body) [5116 5194])
                            ("self" variable nil (reparse-symbol indented_block_body) [5203 5231])
                            ("self" variable nil (reparse-symbol indented_block_body) [5240 5276])
                            ("self" variable nil (reparse-symbol indented_block_body) [5285 5310])
                            ("self" variable nil (reparse-symbol indented_block_body) [5319 5345])
                            ("self" variable nil (reparse-symbol indented_block_body) [5354 5381])
                            ("self" variable nil (reparse-symbol indented_block_body) [5390 5455])
                            ("self" variable nil (reparse-symbol indented_block_body) [5464 5495])
                            ("self" variable nil (reparse-symbol indented_block_body) [5504 5534])
                            ("if" code nil (reparse-symbol indented_block_body) [5543 5591])
                            ("if" code nil (reparse-symbol indented_block_body) [5599 5669])
                            ("if" code nil (reparse-symbol indented_block_body) [5678 5934])
                            ("self" code nil (reparse-symbol indented_block_body) [5943 5969])
                            ("self" variable nil (reparse-symbol indented_block_body) [5979 5997])
                            ("atexit" code nil (reparse-symbol indented_block_body) [6053 6087])
                            ("self" code nil (reparse-symbol indented_block_body) [6155 6173]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4349 4353])
                            ("base" variable nil (reparse-symbol function_parameters) [4355 4359])
                            ("searchpath" variable nil (reparse-symbol function_parameters) [4361 4371])
                            ("optparser" variable nil (reparse-symbol function_parameters) [4373 4382])
                            ("types" variable nil (reparse-symbol function_parameters) [4389 4394])
                            ("pluginconfpath" variable nil (reparse-symbol function_parameters) [4414 4428])
                            ("disabled" variable nil (reparse-symbol function_parameters) [4434 4442])
                            ("enabled" variable nil (reparse-symbol function_parameters) [4448 4455]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [4336 6174])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6187 6191])
                            ("slotname" variable nil (reparse-symbol function_parameters) [6193 6201])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [6203 6211]))                          
                        :documentation "Run all plugin functions for the given slot.

        :param slotname: a string representing the name of the slot to
           run the plugins for
        :param kwargs: keyword arguments that will be simply passed on
           to the plugins
        ")
                        (reparse-symbol indented_block_body) [6179 7113])
                    ("_importplugins" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7137 7141])
                            ("types" variable nil (reparse-symbol function_parameters) [7143 7148]))                          )
                        (reparse-symbol indented_block_body) [7118 9037])
                    ("_plugin_cmdline_match" function
                       (:typemodifiers ("static")
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("modname" variable nil (reparse-symbol function_parameters) [9086 9093])
                            ("plugins" variable nil (reparse-symbol function_parameters) [9095 9102])
                            ("used" variable nil (reparse-symbol function_parameters) [9104 9108]))                          
                        :documentation " Check if this plugin has been temporary enabled/disabled. ")
                        (reparse-symbol indented_block_body) [9042 9390])
                    ("_loadplugin" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9412 9416])
                            ("modulefile" variable nil (reparse-symbol function_parameters) [9418 9428])
                            ("types" variable nil (reparse-symbol function_parameters) [9430 9435]))                          )
                        (reparse-symbol indented_block_body) [9396 13099])
                    ("_getpluginconf" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13123 13127])
                            ("modname" variable nil (reparse-symbol function_parameters) [13129 13136]))                          )
                        (reparse-symbol indented_block_body) [13104 14226])
                    ("setCmdLine" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14246 14250])
                            ("opts" variable nil (reparse-symbol function_parameters) [14252 14256])
                            ("commands" variable nil (reparse-symbol function_parameters) [14258 14266]))                          
                        :documentation "Set the parsed command line options so that plugins can
        access them.

        :param opts: a dictionary containing the values of the command
           line options
        :param commands: a list of command line arguments passed to yum
        ")
                        (reparse-symbol indented_block_body) [14231 14577]))                  
                :type "class")
                nil [4272 14577])
            ("DummyYumPlugins" type
               (:documentation "This class provides basic emulation of the :class:`YumPlugins`
    class. It exists so that calls to plugins.run() don't fail if
    plugins aren't in use.
    "
                :members 
                  ( ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14785 14789])
                            ("args" variable nil (reparse-symbol function_parameters) [14791 14796])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [14798 14806]))                          
                        :documentation "Do nothing.  All arguments are unused.")
                        (reparse-symbol indented_block_body) [14777 14876])
                    ("setCmdLine" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14896 14900])
                            ("args" variable nil (reparse-symbol function_parameters) [14902 14907])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [14909 14917]))                          
                        :documentation "Do nothing.  All arguments are unused.")
                        (reparse-symbol indented_block_body) [14881 14987]))                  
                :type "class")
                nil [14579 14987])
            ("PluginConduit" type
               (:documentation "A conduit class to transfer information between yum and the
    plugin.
    "
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [15148 15169])
                            ("self" variable nil (reparse-symbol indented_block_body) [15178 15195])
                            ("self" variable nil (reparse-symbol indented_block_body) [15204 15221])
                            ("self" variable nil (reparse-symbol indented_block_body) [15231 15276])
                            ("self" variable nil (reparse-symbol indented_block_body) [15285 15346]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15113 15117])
                            ("parent" variable nil (reparse-symbol function_parameters) [15119 15125])
                            ("base" variable nil (reparse-symbol function_parameters) [15127 15131])
                            ("conf" variable nil (reparse-symbol function_parameters) [15133 15137]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [15100 15347])
                    ("info" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15361 15365])
                            ("level" variable nil (reparse-symbol function_parameters) [15367 15372])
                            ("msg" variable nil (reparse-symbol function_parameters) [15374 15377]))                          
                        :documentation "Send an info message to the logger.

        :param level: the level of the message to send
        :param msg: the message to send
        ")
                        (reparse-symbol indented_block_body) [15352 15659])
                    ("error" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15674 15678])
                            ("level" variable nil (reparse-symbol function_parameters) [15680 15685])
                            ("msg" variable nil (reparse-symbol function_parameters) [15687 15690]))                          
                        :documentation "Send an error message to the logger.

        :param level: the level of the message to send
        :param msg: the message to send
        ")
                        (reparse-symbol indented_block_body) [15664 15965])
                    ("promptYN" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15983 15987])
                            ("msg" variable nil (reparse-symbol function_parameters) [15989 15992])
                            ("prompt" variable nil (reparse-symbol function_parameters) [15994 16000]))                          
                        :documentation "Return a yes or no response, either from assumeyes already
        being set, or from prompting the user.

        :param msg: the message to show to the user
        :param prompt: the question to ask the user (optional); defaults to 'Is this ok [y/N]: '
        :return: 1 if the response is yes, and 0 if the response is no
        ")
                        (reparse-symbol indented_block_body) [15970 16638])
                    ("getYumVersion" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16661 16665]))                          
                        :documentation "Return a string representing the current version of yum.")
                        (reparse-symbol indented_block_body) [16643 16790])
                    ("getOptParser" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16812 16816]))                          
                        :documentation "Return the :class:`optparse.OptionParser` instance for this
        execution of Yum.  In the \"config\" and \"init\" slots a plugin
        may add extra options to this instance to extend the command
        line options that Yum exposes.  In all other slots a plugin
        may only read the :class:`OptionParser` instance.  Any
        modification of the instance at this point will have no
        effect.  See the
        :func:`PreRepoSetupPluginConduit.getCmdLine` method for
        details on how to retrieve the parsed values of command line
        options.

        :return: the global :class:`optparse.OptionParser` instance used by
           Yum. May be None if an OptionParser isn't in use
        ")
                        (reparse-symbol indented_block_body) [16795 17721])
                    ("confString" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17741 17745])
                            ("section" variable nil (reparse-symbol function_parameters) [17747 17754])
                            ("opt" variable nil (reparse-symbol function_parameters) [17756 17759])
                            ("default" variable nil (reparse-symbol function_parameters) [17761 17768]))                          
                        :documentation "Read a string value from the plugin's own configuration file.

        :param section: configuration file section to read
        :param opt: option name to read
        :param default: value to read if the option is missing
        :return: string option value read, or default if option was missing
        ")
                        (reparse-symbol indented_block_body) [17726 18219])
                    ("confInt" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18236 18240])
                            ("section" variable nil (reparse-symbol function_parameters) [18242 18249])
                            ("opt" variable nil (reparse-symbol function_parameters) [18251 18254])
                            ("default" variable nil (reparse-symbol function_parameters) [18256 18263]))                          
                        :documentation "Read an integer value from the plugin's own configuration file.

        :param section: configuration file section to read
        :param opt: option name to read
        :param default: value to read if the option is missing

        :return: the integer option value read, or *default* if the
            option was missing or could not be parsed
        ")
                        (reparse-symbol indented_block_body) [18224 18729])
                    ("confFloat" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18748 18752])
                            ("section" variable nil (reparse-symbol function_parameters) [18754 18761])
                            ("opt" variable nil (reparse-symbol function_parameters) [18763 18766])
                            ("default" variable nil (reparse-symbol function_parameters) [18768 18775]))                          
                        :documentation "Read a float value from the plugin's own configuration file.

        :param section: configuration file section to read
        :param opt: option name to read
        :param default: value to read if the option is missing
        :return: float option value read, or *default* if the option was
            missing or could not be parsed
        ")
                        (reparse-symbol indented_block_body) [18734 19233])
                    ("confBool" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19251 19255])
                            ("section" variable nil (reparse-symbol function_parameters) [19257 19264])
                            ("opt" variable nil (reparse-symbol function_parameters) [19266 19269])
                            ("default" variable nil (reparse-symbol function_parameters) [19271 19278]))                          
                        :documentation "Read a boolean value from the plugin's own configuration file

        :param section: configuration file section to read
        :param opt: option name to read
        :param default: value to read if the option is missing
        :return: boolean option value read, or *default* if the option
            was missing or could not be parsed
        ")
                        (reparse-symbol indented_block_body) [19238 19738])
                    ("confList" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19756 19760])
                            ("section" variable nil (reparse-symbol function_parameters) [19762 19769])
                            ("opt" variable nil (reparse-symbol function_parameters) [19771 19774])
                            ("default" variable nil (reparse-symbol function_parameters) [19776 19783]))                          
                        :documentation "Read a boolean value from the plugin's own configuration file

        :param section: configuration file section to read
        :param opt: option name to read
        :param default: value to read if the option is missing
        :return: boolean option value read, or *default* if the option
            was missing or could not be parsed
        ")
                        (reparse-symbol indented_block_body) [19743 20243])
                    ("registerPackageName" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20272 20276])
                            ("name" variable nil (reparse-symbol function_parameters) [20278 20282]))                          
                        :documentation "Register the name of a package to use.

        :param name: the name of the package to register
        ")
                        (reparse-symbol indented_block_body) [20248 20457]))                  
                :type "class")
                nil [14988 20457])
            ("ConfigPluginConduit" type
               (:documentation "A conduit for use in the config slot."
                :superclasses ("PluginConduit")
                :members 
                  ( ("registerOpt" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20570 20574])
                            ("name" variable nil (reparse-symbol function_parameters) [20576 20580])
                            ("valuetype" variable nil (reparse-symbol function_parameters) [20582 20591])
                            ("where" variable nil (reparse-symbol function_parameters) [20593 20598])
                            ("default" variable nil (reparse-symbol function_parameters) [20600 20607]))                          
                        :documentation "Deprecated.  Register a yum configuration file option.

        :param name: name of the new option
        :param valuetype: option type (PLUG_OPT_BOOL, PLUG_OPT_STRING, etc.)
        :param where: where the option should be available in the config file
            (PLUG_OPT_WHERE_MAIN, PLUG_OPT_WHERE_REPO, etc)
        :param default: default value for the option if it is not set by the user
        ")
                        (reparse-symbol indented_block_body) [20554 21889])
                    ("registerCommand" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21914 21918])
                            ("command" variable nil (reparse-symbol function_parameters) [21920 21927]))                          
                        :documentation "Register a new command.

        :param command: the command to register
        :raises: :class:`yum.Errors.ConfigError` if the registration
           of commands is not supported
        ")
                        (reparse-symbol indented_block_body) [21894 22330]))                  
                :type "class")
                nil [20459 22330])
            ("PostConfigPluginConduit" type
               (:documentation "Conduit for use in the postconfig slot."
                :superclasses ("ConfigPluginConduit")
                :members 
                  ( ("getConf" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22450 22454]))                          
                        :documentation "Return a dictionary containing the values of the
        configuration options.

        :return: a dictionary containing the values of the
           configuration options
        ")
                        (reparse-symbol indented_block_body) [22438 22684]))                  
                :type "class")
                nil [22331 22684])
            ("InitPluginConduit" type
               (:documentation "Conduit for use in the init slot."
                :superclasses ("PluginConduit")
                :members 
                  ( ("getConf" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22786 22790]))                          
                        :documentation "Return a dictionary containing the values of the
        configuration options.

        :return: a dictionary containing the values of the
           configuration options
        ")
                        (reparse-symbol indented_block_body) [22774 23020])
                    ("getRepos" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23038 23042]))                          
                        :documentation "Return Yum's container object for all configured repositories.

        :return: Yum's :class:`yum.repos.RepoStorage` instance
        ")
                        (reparse-symbol indented_block_body) [23025 23227]))                  
                :type "class")
                nil [22685 23227])
            ("ArgsPluginConduit" type
               (:documentation "Conduit for dealing with command line arguments."
                :superclasses ("InitPluginConduit")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("InitPluginConduit" code nil (reparse-symbol indented_block_body) [23390 23442])
                            ("self" variable nil (reparse-symbol indented_block_body) [23451 23468]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23349 23353])
                            ("parent" variable nil (reparse-symbol function_parameters) [23355 23361])
                            ("base" variable nil (reparse-symbol function_parameters) [23363 23367])
                            ("conf" variable nil (reparse-symbol function_parameters) [23369 23373])
                            ("args" variable nil (reparse-symbol function_parameters) [23375 23379]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [23336 23469])
                    ("getArgs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23486 23490]))                          
                        :documentation "Return a list of the command line arguments passed to yum.

        :return: a list of the command line arguments passed to yum
        ")
                        (reparse-symbol indented_block_body) [23474 23670]))                  
                :type "class")
                nil [23228 23670])
            ("PreRepoSetupPluginConduit" type
               (:documentation "Conduit for use in the prererosetup slot."
                :superclasses ("InitPluginConduit")
                :members 
                  ( ("getCmdLine" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23796 23800]))                          
                        :documentation "Return parsed command line options.

        :return: (options, commands) as returned by :class:`OptionParser.parse_args()`
        ")
                        (reparse-symbol indented_block_body) [23781 23986])
                    ("getRpmDB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24004 24008]))                          
                        :documentation "Return a representation of the local RPM database. This
        allows querying of installed packages.

        :return: a :class:`yum.rpmUtils.RpmDBHolder` instance
        ")
                        (reparse-symbol indented_block_body) [23991 24232]))                  
                :type "class")
                nil [23671 24232])
            ("PostRepoSetupPluginConduit" type
               (:documentation "Conduit for use in the postreposetup slot."
                :superclasses ("PreRepoSetupPluginConduit")
                :members 
                  ( ("getGroups" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24366 24370]))                          
                        :documentation "Return group information.

        :return: :class:`yum.comps.Comps` instance
        ")
                        (reparse-symbol indented_block_body) [24352 24506]))                  
                :type "class")
                nil [24233 24506])
            ("DownloadPluginConduit" type
               (:documentation "Conduit for use in the download slots."
                :superclasses ("PostRepoSetupPluginConduit")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("PostRepoSetupPluginConduit" code nil (reparse-symbol indented_block_body) [24688 24749])
                            ("self" variable nil (reparse-symbol indented_block_body) [24758 24781])
                            ("self" variable nil (reparse-symbol indented_block_body) [24790 24811]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24631 24635])
                            ("parent" variable nil (reparse-symbol function_parameters) [24637 24643])
                            ("base" variable nil (reparse-symbol function_parameters) [24645 24649])
                            ("conf" variable nil (reparse-symbol function_parameters) [24651 24655])
                            ("pkglist" variable nil (reparse-symbol function_parameters) [24657 24664])
                            ("errors" variable nil (reparse-symbol function_parameters) [24666 24672]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [24618 24812])
                    ("getDownloadPackages" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24841 24845]))                          
                        :documentation "Return a list of package objects representing packages to be
        downloaded.

        :return: a list of package object representing packages to be
           downloaded
        ")
                        (reparse-symbol indented_block_body) [24817 25074])
                    ("getErrors" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25093 25097]))                          
                        :documentation "Return a dictionary of download errors. 
        
        :return: a dictionary of download errors. This dictionary is
           indexed by package object. Each element is a list of
           strings describing the error
        ")
                        (reparse-symbol indented_block_body) [25079 25425]))                  
                :type "class")
                nil [24507 25425])
            ("MainPluginConduit" type
               (:documentation "Main conduit class for plugins.  Many other conduit classes
    will inherit from this class.
    "
                :superclasses ("PostRepoSetupPluginConduit")
                :members 
                  ( ("getPackages" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25608 25612])
                            ("repo" variable nil (reparse-symbol function_parameters) [25614 25618]))                          
                        :documentation "Return a list of packages.

        :param repo: the repo to return a packages from
        :return: a list of package objects
        ")
                        (reparse-symbol indented_block_body) [25592 25910])
                    ("getPackageByNevra" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25937 25941])
                            ("nevra" variable nil (reparse-symbol function_parameters) [25943 25948]))                          
                        :documentation "Retrieve a package object from the packages loaded by Yum using
        nevra information.
        
        :param nevra: a tuple holding (name, epoch, version, release, arch)
            for a package
        :return: a :class:`yum.packages.PackageObject` instance (or subclass)
        ")
                        (reparse-symbol indented_block_body) [25915 26304])
                    ("delPackage" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26324 26328])
                            ("po" variable nil (reparse-symbol function_parameters) [26330 26332]))                          
                        :documentation "Delete the given package from the package sack.

        :param po: the package object to delete
        ")
                        (reparse-symbol indented_block_body) [26309 26491])
                    ("getTsInfo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26510 26514]))                          
                        :documentation "Return transaction set.

        :return: the transaction set
        ")
                        (reparse-symbol indented_block_body) [26496 26635]))                  
                :type "class")
                nil [25426 26635])
            ("DepsolvePluginConduit" type
               (:documentation "Conduit for use in solving dependencies."
                :superclasses ("MainPluginConduit")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("MainPluginConduit" code nil (reparse-symbol indented_block_body) [26815 26867])
                            ("self" variable nil (reparse-symbol indented_block_body) [26876 26901])
                            ("self" variable nil (reparse-symbol indented_block_body) [26910 26938]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26753 26757])
                            ("parent" variable nil (reparse-symbol function_parameters) [26759 26765])
                            ("base" variable nil (reparse-symbol function_parameters) [26767 26771])
                            ("conf" variable nil (reparse-symbol function_parameters) [26773 26777])
                            ("rescode" variable nil (reparse-symbol function_parameters) [26779 26786])
                            ("restring" variable nil (reparse-symbol function_parameters) [26793 26801]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [26740 26939])
                    ("missing_requires" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26979 26983]))                          
                        :documentation "Boolean indicating if depsolving failed due to missing dependencies.")
                        (reparse-symbol indented_block_body) [26944 27113])
                    ("pretty_output_restring" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [27145 27149]))                          )
                        (reparse-symbol indented_block_body) [27118 27263]))                  
                :type "class")
                nil [26636 27263])
            ("CompareProvidersPluginConduit" type
               (:documentation "Conduit to compare different providers of packages."
                :superclasses ("MainPluginConduit")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("MainPluginConduit" code nil (reparse-symbol indented_block_body) [27466 27518])
                            ("self" variable nil (reparse-symbol indented_block_body) [27527 27557])
                            ("self" variable nil (reparse-symbol indented_block_body) [27566 27584]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [27400 27404])
                            ("parent" variable nil (reparse-symbol function_parameters) [27406 27412])
                            ("base" variable nil (reparse-symbol function_parameters) [27414 27418])
                            ("conf" variable nil (reparse-symbol function_parameters) [27420 27424])
                            ("providers_dict" variable nil (reparse-symbol function_parameters) [27426 27440])
                            ("reqpo" variable nil (reparse-symbol function_parameters) [27445 27450]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [27387 27585]))                  
                :type "class")
                nil [27264 27585])
            ("HistoryPluginConduit" type
               (:documentation "Conduit to access information about the yum history."
                :superclasses ("MainPluginConduit")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("MainPluginConduit" code nil (reparse-symbol indented_block_body) [27776 27828])
                            ("self" variable nil (reparse-symbol indented_block_body) [27837 27870]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [27714 27718])
                            ("parent" variable nil (reparse-symbol function_parameters) [27720 27726])
                            ("base" variable nil (reparse-symbol function_parameters) [27728 27732])
                            ("conf" variable nil (reparse-symbol function_parameters) [27734 27738])
                            ("rescode" variable nil (reparse-symbol function_parameters) [27740 27747])
                            ("restring" variable nil (reparse-symbol function_parameters) [27754 27762]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [27701 27871]))                  
                :type "class")
                nil [27586 27871])
            ("VerifyPluginConduit" type
               (:documentation "Conduit to verify packages."
                :superclasses ("MainPluginConduit")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("MainPluginConduit" code nil (reparse-symbol indented_block_body) [28025 28077])
                            ("self" variable nil (reparse-symbol indented_block_body) [28086 28122]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [27974 27978])
                            ("parent" variable nil (reparse-symbol function_parameters) [27980 27986])
                            ("base" variable nil (reparse-symbol function_parameters) [27988 27992])
                            ("conf" variable nil (reparse-symbol function_parameters) [27994 27998])
                            ("verify_package" variable nil (reparse-symbol function_parameters) [28000 28014]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [27961 28123]))                  
                :type "class")
                nil [27872 28123])
            ("parsever" function
               (:documentation "Parse a string representing an api version.

    :param apiver: a string representing an api version
    :return: a tuple containing the major and minor version numbers
    "
                :arguments 
                  ( ("apiver" variable nil (reparse-symbol function_parameters) [28137 28143]))                  )
                nil [28124 28393])
            ("apiverok" function
               (:documentation "Return true if API version \"a\" supports API version \"b\"

    :param a: a string representing an api version
    :param b: a string representing an api version

    :return: whether version *a* supports version *b*
    "
                :arguments 
                  ( ("a" variable nil (reparse-symbol function_parameters) [28407 28408])
                    ("b" variable nil (reparse-symbol function_parameters) [28410 28411]))                  )
                nil [28394 28775]))          
      :file "plugins.py"
      :pointmax 28775
      :fsize 28774
      :lastmodtime '(23519 41653 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :file "logginglevels.py"
      :fsize 8094
      :lastmodtime '(23519 41653 0 0))
    (semanticdb-table "semanticdb-table"
      :file "constants.py"
      :fsize 4624
      :lastmodtime '(23519 41653 0 0))
    (semanticdb-table "semanticdb-table"
      :file "config.py"
      :fsize 51083
      :lastmodtime '(23519 41653 0 0))
    (semanticdb-table "semanticdb-table"
      :file "Errors.py"
      :fsize 4367
      :lastmodtime '(23519 41653 0 0))
    (semanticdb-table "semanticdb-table"
      :file "parser.py"
      :fsize 8164
      :lastmodtime '(23519 41653 0 0))
    (semanticdb-table "semanticdb-table"
      :file "i18n.py"
      :fsize 20927
      :lastmodtime '(23519 41653 0 0)))
  :file "!usr!lib!python2.7!site-packages!yum!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
