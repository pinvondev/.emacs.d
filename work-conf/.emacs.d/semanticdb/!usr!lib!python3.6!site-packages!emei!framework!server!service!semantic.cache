;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"
serverbase.py
\"\"\"" code nil nil [72 93])
            ("enum" include nil nil [96 117])
            ("emei.framework.exceptions" include nil nil [119 172])
            ("ServerType" type
               (:documentation "
    servicer类型枚举
    "
                :superclasses ("Enum")
                :members 
                  ( ("rest" variable nil (reparse-symbol indented_block_body) [236 249])
                    ("rpc" variable nil (reparse-symbol indented_block_body) [254 265])
                    ("notify" variable nil (reparse-symbol indented_block_body) [270 287]))                  
                :type "class")
                nil [175 288])
            ("RPCKey" type
               (:documentation "
    为RPCApi包装namespace, version, func, 实现自定义对象作为字典(proxy_endpoint)的key
    "
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [464 490])
                            ("self" variable nil (reparse-symbol indented_block_body) [499 521])
                            ("self" variable nil (reparse-symbol indented_block_body) [530 546]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [408 412])
                            ("namespace" variable nil (reparse-symbol function_parameters) [414 423])
                            ("version" variable nil (reparse-symbol function_parameters) [430 437])
                            ("func" variable nil (reparse-symbol function_parameters) [444 448]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [395 547])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [565 569]))                          )
                        (reparse-symbol indented_block_body) [552 635])
                    ("__eq__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [651 655])
                            ("other" variable nil (reparse-symbol function_parameters) [657 662]))                          )
                        (reparse-symbol indented_block_body) [640 787]))                  
                :type "class")
                nil [290 787])
            ("ServerKey" type
               (:documentation "
    为server包装[type, name], 实现自定义对象作为字典(server)的key
    "
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [934 964])
                            ("self" variable nil (reparse-symbol indented_block_body) [973 989]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [890 894])
                            ("server_type" variable nil (reparse-symbol function_parameters) [896 907])
                            ("name" variable nil (reparse-symbol function_parameters) [914 918]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [877 990])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1008 1012]))                          )
                        (reparse-symbol indented_block_body) [995 1066])
                    ("__eq__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1082 1086])
                            ("other" variable nil (reparse-symbol function_parameters) [1088 1093]))                          )
                        (reparse-symbol indented_block_body) [1071 1176]))                  
                :type "class")
                nil [789 1176])
            ("ServerBase" type
               (:documentation "
    ServerBase  server通用参数
    "
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("\"\"\"
        :param name: server name
        :param conf:  oslo.conf cfg对象
        :param group_name:  配置文件标签名
        :param server_type:  server type [\"Rest\", \"RPC\" ,\"Notify\"]
        \"\"\"" code nil (reparse-symbol indented_block_body) [1308 1497])
                            ("self" variable nil (reparse-symbol indented_block_body) [1506 1522])
                            ("self" variable nil (reparse-symbol indented_block_body) [1531 1561])
                            ("self" variable nil (reparse-symbol indented_block_body) [1570 1586])
                            ("self" variable nil (reparse-symbol indented_block_body) [1595 1651])
                            ("self" variable nil (reparse-symbol indented_block_body) [1661 1689])
                            ("self" variable nil (reparse-symbol indented_block_body) [1698 1712])
                            ("self" variable nil (reparse-symbol indented_block_body) [1734 1755]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1256 1260])
                            ("name" variable nil (reparse-symbol function_parameters) [1262 1266])
                            ("conf" variable nil (reparse-symbol function_parameters) [1268 1272])
                            ("group_name" variable nil (reparse-symbol function_parameters) [1274 1284])
                            ("server_type" variable nil (reparse-symbol function_parameters) [1286 1297]))                          
                        :documentation "
        :param name: server name
        :param conf:  oslo.conf cfg对象
        :param group_name:  配置文件标签名
        :param server_type:  server type [\"Rest\", \"RPC\" ,\"Notify\"]
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1243 1756])
                    ("get_key" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1773 1777]))                          
                        :documentation "
        获取服务器类型key
        :return:
        ")
                        (reparse-symbol indented_block_body) [1761 1864])
                    ("add_api" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1881 1885])
                            ("api" variable nil (reparse-symbol function_parameters) [1887 1890]))                          
                        :documentation "
        注册api到server中
        :param api:
        :return:
        ")
                        (reparse-symbol indented_block_body) [1869 2386])
                    ("register_proxy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2410 2414])
                            ("api" variable nil (reparse-symbol function_parameters) [2416 2419]))                          
                        :documentation "
        将api中的proxy_endpoint注册到server handler对象中
        :param api:
        :return:
        ")
                        (reparse-symbol indented_block_body) [2391 2566])
                    ("start" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2581 2585]))                          )
                        (reparse-symbol indented_block_body) [2571 2622])
                    ("stop" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2636 2640]))                          )
                        (reparse-symbol indented_block_body) [2627 2677])
                    ("is_alive" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2695 2699]))                          )
                        (reparse-symbol indented_block_body) [2682 2736]))                  
                :type "class")
                nil [1178 2736]))          
      :file "serverbase.py"
      :pointmax 2736
      :fsize 3383
      :lastmodtime '(23927 26433 290184 355000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"
notifyserver.py
\"\"\"" code nil nil [67 90])
            ("json" include nil nil [92 103])
            ("emei.framework.server.service.serverbase" include nil nil [104 185])
            ("emei.framework.exceptions" include nil nil [186 257])
            ("emei.framework.message" include nil nil [258 304])
            ("emei.framework.server.service.serverbase" include nil nil [305 367])
            ("emei.framework.utils" include nil nil [368 408])
            ("emei.framework.server.service.notifydriver.rccpnotifyserver" include nil nil [409 501])
            ("emei.utils.rccp_log" include nil nil [502 537])
            ("NotifyHandler" type
               (:documentation "
    NotifyHandler处理类 解析header中的publish_id 分发到对应proxy处理
    "
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [664 685]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [649 653]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [636 686])
                    ("check_message" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("message" variable nil (reparse-symbol function_parameters) [727 734]))                          
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [691 921])
                    ("__call__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [939 943])
                            ("body" variable nil (reparse-symbol function_parameters) [945 949]))                          
                        :documentation "
        hander 根据api_group_name 定位对应的proxy
        :param body:
        :return:
        ")
                        (reparse-symbol indented_block_body) [926 2136]))                  
                :type "class")
                nil [540 2136])
            ("NotifyServer" type
               (:documentation "
    NotifyServer notify服务子类
    "
                :superclasses ("ServerBase")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [2270 2396])
                            ("self" variable nil (reparse-symbol indented_block_body) [2405 2423])
                            ("self" variable nil (reparse-symbol indented_block_body) [2432 2462])
                            ("self" variable nil (reparse-symbol indented_block_body) [2471 2487]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2231 2235])
                            ("name" variable nil (reparse-symbol function_parameters) [2237 2241])
                            ("conf" variable nil (reparse-symbol function_parameters) [2243 2247])
                            ("group_name" variable nil (reparse-symbol function_parameters) [2249 2259]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [2218 2488])
                    ("_check_opts" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("opts" variable nil (reparse-symbol function_parameters) [2586 2590]))                          
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [2552 2730])
                    ("get_configuration_options" function
                       (:typemodifiers ("static")
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("conf_global" variable nil (reparse-symbol function_parameters) [2783 2794])
                            ("conf_server" variable nil (reparse-symbol function_parameters) [2796 2807]))                          
                        :documentation "
        获取配置
        :param conf_global: 配置文件标签为global信息标签
        :param conf_server: 配置文件标签为对应server信息标签
        :return: 返回配置
        ")
                        (reparse-symbol indented_block_body) [2735 3594])
                    ("register_proxy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3618 3622])
                            ("api" variable nil (reparse-symbol function_parameters) [3624 3627]))                          
                        :documentation "
        注册代理
        :param api:
        :return:
        ")
                        (reparse-symbol indented_block_body) [3599 4316])
                    ("_get_event_list" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4341 4345]))                          )
                        (reparse-symbol indented_block_body) [4321 4691])
                    ("is_alive" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4709 4713]))                          )
                        (reparse-symbol indented_block_body) [4696 4811])
                    ("start" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4826 4830]))                          
                        :documentation "
        开一个线程启动服务
        :return:
        ")
                        (reparse-symbol indented_block_body) [4816 6273])
                    ("stop" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6287 6291]))                          )
                        (reparse-symbol indented_block_body) [6278 6682]))                  
                :type "class")
                nil [2138 6682]))          
      :file "notifyserver.py"
      :pointmax 6682
      :fsize 7105
      :lastmodtime '(23927 26433 288184 309000)
      :unmatched-syntax '((INDENT_BLOCK 6602 . 6682) (NEWLINE 6601 . 6602) (COLON 6600 . 6601) (AS 6596 . 6598) (EXCEPT 6579 . 6585) (INDENT_BLOCK 6451 . 6571) (NEWLINE 6450 . 6451) (COLON 6449 . 6450) (TRY 6348 . 6351) (AS 6445 . 6447) (INDENT_BLOCK 6004 . 6273) (NEWLINE 6003 . 6004) (COLON 6002 . 6003) (TRY 5934 . 5937) (AS 5996 . 5998) (NAME 1531 . 1538) (IF 1563 . 1565) (ELSE 1590 . 1594) (NAME 1429 . 1439) (IF 1481 . 1483) (ELSE 1511 . 1515))))
  :file "!usr!lib!python3.6!site-packages!emei!framework!server!service!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
